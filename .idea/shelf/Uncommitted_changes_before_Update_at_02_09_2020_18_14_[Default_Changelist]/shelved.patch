Index: src/Window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import content.AudioMaster;\r\nimport content.Source;\r\nimport content.Storage;\r\nimport content.Texture;\r\nimport math.AABB;\r\nimport math.CollisionMessage;\r\nimport mobs.*;\r\nimport objects.*;\r\nimport objects.Object;\r\nimport org.lwjgl.glfw.*;\r\nimport org.lwjgl.opengl.*;\r\nimport org.lwjgl.system.*;\r\nimport singletons.SingletonMobs;\r\nimport singletons.SingletonPlayer;\r\n\r\nimport java.nio.*;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\nimport static org.lwjgl.glfw.Callbacks.*;\r\nimport static org.lwjgl.glfw.GLFW.*;\r\nimport static org.lwjgl.opengl.GL11.*;\r\nimport static org.lwjgl.system.MemoryStack.*;\r\nimport static org.lwjgl.system.MemoryUtil.*;\r\n\r\npublic class Window {\r\n    private long window;\r\n    SingletonMobs singletonMobs;\r\n    SingletonPlayer singletonPlayer;\r\n    private ArrayList<Object> firstLevelObjectList;\r\n    private ArrayList<Object> secondLevelObjectList;\r\n    private ArrayList<Object> thirdLevelObjectList;\r\n    private ArrayList<Object> forthLevelObjectList;\r\n    private ArrayList<Object> shopObjectList;\r\n    private HashMap<String, Integer> textureMap;\r\n    private HashMap<String, Integer> soundMap;\r\n    private HashMap<String, AABB> aabbMap;\r\n    private Source backgroundMusic, armorChange, coinSound, potionSound, doorSound, containerSound, beerSound;\r\n    private Coin coinGUI;\r\n    private Shop shop;\r\n    private Blacksmith blacksmith;\r\n    private Waiter waiter;\r\n    private String level = \"MainMenu\";\r\n    private boolean canChangeLevel = false;\r\n    private int deathsCounter = 0;\r\n    boolean key_E_Pressed = false;\r\n    boolean forMainMenu = true;\r\n    private boolean firstLevelMobSpawning, secondLevelMobSpawning, fourthLevelMobSpawning = false;\r\n    private boolean firstLevelMobSpawningStopped, secondLevelMobSpawningStopped, fourthLevelMobSpawningStopped = false;\r\n    private int time = 0;\r\n    private Timer mobTimer = new Timer();\r\n    private TimerTask mobSpawnTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            time++;\r\n            if (time == 5) {\r\n                firstLevelMobSpawningStopped = true;\r\n                stopMobSpawn();\r\n            }\r\n            SingletonMobs.mobList.add(new Slime(470, 288, 1, 50, 0, 5));\r\n        }\r\n    };\r\n\r\n    private void stopMobSpawn() {\r\n        time = 0;\r\n        mobTimer.cancel();\r\n        mobTimer.purge();\r\n        mobTimer = new Timer();\r\n        mobSpawnTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                time++;\r\n                if (level.equals(\"FirstLevel\")) {\r\n                    SingletonMobs.mobList.add(new Slime(470, 288, 1, 50, 0, 5));\r\n                    if (time == 5) {\r\n                        firstLevelMobSpawningStopped = true;\r\n                        stopMobSpawn();\r\n                    }\r\n                }\r\n                if (level.equals(\"SecondLevel\")) {\r\n                    SingletonMobs.mobList.add(new Spider(477, 284, 1, 60, 0, 10));\r\n                    if (time == 3) {\r\n                        secondLevelMobSpawningStopped = true;\r\n                        stopMobSpawn();\r\n                    }\r\n                }\r\n                else if (level.equals(\"ForthLevel\")) {\r\n                    SingletonMobs.mobList.add(new Imp(477, 284, 1, 100, 0, 50));\r\n                    if (time == 1) {\r\n                        fourthLevelMobSpawningStopped = true;\r\n                        stopMobSpawn();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    public void run() {\r\n        System.out.println(\"Игра запущена\");\r\n\r\n        init();\r\n        loop();\r\n\r\n        glfwFreeCallbacks(window);\r\n        glfwDestroyWindow(window);\r\n\r\n        glfwTerminate();\r\n        glfwSetErrorCallback(null).free();\r\n    }\r\n\r\n    private void init() {\r\n        GLFWErrorCallback.createPrint(System.err).set();\r\n        if (!glfwInit()) throw new IllegalStateException(\"Unable to initialize GLFW\");\r\n\r\n        // Работа с экраном\r\n        window = glfwCreateWindow(1920, 1080, \"Philistine\", glfwGetPrimaryMonitor(), NULL);\r\n        if (window == NULL) throw new RuntimeException(\"Failed to create the GLFW window\");\r\n        try (MemoryStack stack = stackPush()) {\r\n            IntBuffer pWidth = stack.mallocInt(1);\r\n            IntBuffer pHeight = stack.mallocInt(1);\r\n            glfwGetWindowSize(window, pWidth, pHeight);\r\n            GLFWVidMode vidMode = glfwGetVideoMode(glfwGetPrimaryMonitor());\r\n            glfwSetWindowPos(window, (vidMode.width() - pWidth.get(0)) / 2, ((vidMode.height() - pHeight.get(0)) / 2) - 10);\r\n        }\r\n        glfwMakeContextCurrent(window);\r\n        glfwSwapInterval(1);\r\n        glfwShowWindow(window);\r\n\r\n        // Работа с OpenGL\r\n        GL.createCapabilities(); // создает instance для OpenGL в текущем потоке\r\n        glMatrixMode(GL_PROJECTION); // Выставление камеры\r\n        glLoadIdentity(); // По видимости ненужная строка(что-то с единичной матрицей)\r\n        glOrtho(0, 640, 360, 0, 1, -1); // Камера на место окна\r\n        glMatrixMode(GL_MODELVIEW); // Установка матрицы в состояние ModelView\r\n        glEnable(GL_TEXTURE_2D); // Включить 2D текстуры\r\n        glEnable(GL_BLEND); // Включить смешивание цветов\r\n        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); // Добавляет прозрачность\r\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\r\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\r\n\r\n        // Инициализация звуковых источников\r\n        AudioMaster.init();\r\n        AudioMaster.setListenerData();\r\n        backgroundMusic = new Source(1);\r\n        armorChange = new Source(0);\r\n        coinSound = new Source(0);\r\n        potionSound = new Source(0);\r\n        beerSound = new Source(0);\r\n        doorSound = new Source(0);\r\n        containerSound = new Source(0);\r\n        coinGUI = new Coin(\"coin_01\", true, false, 0, 0, 0, 0, new AABB());\r\n        coinGUI.getTimer().schedule(coinGUI.getAnimationTask(), 0, 120);\r\n\r\n        // Инициализация всех коллекций\r\n        singletonPlayer = SingletonPlayer.getInstance();\r\n        singletonMobs = SingletonMobs.getInstance();\r\n        textureMap = new HashMap<String, Integer>();\r\n        soundMap = new HashMap<String, Integer>();\r\n        aabbMap = new HashMap<String, AABB>();\r\n        firstLevelObjectList = new ArrayList<Object>();\r\n        secondLevelObjectList = new ArrayList<Object>();\r\n        thirdLevelObjectList = new ArrayList<>();\r\n        forthLevelObjectList = new ArrayList<>();\r\n        shopObjectList = new ArrayList<>();\r\n\r\n        // Единичная загрузка всех текстур\r\n        for (int i = 0, id = 0; i < Storage.textureString.length; i++)\r\n            textureMap.put(Storage.textureString[i], id = Texture.loadTexture(\"textures/\" + Storage.textureString[i]));\r\n\r\n        // Единичная загрузка всех звуков\r\n        for (int i = 0, id = 0; i < Storage.soundString.length; i++)\r\n            soundMap.put(Storage.soundString[i], id = AudioMaster.loadSound(\"sounds/\" + Storage.soundString[i]));\r\n\r\n        // Единичная загрузка всех хитбоксов\r\n        for (int i = 0; i < Storage.aabbString.length; i++)\r\n            aabbMap.put(Storage.aabbString[i], new AABB());\r\n\r\n        // Единичная инициализация переходов м/у уровнями\r\n        aabbMap.get(\"entranceToFirstLevel\").update(0, 190, 2, 286);\r\n        aabbMap.get(\"entranceToSecondLevel\").update(626, 237, 640, 335);\r\n        aabbMap.get(\"entranceToThirdLevel\").update(197, 104, 237, 107);\r\n        aabbMap.get(\"entranceToForthLevel\").update(247, 124, 283, 127);\r\n        aabbMap.get(\"entranceFromThirdToSecondLevel\").update(249, 134, 288, 146);\r\n        aabbMap.get(\"entranceFromForthToSecondLevel\").update(199, 108, 236, 112);\r\n        aabbMap.get(\"entranceFromFourthToTownLevel\").update(292, 356, 339, 359);\r\n        aabbMap.get(\"entranceFromTavernToTown\").update(224, 316, 255, 318);\r\n        aabbMap.get(\"entranceFromForgeToTown\").update(384, 316, 415, 318);\r\n        aabbMap.get(\"toBuyBeer\").update(224, 240, 255, 255);\r\n\r\n        addAllObjects();\r\n        shop = new Shop();\r\n        waiter = new Waiter(168, 136, 1);\r\n        blacksmith = new Blacksmith(176, 126, 1);\r\n        SingletonMobs.mobList.add(SingletonPlayer.player);\r\n\r\n        // Обработка единичного нажатий клавиш\r\n        glfwSetKeyCallback(window, (window, key, scancode, action, mods) -> {\r\n            // Нажатие Escape\r\n            if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS && !level.equals(\"MainMenu\")) {\r\n                switch (SingletonPlayer.player.getMenuChoice()) {\r\n                    case \"Resume\":\r\n                    case \"Options\":\r\n                    case \"Exit\": {\r\n                        SingletonPlayer.player.setScrollMenu(!SingletonPlayer.player.isScrollMenu());\r\n                        break;\r\n                    }\r\n                    case \"Options_Sounds\":\r\n                    case \"Options_Controls\": {\r\n                        SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                        break;\r\n                    }\r\n                    case \"Controls\": {\r\n                        SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Нажатие Е\r\n            if (key == GLFW_KEY_E && action == GLFW_PRESS && !level.equals(\"MainMenu\")) key_E_Pressed = true;\r\n\r\n            // Нажатие Enter\r\n            if (key == GLFW_KEY_ENTER && action == GLFW_PRESS) {\r\n                // Выход из главного меню\r\n                if (level.equals(\"MainMenu\")) {\r\n                    level = \"Town\";\r\n                    backgroundMusic.stop(soundMap.get(\"mainMenuTheme\"));\r\n                    backgroundMusic.play(soundMap.get(\"townTheme\"));\r\n                    backgroundMusic.changeVolume(0.02f);\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu()) {\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setScrollMenu(false);\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Controls\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            AudioMaster.destroy();\r\n                            glfwSetWindowShouldClose(window, true);\r\n                            for (Mob mob : SingletonMobs.mobList) {\r\n                                if (!mob.isDead()) {\r\n                                    mob.getTimer().cancel();\r\n                                    mob.getTimer().purge();\r\n                                }\r\n                            }\r\n                            for (Object object : firstLevelObjectList) {\r\n                                if (object instanceof Coin) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                }\r\n                            }\r\n                            System.exit(0);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble()) {\r\n                    SingletonPlayer.player.setX(SingletonPlayer.player.getX() - 1);\r\n                    SingletonPlayer.player.setDialogBubble(false);\r\n                    if (SingletonPlayer.player.isDialogBubbleChoice()) {\r\n                        backgroundMusic.changeVolume(0.1f);\r\n                        backgroundMusic.stop(soundMap.get(\"townTheme\"));\r\n                        backgroundMusic.play(soundMap.get(\"dungeonAmbient1\"));\r\n                        glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n\r\n                        // Установление хитбоксов стен первого уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j += 4)\r\n                            aabbMap.get(\"wall\" + i).update(Storage.firstLevelWalls[j], Storage.firstLevelWalls[j + 1], Storage.firstLevelWalls[j + 2], Storage.firstLevelWalls[j + 3]);\r\n                        SingletonPlayer.player.setX(199);\r\n                        SingletonPlayer.player.setY(273);\r\n                        SingletonPlayer.player.setSpeed(2);\r\n                        SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        level = \"FirstLevel\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Нажатие стрелки влево\r\n            if (key == GLFW_KEY_LEFT && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isKnockBackTaskStarted() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\")) {\r\n                    SingletonPlayer.player.setAttackLeft(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"left\");\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble())\r\n                    SingletonPlayer.player.setDialogBubbleChoice(!SingletonPlayer.player.isDialogBubbleChoice());\r\n            }\r\n\r\n            // Нажатие стрелки вправо\r\n            if (key == GLFW_KEY_RIGHT && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isKnockBackTaskStarted() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\")) {\r\n                    SingletonPlayer.player.setAttackRight(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"right\");\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble())\r\n                    SingletonPlayer.player.setDialogBubbleChoice(!SingletonPlayer.player.isDialogBubbleChoice());\r\n            }\r\n\r\n            // Нажатие стрелки вверх\r\n            if (key == GLFW_KEY_UP && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isKnockBackTaskStarted() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\") &&\r\n                        !SingletonPlayer.player.isScrollMenu()) {\r\n                    SingletonPlayer.player.setAttackUp(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"up\");\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu())\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Exit\");\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Resume\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Sounds\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Sounds\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                    }\r\n            }\r\n\r\n            // Нажатие стрелки вниз\r\n            if (key == GLFW_KEY_DOWN && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isKnockBackTaskStarted() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\") &&\r\n                        !SingletonPlayer.player.isScrollMenu()) {\r\n                    SingletonPlayer.player.setAttackDown(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"down\");\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu())\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Exit\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Resume\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Sounds\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Sounds\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n    }\r\n\r\n    private synchronized void loop() {\r\n        int guard_i = 1, guard_g = 0, forgeFurnace_i = 1, forgeFurnace_g = 0;\r\n        backgroundMusic.play(soundMap.get(\"mainMenuTheme\"));\r\n\r\n        while (!glfwWindowShouldClose(window)) {\r\n            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\r\n\r\n            // Переключение уровня\r\n            switch (level) {\r\n                case \"MainMenu\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"MainMenu\")); // Фон главного меню\r\n                    createQuadTexture(0, 0, 1536, 360);\r\n\r\n                    // Анимация охранника\r\n                    if (guard_i == 11) guard_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"guard_stand_0\" + guard_i));\r\n                    createQuadTexture(30, 190, 62, 224);\r\n                    if (guard_g == 10) {\r\n                        guard_i++;\r\n                        guard_g = 0;\r\n                    }\r\n                    guard_g++;\r\n\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"Philistine\"));\r\n                    createQuadTexture(SingletonPlayer.player.getX() - 68, SingletonPlayer.player.getY() - 156, SingletonPlayer.player.getX() + 64 + 68, SingletonPlayer.player.getY() - 100);\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"Press_enter\"));\r\n                    createQuadTexture(SingletonPlayer.player.getX() - 18, SingletonPlayer.player.getY() - 100, SingletonPlayer.player.getX() + 82, SingletonPlayer.player.getY() - 72);\r\n                    if (SingletonPlayer.player.getX() == 1186) forMainMenu = false;\r\n                    else if (SingletonPlayer.player.getX() == 290) forMainMenu = true;\r\n                    if (forMainMenu) {\r\n                        glTranslated(-1, 0, 0);\r\n                        SingletonPlayer.player.setForPlacingCamera(SingletonPlayer.player.getForPlacingCamera() + 1);\r\n                        SingletonPlayer.player.setMainMenuDirection(true);\r\n                    }\r\n                    else {\r\n                        glTranslated(1, 0, 0);\r\n                        SingletonPlayer.player.setForPlacingCamera(SingletonPlayer.player.getForPlacingCamera() - 1);\r\n                        SingletonPlayer.player.setMainMenuDirection(false);\r\n                    }\r\n                    break;\r\n                }\r\n                case \"Town\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"MainMenu\")); // Фон главного меню\r\n                    createQuadTexture(0, 0, 1536, 360);\r\n\r\n                    // Анимация охранника\r\n                    if (guard_i == 11) guard_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"guard_stand_0\" + guard_i));\r\n                    createQuadTexture(30, 190, 62, 224);\r\n                    if (guard_g == 10) {\r\n                        guard_i++;\r\n                        guard_g = 0;\r\n                    }\r\n                    guard_g++;\r\n\r\n                    // Левая граница города\r\n                    if (SingletonPlayer.player.getX() <= 48) SingletonPlayer.player.stopLeft();\r\n                    if (SingletonPlayer.player.getX() <= 50) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"you_Shall_Not_Pass\"));\r\n                        createQuadTexture(34, 136, 94, 195);\r\n                    }\r\n\r\n                    // Переход в данж\r\n                    if (SingletonPlayer.player.getX() + 32 == 1519) {\r\n                        SingletonPlayer.player.setDialogBubble(true);\r\n                        if (SingletonPlayer.player.isDialogBubbleChoice())\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enterTheDungeon_Yes\"));\r\n                        else if (!SingletonPlayer.player.isDialogBubbleChoice())\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enterTheDungeon_No\"));\r\n                        createQuadTexture(SingletonPlayer.player.getX() - 20, SingletonPlayer.player.getY() - 55, SingletonPlayer.player.getX() + 40, SingletonPlayer.player.getY());\r\n                    }\r\n\r\n                    if (key_E_Pressed) {\r\n                        // Вхождение в таверну\r\n                        if (SingletonPlayer.player.getX() + 32 > 305 && SingletonPlayer.player.getX() + 32 < 341) {\r\n                            level = \"tavern\";\r\n                            glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                            SingletonPlayer.player.setForPlacingCamera(3);\r\n\r\n                            // Обновление хитбоксов стен для tavern\r\n                            for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.tavernLevelWalls[j], Storage.tavernLevelWalls[j + 1],\r\n                                        Storage.tavernLevelWalls[j + 2], Storage.tavernLevelWalls[j + 3]);\r\n                            }\r\n                            doorSound.play(soundMap.get(\"doorOpen\"));\r\n                            SingletonPlayer.player.setX(210);\r\n                            SingletonPlayer.player.setY(254);\r\n                            SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        }\r\n                        // Вхождение в кузницу\r\n                        else if (SingletonPlayer.player.getX() + 32 > 620 && SingletonPlayer.player.getX() + 32 < 651) {\r\n                            level = \"forge\";\r\n                            glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                            SingletonPlayer.player.setForPlacingCamera(315);\r\n\r\n                            // Обновление хитбоксов стен для forge\r\n                            for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.forgeLevelWalls[j], Storage.forgeLevelWalls[j + 1],\r\n                                        Storage.forgeLevelWalls[j + 2], Storage.forgeLevelWalls[j + 3]);\r\n                            }\r\n                            doorSound.play(soundMap.get(\"doorOpen\"));\r\n                            backgroundMusic.stop(soundMap.get(\"townTheme\"));\r\n                            backgroundMusic.play(soundMap.get(\"forgeTheme\"));\r\n                            SingletonPlayer.player.setX(368);\r\n                            SingletonPlayer.player.setY(254);\r\n                            SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n                    break;\r\n                }\r\n                case \"tavern\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"tavern\")); // Фон таверны\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Отрисовка оффицианта и остановка около прилавка\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"waiter_\" + waiter.getMoveDirection() + \"_move_0\" + waiter.getAnimationTime()));\r\n                    createQuadTexture(waiter.getX(), waiter.getY(), waiter.getX() + 64, waiter.getY() + 64);\r\n                    waiter.simulateBehavior();\r\n                    if (waiter.isWaitingTaskStarted()) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_question\"));\r\n                        createQuadTexture(waiter.getX() + 31, waiter.getY(), waiter.getX() + 51, waiter.getY() + 20);\r\n\r\n                        // Восстановить здоровье\r\n                        if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"toBuyBeer\"))) {\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_health\")); // Фон таверны\r\n                            createQuadTexture(SingletonPlayer.player.getX() + 32, SingletonPlayer.player.getY(),\r\n                                    SingletonPlayer.player.getX() + 52, SingletonPlayer.player.getY() + 20);\r\n                            if (key_E_Pressed && SingletonPlayer.player.getHealth() < 100 && SingletonPlayer.player.getMoney() >= 10) {\r\n                                SingletonPlayer.player.setHealth(100);\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() - 10);\r\n                                beerSound.play(soundMap.get(\"drinkBeer\"));\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"gentleman_brown\"));\r\n                    createQuadTexture(350, 190, 350 + 64, 190 + 64);\r\n\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall6\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    // Проверка выхода в город\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromTavernToTown\"))) {\r\n                        level = \"Town\";\r\n\r\n                        // Обновление хитбоксов стен для города\r\n                        for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.townLevelWalls[j], Storage.townLevelWalls[j + 1],\r\n                                    Storage.townLevelWalls[j + 2], Storage.townLevelWalls[j + 3]);\r\n                        }\r\n                        doorSound.play(soundMap.get(\"doorOpen\"));\r\n                        SingletonPlayer.player.getStepSound().stop(SingletonPlayer.player.getPlayerSounds().get(\"stepWood\"));\r\n                        glTranslated(-SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                        SingletonPlayer.player.setX(293);\r\n                        SingletonPlayer.player.setY(192);\r\n                        SingletonPlayer.player.setMoveDirection(\"right\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"forge\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"forge\")); // Фон кузницы\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Анимация печки\r\n                    if (forgeFurnace_i == 4) forgeFurnace_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"furnace_burn_0\" + forgeFurnace_i));\r\n                    createQuadTexture(223, 142, 259, 173);\r\n                    if (forgeFurnace_g == 12) {\r\n                        forgeFurnace_i++;\r\n                        forgeFurnace_g = 0;\r\n                    }\r\n                    forgeFurnace_g++;\r\n\r\n                    // Отрисовка кузнеца и остановка около прилавка\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"blacksmith_\" + blacksmith.getMoveDirection() + \"_move_0\" + blacksmith.getAnimationTime()));\r\n                    createQuadTexture(blacksmith.getX(), blacksmith.getY(), blacksmith.getX() + 64, blacksmith.getY() + 64);\r\n                    blacksmith.simulateBehavior();\r\n                    if (blacksmith.isWaitingTaskStarted()) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_question\"));\r\n                        createQuadTexture(blacksmith.getX() + 31, blacksmith.getY(), blacksmith.getX() + 51, blacksmith.getY() + 20);\r\n                    }\r\n\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall6\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    if (shop.loot.size() != 0) {\r\n                        shopObjectList.addAll(shop.loot);\r\n                        shop.loot.clear();\r\n                    }\r\n\r\n                    for (Object object : shopObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    for (int i = 0; i < shopObjectList.size(); i++) {\r\n                        if (!shopObjectList.get(i).isDrawAble()) continue;\r\n                        if (shopObjectList.get(i) instanceof Armor && AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(),\r\n                                shopObjectList.get(i).getCollisionBox())) {\r\n                            Armor tempArmor = (Armor) shopObjectList.get(i);\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"price\"));\r\n                            createQuadTexture(tempArmor.getMinX() + 15, tempArmor.getCollisionBox().getMin().y - 27, tempArmor.getMinX() + 45, tempArmor.getCollisionBox().getMin().y);\r\n                            int tempX0, tempX1, tempY0, tempY1;\r\n                            tempX0 = tempArmor.getMinX() + 37 - 7;\r\n                            tempX1 = tempArmor.getMinX() + 37;\r\n                            tempY0 = tempArmor.getCollisionBox().getMin().y - 13;\r\n                            tempY1 = tempArmor.getCollisionBox().getMin().y - 3;\r\n                            int tempPrice = tempArmor.getPrice();\r\n                            for (int j = 0; j < getCountsOfDigits(tempArmor.getPrice()); j++) {\r\n                                switch (tempPrice % 10) {\r\n                                    case 0:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 1:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 2:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 3:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 4:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 5:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 6:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 7:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 8:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 9:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n\r\n                                }\r\n                                tempPrice = tempPrice / 10;\r\n                                tempX0 -= 7;\r\n                                tempX1 -= 7;\r\n                            }\r\n                            if (key_E_Pressed && SingletonPlayer.player.getMoney() >= tempArmor.getPrice()) {\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() - tempArmor.getPrice());\r\n                                SingletonPlayer.player.setArmor(tempArmor);\r\n                                shopObjectList.get(i).setIsLying(false);\r\n                                shopObjectList.remove(i);\r\n                                armorChange.play(soundMap.get(\"changingArmor\"));\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    // Проверка выхода в город\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromForgeToTown\"))) {\r\n                        level = \"Town\";\r\n\r\n                        // Обновление хитбоксов стен для города\r\n                        for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.townLevelWalls[j], Storage.townLevelWalls[j + 1],\r\n                                    Storage.townLevelWalls[j + 2], Storage.townLevelWalls[j + 3]);\r\n                        }\r\n                        doorSound.play(soundMap.get(\"doorOpen\"));\r\n                        SingletonPlayer.player.getStepSound().stop(SingletonPlayer.player.getPlayerSounds().get(\"stepWood\"));\r\n                        backgroundMusic.stop(soundMap.get(\"forgeTheme\"));\r\n                        backgroundMusic.play(soundMap.get(\"townTheme\"));\r\n                        glTranslated(-SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                        SingletonPlayer.player.setX(605);\r\n                        SingletonPlayer.player.setY(192);\r\n                        SingletonPlayer.player.setMoveDirection(\"right\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"FirstLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level0\")); // Фон первого уровня\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    if (!firstLevelMobSpawning) {\r\n                        firstLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 0, 5000);\r\n                    }\r\n\r\n                    // Отрисовка всех объектов\r\n                    for (Object object : firstLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        if (object instanceof Coin) {\r\n                            Coin coin = (Coin) object;\r\n                            if (!coin.isAnimationTaskStarted())\r\n                                coin.getTimer().schedule(coin.getAnimationTask(), 0, 120);\r\n                            coin.setTexture(\"coin_0\" + coin.getAnimationTime());\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(coin.getTexture()));\r\n                        }\r\n                        else if (object instanceof Container) {\r\n                            Container container = (Container) object;\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(container.getTexture() + container.getState()));\r\n                        }\r\n                        else if (object instanceof Gate) {\r\n                            Gate gate = (Gate) object;\r\n                            if (canChangeLevel && firstLevelMobSpawningStopped && gate.getMinY() == 243) {\r\n                                gate.setFinalY(147);\r\n                                gate.update();\r\n                            }\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(gate.getTexture()));\r\n                        }\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    // Подбор всех возможных предметов с клавишей Е\r\n                    if (key_E_Pressed) {\r\n                        for (int i = 0; i < firstLevelObjectList.size(); i++) {\r\n                            if (firstLevelObjectList.get(i) instanceof Armor) {\r\n                                Armor changingArmor = (Armor) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingArmor.getCollisionBox())) {\r\n                                    Armor playerArmor = SingletonPlayer.player.getArmorType(changingArmor);\r\n                                    changingArmor.setIsLying(false);\r\n                                    SingletonPlayer.player.setArmor(changingArmor);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingArmor = playerArmor;\r\n                                    if (changingArmor.getTexture().equals(\"nothing\")) firstLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingArmor.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 20);\r\n                                        changingArmor.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 30);\r\n                                        changingArmor.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 44);\r\n                                        changingArmor.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 34);\r\n                                        changingArmor.setIsLying(true);\r\n                                        changingArmor.correctCollisionBox();\r\n                                        firstLevelObjectList.set(i, changingArmor);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            } else if (firstLevelObjectList.get(i) instanceof Weapon) {\r\n                                Weapon changingWeapon = (Weapon) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingWeapon.getCollisionBox())) {\r\n                                    Weapon playerWeapon = SingletonPlayer.player.getWeapon();\r\n                                    changingWeapon.setIsLying(false);\r\n                                    changingWeapon.resize();\r\n                                    SingletonPlayer.player.setWeapon(changingWeapon);\r\n                                    SingletonPlayer.player.updateDamage();\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingWeapon = playerWeapon;\r\n                                    if (changingWeapon.getTexture().equals(\"nothing\")) firstLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingWeapon.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 64);\r\n                                        changingWeapon.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 64);\r\n                                        changingWeapon.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 128);\r\n                                        changingWeapon.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 128);\r\n                                        changingWeapon.setIsLying(true);\r\n                                        changingWeapon.correctCollisionBox();\r\n                                        firstLevelObjectList.set(i, changingWeapon);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            } else if (firstLevelObjectList.get(i) instanceof Lever) {\r\n                                Lever change = (Lever) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), change.getCollisionBox())) {\r\n                                    change.setState(\"On\");\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        key_E_Pressed = false;\r\n                    }\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Slime) {\r\n                            Slime slime = (Slime) SingletonMobs.mobList.get(i);\r\n                            if (!slime.isDead()) {\r\n                                slime.update();\r\n                                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_\" + slime.getMoveDirection() + \"_0\" + slime.getAnimationTime()));\r\n                            } else\r\n                                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_death_0\" + slime.getDeathAnimationTime()));\r\n                            createQuadTexture(slime.getX(), slime.getY(), slime.getX() + 18, slime.getY() + 12);\r\n                        }\r\n                    }\r\n\r\n                    // Проверка всех мобов на столкновение со стенами, объектами. Столкновения объектов с объектами\r\n                    for (int i = 0; i < SingletonMobs.mobList.size(); i++) {\r\n                        Mob mob = SingletonMobs.mobList.get(i);\r\n\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                mob.stopDown();\r\n                        }\r\n\r\n                        for (int j = 0; j < firstLevelObjectList.size(); j++) {\r\n                            Object object = firstLevelObjectList.get(j);\r\n                            if (!(object instanceof Furniture) && !(object instanceof Container) && !(object instanceof Gate)) {\r\n                                // Столкновение объектов со стенами\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                                    object.stopRight();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                    object.stopLeft();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                    object.stopUp();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                    object.stopDown();\r\n\r\n                                // Столкновение объектов с объектами\r\n                                for (int k = j + 1; k < firstLevelObjectList.size(); k++) {\r\n                                    Object object2 = firstLevelObjectList.get(k);\r\n                                    if (!(object2 instanceof Furniture) && !(object2 instanceof Container) && !(object2 instanceof Gate)) {\r\n                                        if (AABB.AABBvsAABB(object.getCollisionBox(), object2.getCollisionBox()))\r\n                                            object.moveLeft();\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (!mob.isDead() && AABB.AABBvsAABB(mob.getCollisionBox(), object.getCollisionBox())) {\r\n                                if ((mob instanceof Player) && (object instanceof Coin)) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                    firstLevelObjectList.remove(object);\r\n                                    SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() + 10);\r\n                                    coinSound.play(soundMap.get(\"pickedCoin\"));\r\n                                    break;\r\n                                } else if ((mob instanceof Player) && (object instanceof Potion)) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                    firstLevelObjectList.remove(object);\r\n                                    if (SingletonPlayer.player.getHealth() > 90) SingletonPlayer.player.setHealth(100);\r\n                                    else SingletonPlayer.player.setHealth(SingletonPlayer.player.getHealth() + 10);\r\n                                    potionSound.play(soundMap.get(\"pickedPotion\"));\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (object.isNoclip()) continue;\r\n                            if (!mob.isDead() && AABB.AABBvsAABB2(mob.getCollisionBox(), object.getCollisionBox()))\r\n                                mob.stop(CollisionMessage.getMessage());\r\n                        }\r\n                    }\r\n\r\n                    // Проверка возможности перехода на другой уровень\r\n                    if (firstLevelMobSpawningStopped) {\r\n                        for (Mob mob : SingletonMobs.mobList) {\r\n                            if (mob.isDead() && !(mob instanceof Player)) deathsCounter++;\r\n                        }\r\n                        if (deathsCounter == SingletonMobs.mobList.size() - 1) canChangeLevel = true;\r\n                        else canChangeLevel = false;\r\n                        deathsCounter = 0;\r\n                    }\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToSecondLevel\"))) {\r\n                        if (canChangeLevel) {\r\n                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                            // Обновление хитбоксов стен для второго уровня\r\n                            for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                        Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                            }\r\n                            SingletonPlayer.player.setX(-12);\r\n                            SingletonPlayer.player.setY(225);\r\n                            level = \"SecondLevel\";\r\n                            canChangeLevel = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case \"SecondLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level1\")); // Фон второго уровня\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    if (!secondLevelMobSpawning) {\r\n                        secondLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 3000, 10000);\r\n                    }\r\n\r\n                    // Отрисовка всех объектов\r\n                    for (Object object : secondLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        if (object.getTexture().equals(\"gate3\") && canChangeLevel && secondLevelMobSpawningStopped) {\r\n                            object.setIsLying(false);\r\n                            object.setNoclip(true);\r\n                        }\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Spider) {\r\n                            Spider spider = (Spider) SingletonMobs.mobList.get(i);\r\n                            if (!spider.isDead()) {\r\n                                spider.update();\r\n                                if (spider.isAttack()) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_\" + spider.getMoveDirection() + \"_attack_0\" + spider.getHitAnimationTime()));\r\n                                else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_\" + spider.getMoveDirection() + \"_move_0\" + spider.getAnimationTime()));\r\n                            }\r\n                            else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_death_0\" + spider.getDeathAnimationTime()));\r\n                            createQuadTexture(spider.getX(), spider.getY(), spider.getX() + 64, spider.getY() + 64);\r\n                        }\r\n                    }\r\n\r\n                    // Проверка всех мобов на столкновение со стенами\r\n                    for (int i1 = 0; i1 < SingletonMobs.mobList.size(); i1++) {\r\n                        Mob mob = SingletonMobs.mobList.get(i1);\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall8\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall11\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall5\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall7\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall10\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall9\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall12\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall6\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                mob.stopDown();\r\n\r\n                            for (Object object : secondLevelObjectList) {\r\n                                // Столкновение мобов с !noclip объектами\r\n                                if (AABB.AABBvsAABB2(mob.getCollisionBox(), object.getCollisionBox()) && !object.isNoclip())\r\n                                    mob.stop(CollisionMessage.getMessage());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Проверка возможности перехода на другой уровень\r\n                    if (secondLevelMobSpawningStopped) {\r\n                        for (Mob mob : SingletonMobs.mobList) {\r\n                            if (mob.isDead() && !(mob instanceof Player)) deathsCounter++;\r\n                        }\r\n                        if (deathsCounter == SingletonMobs.mobList.size() - 1) {\r\n                            System.out.println(deathsCounter + \" \" + (SingletonMobs.mobList.size() - 1));\r\n                            canChangeLevel = true;\r\n                        }\r\n                        else canChangeLevel = false;\r\n                        deathsCounter = 0;\r\n                    }\r\n\r\n                    // Проверка перехода на первый уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToFirstLevel\"))) {\r\n                        if (canChangeLevel) {\r\n                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                            // Обновление хитбоксов стен для первого уровня\r\n                            for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.firstLevelWalls[j], Storage.firstLevelWalls[j + 1],\r\n                                        Storage.firstLevelWalls[j + 2], Storage.firstLevelWalls[j + 3]);\r\n                            }\r\n                            SingletonPlayer.player.setX(580);\r\n                            SingletonPlayer.player.setY(281);\r\n                            level = \"FirstLevel\";\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на 3 уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToThirdLevel\"))) {\r\n                        if (canChangeLevel) {\r\n                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                            // Обновление хитбоксов стен для 3 уровня\r\n                            for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.thirdLevelWalls[j], Storage.thirdLevelWalls[j + 1],\r\n                                        Storage.thirdLevelWalls[j + 2], Storage.thirdLevelWalls[j + 3]);\r\n                            }\r\n                            SingletonPlayer.player.setX(240);\r\n                            SingletonPlayer.player.setY(120);\r\n                            SingletonPlayer.player.setMoveDirection(\"down\");\r\n                            level = \"ThirdLevel\";\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на 4 уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToForthLevel\"))) {\r\n                        if (canChangeLevel) {\r\n                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                            // Обновление хитбоксов стен для 4 уровня\r\n                            for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.fourthLevelWalls[j], Storage.fourthLevelWalls[j + 1],\r\n                                        Storage.fourthLevelWalls[j + 2], Storage.fourthLevelWalls[j + 3]);\r\n                            }\r\n                            SingletonPlayer.player.setX(180);\r\n                            SingletonPlayer.player.setY(120);\r\n                            SingletonPlayer.player.setMoveDirection(\"down\");\r\n                            level = \"ForthLevel\";\r\n                            canChangeLevel = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ThirdLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level2\"));\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Отрисовка всех объектов\r\n                    for (Object object : thirdLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        if (object instanceof Coin) {\r\n                            Coin coin = (Coin) object;\r\n                            if (!coin.isAnimationTaskStarted())\r\n                                coin.getTimer().schedule(coin.getAnimationTask(), 0, 120);\r\n                            coin.setTexture(\"coin_0\" + coin.getAnimationTime());\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(coin.getTexture()));\r\n                        }\r\n                        else if (object instanceof Container) {\r\n                            Container container = (Container) object;\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(container.getTexture() + container.getState()));\r\n                        }\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    // Столкновение игрока со стенами\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    for (int i = 0; i < thirdLevelObjectList.size(); i++) {\r\n                        Object object = thirdLevelObjectList.get(i);\r\n\r\n                        // Столкновение игрока с !noclip объектами\r\n                        if (AABB.AABBvsAABB2(SingletonPlayer.player.getCollisionBox(), object.getCollisionBox()) && !object.isNoclip())\r\n                            SingletonPlayer.player.stop(CollisionMessage.getMessage());\r\n\r\n                        // Столкновение объектов с объектами\r\n                        for (int j = i + 1; j < thirdLevelObjectList.size(); j++) {\r\n                            Object object2 = thirdLevelObjectList.get(j);\r\n                            if (AABB.AABBvsAABB(object.getCollisionBox(), object2.getCollisionBox())) {\r\n                                if (object.isNoclip() && object2.isNoclip()) {\r\n                                    object.moveLeft();\r\n                                    object2.moveRight();\r\n                                } else if (object.isNoclip() && !object2.isNoclip()) object.moveRight();\r\n                                else if (!object.isNoclip() && object2.isNoclip()) object2.moveRight();\r\n                            }\r\n                        }\r\n\r\n                        // Подбор монет и зелий игроком\r\n                        if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), object.getCollisionBox())) {\r\n                            if (object instanceof Coin) {\r\n                                object.getTimer().cancel();\r\n                                object.getTimer().purge();\r\n                                thirdLevelObjectList.remove(object);\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() + 10);\r\n                                coinSound.play(soundMap.get(\"pickedCoin\"));\r\n                                break;\r\n                            } else if (object instanceof Potion) {\r\n                                object.getTimer().cancel();\r\n                                object.getTimer().purge();\r\n                                thirdLevelObjectList.remove(object);\r\n                                if (SingletonPlayer.player.getHealth() > 90) SingletonPlayer.player.setHealth(100);\r\n                                else SingletonPlayer.player.setHealth(SingletonPlayer.player.getHealth() + 10);\r\n                                potionSound.play(soundMap.get(\"pickedPotion\"));\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Подбор всех возможных предметов с клавишей Е\r\n                    if (key_E_Pressed) {\r\n                        for (int i = 0; i < thirdLevelObjectList.size(); i++) {\r\n                            if (thirdLevelObjectList.get(i) instanceof Armor) {\r\n                                Armor changingArmor = (Armor) thirdLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingArmor.getCollisionBox())) {\r\n                                    Armor playerArmor = SingletonPlayer.player.getArmorType(changingArmor);\r\n                                    changingArmor.setIsLying(false);\r\n                                    SingletonPlayer.player.setArmor(changingArmor);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingArmor = playerArmor;\r\n                                    if (changingArmor.getTexture().equals(\"nothing\")) thirdLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingArmor.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 20);\r\n                                        changingArmor.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 30);\r\n                                        changingArmor.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 44);\r\n                                        changingArmor.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 34);\r\n                                        changingArmor.setIsLying(true);\r\n                                        changingArmor.correctCollisionBox();\r\n                                        thirdLevelObjectList.set(i, changingArmor);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            } else if (thirdLevelObjectList.get(i) instanceof Weapon) {\r\n                                Weapon changingWeapon = (Weapon) thirdLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingWeapon.getCollisionBox())) {\r\n                                    Weapon playerWeapon = SingletonPlayer.player.getWeapon();\r\n                                    changingWeapon.setIsLying(false);\r\n                                    changingWeapon.resize();\r\n                                    SingletonPlayer.player.setWeapon(changingWeapon);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingWeapon = playerWeapon;\r\n                                    if (changingWeapon.getTexture().equals(\"nothing\")) thirdLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingWeapon.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 64);\r\n                                        changingWeapon.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 64);\r\n                                        changingWeapon.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 128);\r\n                                        changingWeapon.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 128);\r\n                                        changingWeapon.setIsLying(true);\r\n                                        changingWeapon.correctCollisionBox();\r\n                                        thirdLevelObjectList.set(i, changingWeapon);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            } else if (thirdLevelObjectList.get(i) instanceof Container) {\r\n                                Container change = (Container) thirdLevelObjectList.get(i);\r\n                                if (AABB.toInteract(SingletonPlayer.player.getCollisionBox(), change.getCollisionBox())) {\r\n                                    if (change.getState().equals(\"Closed\")) {\r\n                                        if (change.getIsNeedKey() && SingletonPlayer.player.getKeys() > 0) {\r\n                                            SingletonPlayer.player.setKeys(SingletonPlayer.player.getKeys() - 1);\r\n                                            containerSound.play(soundMap.get(\"openChest\"));\r\n                                        } else containerSound.play(soundMap.get(\"openBoxBarrel\"));\r\n                                        change.setState(\"Opened\");\r\n                                        if (change.loot.size() != 0) {\r\n                                            thirdLevelObjectList.addAll(change.loot);\r\n                                            change.loot.clear();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromThirdToSecondLevel\"))) {\r\n                        level = \"SecondLevel\";\r\n                        // Обновление хитбоксов стен для второго уровня\r\n                        for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                    Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(180);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ForthLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level3\"));\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Отрисовка объектов\r\n                    for (Object object : forthLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    if (!fourthLevelMobSpawning) {\r\n                        fourthLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 3000, 10000);\r\n                    }\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Imp) {\r\n                            Imp imp = (Imp) SingletonMobs.mobList.get(i);\r\n                            if (!imp.isDead()) {\r\n                                imp.update();\r\n                                // HealthBar\r\n                                int tempHealth = imp.getHealth() % 10 == 0 ? imp.getHealth() : imp.getHealth() - (imp.getHealth() % 10) + 10;\r\n                                if (tempHealth > 0) {\r\n                                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enemyHp\" + tempHealth));\r\n                                    createQuadTexture(imp.getX(), imp.getY(), imp.getX() + 64, imp.getY() + 8);\r\n                                }\r\n\r\n                                if (imp.isAttackLeft() || imp.isAttackRight() || imp.isAttackUp() || imp.isAttackDown())\r\n                                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_\" + imp.getMoveDirection() + \"_attack_0\" + imp.getHitAnimationTime()));\r\n                                else\r\n                                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_\" + imp.getMoveDirection() + \"_move_0\" + imp.getAnimationTime()));\r\n                            }\r\n                            else {\r\n                                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_death_0\" + imp.getDeathAnimationTime()));\r\n                                for (Object object : forthLevelObjectList) {\r\n                                    if (object.getTexture().equals(\"gate2\") ||\r\n                                            object.getTexture().equals(\"gate3\")) {\r\n                                        object.setIsLying(false);\r\n                                        object.setNoclip(true);\r\n                                    }\r\n                                }\r\n                            }\r\n                            createQuadTexture(imp.getX(), imp.getY(), imp.getX() + 64, imp.getY() + 64);\r\n                        }\r\n                    }\r\n\r\n                    // Столкновение мобов со стенами\r\n                    for (Mob mob : SingletonMobs.mobList) {\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall8\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall6\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall7\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall9\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                mob.stopDown();\r\n\r\n                            for (Object object : forthLevelObjectList) {\r\n                                // Столкновение мобов с !noclip объектами\r\n                                if (AABB.AABBvsAABB2(mob.getCollisionBox(), object.getCollisionBox()) && !object.isNoclip())\r\n                                    mob.stop(CollisionMessage.getMessage());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Проверка возможности перехода на другой уровень\r\n                    if (fourthLevelMobSpawningStopped) {\r\n                        for (Mob mob : SingletonMobs.mobList) {\r\n                            if (mob.isDead() && !(mob instanceof Player)) deathsCounter++;\r\n                        }\r\n                        if (deathsCounter == SingletonMobs.mobList.size() - 1) canChangeLevel = true;\r\n                        else canChangeLevel = false;\r\n                        deathsCounter = 0;\r\n                    }\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromForthToSecondLevel\"))) {\r\n                        if (canChangeLevel) {\r\n                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                            // Обновление хитбоксов стен для второго уровня\r\n                            for (int i = 0, j = 0; i < 13; i++, j += 4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                        Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                            }\r\n                            SingletonPlayer.player.setX(240);\r\n                            SingletonPlayer.player.setY(120);\r\n                            SingletonPlayer.player.setMoveDirection(\"down\");\r\n                            level = \"SecondLevel\";\r\n                        }\r\n                    }\r\n                    // Проверка перехода в город\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromFourthToTownLevel\"))) {\r\n                        if (canChangeLevel) {\r\n                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                            // Обновление хитбоксов стен для города\r\n                            for (int i = 0, j = 0; i < 7; i++, j += 4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.townLevelWalls[j], Storage.townLevelWalls[j + 1],\r\n                                        Storage.townLevelWalls[j + 2], Storage.townLevelWalls[j + 3]);\r\n                            }\r\n\r\n                            // Обновление всех объектов\r\n                            firstLevelObjectList.clear();\r\n                            secondLevelObjectList.clear();\r\n                            thirdLevelObjectList.clear();\r\n                            forthLevelObjectList.clear();\r\n                            addAllObjects();\r\n                            shopObjectList.clear();\r\n                            shop = new Shop();\r\n                            firstLevelMobSpawning = secondLevelMobSpawning = fourthLevelMobSpawning = false;\r\n                            firstLevelMobSpawningStopped = secondLevelMobSpawningStopped = fourthLevelMobSpawningStopped = false;\r\n                            glTranslated(-689, 0, 0);\r\n                            backgroundMusic.stop(soundMap.get(\"dungeonAmbient1\"));\r\n                            SingletonPlayer.player.setForPlacingCamera(689);\r\n                            SingletonPlayer.player.setX(979);\r\n                            SingletonPlayer.player.setY(192);\r\n                            SingletonPlayer.player.setSpeed(1);\r\n                            SingletonPlayer.player.setMoveDirection(\"left\");\r\n                            level = \"Town\";\r\n                            canChangeLevel = false;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Отрисовка интерфейса\r\n            if (!level.equals(\"MainMenu\") && !level.equals(\"Town\")) {\r\n                // Полоска здоровья\r\n                int tempHealth = SingletonPlayer.player.getHealth() % 10 == 0 ? SingletonPlayer.player.getHealth() : SingletonPlayer.player.getHealth() - (SingletonPlayer.player.getHealth() % 10) + 10;\r\n                if (tempHealth >= 0) glBindTexture(GL_TEXTURE_2D, textureMap.get(tempHealth + \"hp\"));\r\n                else if (SingletonPlayer.player.getHealth() <= 0)\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"0hp\"));\r\n                createQuadTexture(0, 0, 103, 18);\r\n\r\n                // Щит с броней\r\n                int tempArmor = SingletonPlayer.player.getArmor() % 5 == 0 ? SingletonPlayer.player.getArmor() : SingletonPlayer.player.getArmor() - (SingletonPlayer.player.getArmor() % 5);\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(tempArmor + \"armor\"));\r\n                createQuadTexture(0, 20, 60, 40);\r\n\r\n                // Количество монет\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"coin_0\" + coinGUI.getAnimationTime()));\r\n                createQuadTexture(0, 42, 11, 54);\r\n                int tempCoin = SingletonPlayer.player.getMoney();\r\n                int tempX0 = 13 + (getCountsOfDigits(SingletonPlayer.player.getMoney()) * 7) - 7, tempX1 = 13 + (getCountsOfDigits(SingletonPlayer.player.getMoney()) * 7), tempY0 = 44, tempY1 = 54;\r\n                for (int i = 0; i < getCountsOfDigits(SingletonPlayer.player.getMoney()); i++) {\r\n                    switch (tempCoin % 10) {\r\n                        case 0:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 1:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 2:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 3:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 4:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 5:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 6:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 7:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 8:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 9:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n\r\n                    }\r\n                    tempCoin = tempCoin / 10;\r\n                    tempX0 -= 7;\r\n                    tempX1 -= 7;\r\n                }\r\n\r\n                // Количество ключей\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"keyGold\"));\r\n                createQuadTexture(0, 55, 16, 71);\r\n                int tempKeys = SingletonPlayer.player.getKeys();\r\n                tempX0 = 16 + (getCountsOfDigits(SingletonPlayer.player.getKeys()) * 7) - 7;\r\n                tempX1 = 16 + (getCountsOfDigits(SingletonPlayer.player.getKeys()) * 7);\r\n                tempY0 = 60;\r\n                tempY1 = 70;\r\n                for (int i = 0; i < getCountsOfDigits(SingletonPlayer.player.getKeys()); i++) {\r\n                    switch (tempKeys % 10) {\r\n                        case 0:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 1:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 2:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 3:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 4:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 5:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 6:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 7:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 8:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 9:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n\r\n                    }\r\n                    tempKeys = tempKeys / 10;\r\n                    tempX0 -= 7;\r\n                    tempX1 -= 7;\r\n                }\r\n            }\r\n\r\n            // Отрисовка экипировки и анимации\r\n            SingletonPlayer.player.update(window, level);\r\n            glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getBodyAnimation()));\r\n            createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            if (!SingletonPlayer.player.getFeetTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getFeetAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getLegsTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getLegsAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getTorsoTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getTorsoAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getOverTorsoTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getOverTorsoAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getShouldersTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getShouldersAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getBeltTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getBeltAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getHeadTexture().equals(\"nothing\")) {\r\n//                System.out.println(SingletonPlayer.player.getHeadAnimation());\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getHeadAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getHandsTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getHandsAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isDead() && !level.equals(\"MainMenu\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getWeaponAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX() - SingletonPlayer.player.getWeapon().getMinX(), SingletonPlayer.player.getY() - SingletonPlayer.player.getWeapon().getMinY(),\r\n                        SingletonPlayer.player.getX() + SingletonPlayer.player.getWeapon().getMaxX(), SingletonPlayer.player.getY() + SingletonPlayer.player.getWeapon().getMaxY());\r\n            }\r\n\r\n            // Отрисовка второстепенного меню\r\n            if (!level.equals(\"MainMenu\") && SingletonPlayer.player.isScrollMenu()) {\r\n                if (level.equals(\"Town\")) {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"scrollMenu_\" + SingletonPlayer.player.getMenuChoice())); // Фон второстепенного меню\r\n                    createQuadTexture(SingletonPlayer.player.getForPlacingCamera(), 0, SingletonPlayer.player.getForPlacingCamera() + 640, 360);\r\n                } else {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"scrollMenu_\" + SingletonPlayer.player.getMenuChoice())); // Фон второстепенного меню\r\n                    createQuadTexture(0, 0, 640, 360);\r\n                }\r\n            }\r\n\r\n            glfwPollEvents();\r\n            glfwSwapBuffers(window);\r\n        }\r\n    }\r\n\r\n    private void addAllObjects() {\r\n        // Добавление объектов на первый уровень\r\n        firstLevelObjectList.add(new Furniture(\"barrelOpened\", 118, 135));\r\n        firstLevelObjectList.add(new Furniture(\"bagMedium\", 137, 134));\r\n        firstLevelObjectList.add(new Furniture(\"boxOpened\", 308, 129));\r\n        firstLevelObjectList.add(new Furniture(\"chair1\", 400, 173));\r\n        firstLevelObjectList.add(new Furniture(\"chair3\", 432, 227));\r\n        firstLevelObjectList.add(new Furniture(\"table1\", 426, 163));\r\n        firstLevelObjectList.add(new Furniture(\"littleBag\", 426, 160));\r\n        firstLevelObjectList.add(new Furniture(\"bookRed\", 434, 186));\r\n        firstLevelObjectList.add(new Furniture(\"bones\", 113, 173));\r\n        firstLevelObjectList.add(new Furniture(\"trash\", 462, 173));\r\n        firstLevelObjectList.add(new Gate(\"verticalGate\", 628, 147));\r\n        firstLevelObjectList.add(new Gate(\"verticalGate\", 628, 243));\r\n\r\n        // Добавление объектов на второй уровень\r\n        secondLevelObjectList.add(new Furniture(\"gate3\", 198, 54));\r\n        secondLevelObjectList.add(new Furniture(\"gate3\", 246, 54));\r\n\r\n        // Добавление объектов на третий уровень\r\n        thirdLevelObjectList.add(new Chest(\"chest\", false, true, 279, 215, 279 + 32, 215 + 32, new AABB(279, 215, 279 + 32, 215 + 32)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 369, 127, 369 + 24, 127 + 30, new AABB(369, 127, 369 + 24, 127 + 30)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 451, 153, 451 + 24, 153 + 30, new AABB(451, 153, 451 + 24, 153 + 30)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 414, 246, 414 + 24, 246 + 30, new AABB(414, 246, 414 + 24, 246 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 150, 234, 150 + 20, 234 + 30, new AABB(150, 234, 150 + 20, 234 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 180, 260, 180 + 20, 260 + 30, new AABB(180, 260, 180 + 20, 260 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 110, 278, 110 + 20, 278 + 30, new AABB(110, 278, 110 + 20, 278 + 30)));\r\n        thirdLevelObjectList.add(new Furniture(\"bagBig\", 171, 131));\r\n        thirdLevelObjectList.add(new Furniture(\"bagMedium\", 199, 133));\r\n        thirdLevelObjectList.add(new Furniture(\"bagSmall\", 113, 208));\r\n        thirdLevelObjectList.add(new Furniture(\"altar0\", 463, 164));\r\n        thirdLevelObjectList.add(new Furniture(\"altar1\", 129, 168));\r\n\r\n        // Добавление объектов на четвертый уровень\r\n        forthLevelObjectList.add(new Furniture(\"gate2\", 292, 336));\r\n        forthLevelObjectList.add(new Furniture(\"gate3\", 198, 54));\r\n        forthLevelObjectList.add(new Furniture(\"trash\", 118, 288));\r\n        forthLevelObjectList.add(new Furniture(\"bones\", 466, 163));\r\n        forthLevelObjectList.add(new Furniture(\"water\", 466, 163));\r\n    }\r\n\r\n    private void createQuadTexture(int xMin, int yMin, int xMax, int yMax) {\r\n        glBegin(GL_QUADS);\r\n        glTexCoord2d(0, 0);\r\n        glVertex2f(xMin, yMin);\r\n        glTexCoord2d(1, 0);\r\n        glVertex2f(xMax, yMin);\r\n        glTexCoord2d(1, 1);\r\n        glVertex2f(xMax, yMax);\r\n        glTexCoord2d(0, 1);\r\n        glVertex2f(xMin, yMax);\r\n        glEnd();\r\n    }\r\n\r\n    public static int getCountsOfDigits(long number) {\r\n        return (number == 0) ? 1 : (int) Math.ceil(Math.log10(Math.abs(number) + 0.5));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Window.java	(revision bd0261d4b7da7a1eee6de5a887e91281896fbd63)
+++ src/Window.java	(date 1599044942928)
@@ -942,10 +942,7 @@
                         for (Mob mob : SingletonMobs.mobList) {
                             if (mob.isDead() && !(mob instanceof Player)) deathsCounter++;
                         }
-                        if (deathsCounter == SingletonMobs.mobList.size() - 1) {
-                            System.out.println(deathsCounter + " " + (SingletonMobs.mobList.size() - 1));
-                            canChangeLevel = true;
-                        }
+                        if (deathsCounter == SingletonMobs.mobList.size() - 1) canChangeLevel = true;
                         else canChangeLevel = false;
                         deathsCounter = 0;
                     }
@@ -1179,13 +1176,11 @@
                                 int tempHealth = imp.getHealth() % 10 == 0 ? imp.getHealth() : imp.getHealth() - (imp.getHealth() % 10) + 10;
                                 if (tempHealth > 0) {
                                     glBindTexture(GL_TEXTURE_2D, textureMap.get("enemyHp" + tempHealth));
-                                    createQuadTexture(imp.getX(), imp.getY(), imp.getX() + 64, imp.getY() + 8);
+                                    createQuadTexture(197, 0, 442, 30);
                                 }
 
-                                if (imp.isAttackLeft() || imp.isAttackRight() || imp.isAttackUp() || imp.isAttackDown())
-                                    glBindTexture(GL_TEXTURE_2D, textureMap.get("imp_" + imp.getMoveDirection() + "_attack_0" + imp.getHitAnimationTime()));
-                                else
-                                    glBindTexture(GL_TEXTURE_2D, textureMap.get("imp_" + imp.getMoveDirection() + "_move_0" + imp.getAnimationTime()));
+                                if (imp.isAttack()) glBindTexture(GL_TEXTURE_2D, textureMap.get("imp_" + imp.getMoveDirection() + "_attack_0" + imp.getHitAnimationTime()));
+                                else glBindTexture(GL_TEXTURE_2D, textureMap.get("imp_" + imp.getMoveDirection() + "_move_0" + imp.getAnimationTime()));
                             }
                             else {
                                 glBindTexture(GL_TEXTURE_2D, textureMap.get("imp_death_0" + imp.getDeathAnimationTime()));
@@ -1473,9 +1468,9 @@
         firstLevelObjectList.add(new Furniture("barrelOpened", 118, 135));
         firstLevelObjectList.add(new Furniture("bagMedium", 137, 134));
         firstLevelObjectList.add(new Furniture("boxOpened", 308, 129));
-        firstLevelObjectList.add(new Furniture("chair1", 400, 173));
-        firstLevelObjectList.add(new Furniture("chair3", 432, 227));
-        firstLevelObjectList.add(new Furniture("table1", 426, 163));
+        firstLevelObjectList.add(new Furniture("chair1", 399, 172));
+        firstLevelObjectList.add(new Furniture("chair3", 431, 226));
+        firstLevelObjectList.add(new Furniture("table1", 425, 162));
         firstLevelObjectList.add(new Furniture("littleBag", 426, 160));
         firstLevelObjectList.add(new Furniture("bookRed", 434, 186));
         firstLevelObjectList.add(new Furniture("bones", 113, 173));
@@ -1488,18 +1483,18 @@
         secondLevelObjectList.add(new Furniture("gate3", 246, 54));
 
         // Добавление объектов на третий уровень
-        thirdLevelObjectList.add(new Chest("chest", false, true, 279, 215, 279 + 32, 215 + 32, new AABB(279, 215, 279 + 32, 215 + 32)));
-        thirdLevelObjectList.add(new Box("box", false, true, 369, 127, 369 + 24, 127 + 30, new AABB(369, 127, 369 + 24, 127 + 30)));
-        thirdLevelObjectList.add(new Box("box", false, true, 451, 153, 451 + 24, 153 + 30, new AABB(451, 153, 451 + 24, 153 + 30)));
-        thirdLevelObjectList.add(new Box("box", false, true, 414, 246, 414 + 24, 246 + 30, new AABB(414, 246, 414 + 24, 246 + 30)));
-        thirdLevelObjectList.add(new Barrel("barrel", false, true, 150, 234, 150 + 20, 234 + 30, new AABB(150, 234, 150 + 20, 234 + 30)));
-        thirdLevelObjectList.add(new Barrel("barrel", false, true, 180, 260, 180 + 20, 260 + 30, new AABB(180, 260, 180 + 20, 260 + 30)));
-        thirdLevelObjectList.add(new Barrel("barrel", false, true, 110, 278, 110 + 20, 278 + 30, new AABB(110, 278, 110 + 20, 278 + 30)));
+        thirdLevelObjectList.add(new Chest("chest",279, 215));
+        thirdLevelObjectList.add(new Box("box", 369, 127));
+        thirdLevelObjectList.add(new Box("box", 451, 153));
+        thirdLevelObjectList.add(new Box("box", 414, 246));
+        thirdLevelObjectList.add(new Barrel("barrel", 150, 236));
+        thirdLevelObjectList.add(new Barrel("barrel", 205, 260));
+        thirdLevelObjectList.add(new Barrel("barrel", 110, 278));
         thirdLevelObjectList.add(new Furniture("bagBig", 171, 131));
-        thirdLevelObjectList.add(new Furniture("bagMedium", 199, 133));
-        thirdLevelObjectList.add(new Furniture("bagSmall", 113, 208));
-        thirdLevelObjectList.add(new Furniture("altar0", 463, 164));
-        thirdLevelObjectList.add(new Furniture("altar1", 129, 168));
+        thirdLevelObjectList.add(new Furniture("bagMedium", 199, 132));
+        thirdLevelObjectList.add(new Furniture("bagSmall", 113, 210));
+        thirdLevelObjectList.add(new Furniture("altar0", 460, 164));
+        thirdLevelObjectList.add(new Furniture("altar1", 129, 170));
 
         // Добавление объектов на четвертый уровень
         forthLevelObjectList.add(new Furniture("gate2", 292, 336));
Index: src/mobs/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mobs;\r\n\r\nimport content.AudioMaster;\r\nimport content.Source;\r\nimport content.Storage;\r\nimport math.AABB;\r\nimport objects.Armor;\r\nimport objects.Weapon;\r\nimport singletons.SingletonMobs;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\nimport static org.lwjgl.glfw.GLFW.*;\r\nimport static org.lwjgl.glfw.GLFW.GLFW_PRESS;\r\nimport static org.lwjgl.opengl.GL11.glTranslated;\r\n\r\npublic class Player extends Mob {\r\n    private HashMap<String, Integer> playerSounds;\r\n    private Source stepSound, hitSound, selectionMenuSound, openMenuSound;\r\n    private Armor head, shoulders, overTorso, torso, belt, hands, legs, feet;\r\n    private Weapon weapon;\r\n    private int money, keys;\r\n    private String bodyAnimation, weaponAnimation, headAnimation, shouldersAnimation, overTorsoAnimation, torsoAnimation, beltAnimation, handsAnimation, legsAnimation, feetAnimation;\r\n    private int player_animation_move_left_i = 2, player_animation_move_right_i = 2, player_animation_move_up_i = 2, player_animation_move_down_i = 2;\r\n    private int player_animation_move_g = 0;\r\n    private int forPlacingCamera = 0;\r\n    private boolean dialogBubble = false;\r\n    private boolean scrollMenu = false;\r\n    private boolean dialogBubbleChoice = false;\r\n    private boolean mainMenuDirection = true;\r\n    private String menuChoice = \"Resume\";\r\n    private TimerTask knockbackTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementKnockBackTime();\r\n            if (getKnockBackTime() <= 15) {\r\n                switch (getKnockBackDirection()) {\r\n                    case \"left\":\r\n                        knockBackLeft();\r\n                        break;\r\n                    case \"right\":\r\n                        knockBackRight();\r\n                        break;\r\n                    case \"up\":\r\n                        knockBackUp();\r\n                        break;\r\n                    case \"down\":\r\n                        knockBackDown();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    private TimerTask hitAnimationTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementHitAnimationTime();\r\n            switch (weapon.getTexture()) {\r\n                case \"rapier\":\r\n                case \"longsword\":\r\n                    if (isAttackLeft()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 49, getY() + 21, getX() + 17, getY() + 45);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackRight()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 47, getY() + 21, getX() + 113, getY() + 45);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackUp()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 11, getY() - 4, getX() + 70, getY() + 33);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 27, getY() - 1, getX() + 95, getY() + 38);\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackDown()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 9, getY() + 44, getX() + 72, getY() + 81);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 28, getY() + 39, getX() + 96, getY() + 78);\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"long_spear\":\r\n                    if (isAttackLeft()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 27, getY() + 42, getX() + 15, getY() + 46);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() - 39, getY() + 42, getX() + 12, getY() + 46);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() - 27, getY() + 42, getX() + 15, getY() + 46);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackRight()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 49, getY() + 42, getX() + 101, getY() + 46);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 51, getY() + 43, getX() + 103, getY() + 46);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 49, getY() + 42, getX() + 101, getY() + 46);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackUp()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 38, getY() - 29, getX() + 42, getY() + 18);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 38, getY() - 37, getX() + 42, getY() + 18);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 38, getY() - 29, getX() + 42, getY() + 18);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackDown()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 26, getY() + 49, getX() + 30, getY() + 95);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 27, getY() + 51, getX() + 31, getY() + 103);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 26, getY() + 49, getX() + 30, getY() + 95);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"stick\":\r\n                    if (isAttackLeft()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 7, getY() + 43, getX() + 15, getY() + 45);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() - 19, getY() + 43, getX() + 12, getY() + 45);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() - 7, getY() + 43, getX() + 15, getY() + 45);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackRight()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 49, getY() + 43, getX() + 81, getY() + 45);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 51, getY() + 43, getX() + 83, getY() + 45);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 49, getY() + 43, getX() + 81, getY() + 45);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackUp()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 39, getY() - 9, getX() + 41, getY() + 17);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 39, getY() - 17, getX() + 41, getY() + 17);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 39, getY() - 9, getX() + 41, getY() + 17);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackDown()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 27, getY() + 49, getX() + 29, getY() + 75);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 27, getY() + 51, getX() + 29, getY() + 83);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 27, getY() + 49, getX() + 29, getY() + 75);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"nothing\":\r\n                    if (getHitAnimationTime() == 7) {\r\n                        setHitAnimationTime(1);\r\n                        setAttackToFalse();\r\n                        getAttackBox().update(0,0,0,0);\r\n                        stopTimer();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    private final TimerTask deathAnimationTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementDeathAnimationTime();\r\n            if (getDeathAnimationTime() == 6) deathAnimationTask.cancel();\r\n        }\r\n    };\r\n\r\n    public Player(int x, int y, int speed, int health, int armor, int damage) {\r\n        super(x, y, speed, health, armor, damage);\r\n        setMoveDirection(\"down\");\r\n        setHitAnimationTime(1);\r\n        setDeathAnimationTime(0);\r\n        setKnockBackTime(0);\r\n        money = 0;\r\n        keys = 1;\r\n        weapon = new Weapon(\"longsword\", \"slash\", 10, new AABB());\r\n        head = new Armor(\"nothing\", \"head\", 0, true);\r\n        shoulders = new Armor(\"nothing\", \"shoulders\", 0, true);\r\n        overTorso = new Armor(\"nothing\", \"overTorso\", 0, true);\r\n        torso = new Armor(\"shirt_white\", \"torso\", 1, true);\r\n        belt = new Armor(\"nothing\", \"belt\", 0, true);\r\n        hands = new Armor(\"nothing\", \"hands\", 0, true);\r\n        legs = new Armor(\"pants_greenish\", \"legs\", 1, true);\r\n        feet = new Armor(\"nothing\", \"feet\", 0, true);\r\n        bodyAnimation = \"player_stand_\" + getMoveDirection();\r\n        headAnimation = \"HEAD_\" + getHeadTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        beltAnimation = \"BELT_\" + getBeltTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        feetAnimation = \"FEET_\" + getFeetTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        playerSounds = new HashMap<String, Integer>();\r\n        stepSound = new Source(0);\r\n        hitSound = new Source(0);\r\n        selectionMenuSound = new Source(0);\r\n        openMenuSound = new Source(0);\r\n        for (int i = 0, id = 0; i < Storage.playerSoundString.length; i++)\r\n            playerSounds.put(Storage.playerSoundString[i], id = AudioMaster.loadSound(\"sounds/\" + Storage.playerSoundString[i]));\r\n    }\r\n\r\n    public void stopTimer() {\r\n        getTimer().cancel();\r\n        getTimer().purge();\r\n        setTimer(new Timer());\r\n        knockbackTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                incrementKnockBackTime();\r\n                if (getKnockBackTime() <= 15) {\r\n                    switch (getKnockBackDirection()) {\r\n                        case \"left\":\r\n                            knockBackLeft();\r\n                            break;\r\n                        case \"right\":\r\n                            knockBackRight();\r\n                            break;\r\n                        case \"up\":\r\n                            knockBackUp();\r\n                            break;\r\n                        case \"down\":\r\n                            knockBackDown();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        hitAnimationTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                incrementHitAnimationTime();\r\n                switch (weapon.getTexture()) {\r\n                    case \"rapier\":\r\n                    case \"longsword\":\r\n                        if (isAttackLeft()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 49, getY() + 21, getX() + 17, getY() + 45);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 7) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                getAttackBox().update(0,0,0,0);\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackRight()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 47, getY() + 21, getX() + 113, getY() + 45);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 7) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                getAttackBox().update(0,0,0,0);\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackUp()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 11, getY() - 4, getX() + 70, getY() + 33);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 27, getY() - 1, getX() + 95, getY() + 38);\r\n                            if (getHitAnimationTime() == 7) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                getAttackBox().update(0,0,0,0);\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackDown()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 9, getY() + 44, getX() + 72, getY() + 81);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 28, getY() + 39, getX() + 96, getY() + 78);\r\n                            if (getHitAnimationTime() == 7) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                getAttackBox().update(0,0,0,0);\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"long_spear\":\r\n                        if (isAttackLeft()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 27, getY() + 42, getX() + 15, getY() + 46);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() - 39, getY() + 42, getX() + 12, getY() + 46);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() - 27, getY() + 42, getX() + 15, getY() + 46);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackRight()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 49, getY() + 42, getX() + 101, getY() + 46);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 51, getY() + 43, getX() + 103, getY() + 46);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 49, getY() + 42, getX() + 101, getY() + 46);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackUp()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 38, getY() - 29, getX() + 42, getY() + 18);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 38, getY() - 37, getX() + 42, getY() + 18);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 38, getY() - 29, getX() + 42, getY() + 18);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackDown()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 26, getY() + 49, getX() + 30, getY() + 95);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 27, getY() + 51, getX() + 31, getY() + 103);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 26, getY() + 49, getX() + 30, getY() + 95);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"stick\":\r\n                        if (isAttackLeft()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 7, getY() + 43, getX() + 15, getY() + 45);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() - 19, getY() + 43, getX() + 12, getY() + 45);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() - 7, getY() + 43, getX() + 15, getY() + 45);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackRight()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 49, getY() + 43, getX() + 81, getY() + 45);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 51, getY() + 43, getX() + 83, getY() + 45);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 49, getY() + 43, getX() + 81, getY() + 45);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackUp()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 39, getY() - 9, getX() + 41, getY() + 17);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 39, getY() - 17, getX() + 41, getY() + 17);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 39, getY() - 9, getX() + 41, getY() + 17);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackDown()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 27, getY() + 49, getX() + 29, getY() + 75);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 27, getY() + 51, getX() + 29, getY() + 83);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 27, getY() + 49, getX() + 29, getY() + 75);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"nothing\":\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        setKnockBackTime(0);\r\n        setHitAnimationTime(1);\r\n        setImmortal(false);\r\n        setHitAnimationTaskStarted(false);\r\n        setKnockBackTaskStarted(false);\r\n        getAttackBox().update(0,0,0,0);\r\n    }\r\n\r\n    public void update(long window, String level) {\r\n        if (!isDead()) {\r\n            // На игровых уровнях\r\n            if (!level.equals(\"MainMenu\") && !level.equals(\"Town\") && !scrollMenu) {\r\n                if (getKnockBackTime() >= 50) stopTimer();\r\n\r\n                // Получение урона от мобов\r\n                for (Mob mob : SingletonMobs.mobList) {\r\n                    if (!(mob instanceof Player) && !mob.isDead() && !isDead() && !isImmortal() &&\r\n                            AABB.AABBvsAABB(getHitbox(), mob.getAttackBox())) {\r\n                        if (mob.isAttackLeft()) setKnockBackDirection(\"left\");\r\n                        else if (mob.isAttackRight()) setKnockBackDirection(\"right\");\r\n                        else if (mob.isAttackUp()) setKnockBackDirection(\"up\");\r\n                        else if (mob.isAttackDown()) setKnockBackDirection(\"down\");\r\n\r\n                        takeDamage(mob.getDamage());\r\n                        if (getHealth() <= 0) {\r\n                            setDead(true);\r\n                            knockbackTask.cancel();\r\n                            hitAnimationTask.cancel();\r\n                            getTimer().schedule(deathAnimationTask, 0, 200);\r\n                        }\r\n                        else if (!isKnockBackTaskStarted()) {\r\n                            setImmortal(true);\r\n                            setKnockBackTaskStarted(true);\r\n                            setAttackToFalse();\r\n                            getTimer().schedule(knockbackTask, 0, 10);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!isDead()) {\r\n                    // Если игрок стоит\r\n                    bodyAnimation = \"player_stand_\" + getMoveDirection();\r\n                    headAnimation = \"HEAD_\" + getHeadTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n\r\n                    // Если игрок нажимает одну из клавиш\r\n                    if ((glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS)) {\r\n                        if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                        if (player_animation_move_left_i == 3 || player_animation_move_left_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_left_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveUpLeft();\r\n                    }\r\n                    else if ((glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS)) {\r\n                        if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                        if (player_animation_move_right_i == 3 || player_animation_move_right_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_right_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveUpRight();\r\n                    }\r\n                    else if ((glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS)) {\r\n                        if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                        if (player_animation_move_left_i == 3 || player_animation_move_left_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_left_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveDownLeft();\r\n                    }\r\n                    else if ((glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS)) {\r\n                        if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                        if (player_animation_move_right_i == 3 || player_animation_move_right_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_right_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveDownRight();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) {\r\n                        if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                        if (player_animation_move_left_i == 3 || player_animation_move_left_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_left_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveLeft();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) {\r\n                        if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                        if (player_animation_move_right_i == 3 || player_animation_move_right_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_right_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveRight();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS) {\r\n                        if (player_animation_move_up_i == 10) player_animation_move_up_i = 2;\r\n                        if (player_animation_move_up_i == 4 || player_animation_move_up_i == 8) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_up_0\" + player_animation_move_up_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_up_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveUp();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS) {\r\n                        if (player_animation_move_down_i == 10) player_animation_move_down_i = 2;\r\n                        if (player_animation_move_down_i == 4 || player_animation_move_down_i == 8) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_down_0\" + player_animation_move_down_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_down_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveDown();\r\n                    }\r\n                    if (isAttackLeft()) {\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            switch (weapon.getTexture()) {\r\n                                case \"longsword\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 100);\r\n                                    break;\r\n                                case \"rapier\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 90);\r\n                                    break;\r\n                                case \"long_spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 120);\r\n                                    break;\r\n                                case \"stick\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 80);\r\n                                    break;\r\n                                case \"nothing\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 70);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get(\"swish\"));\r\n                        bodyAnimation = \"player_\" + getWeapon().getAttackType() + \"_left_0\" + getHitAnimationTime();\r\n                        if (weapon.getTexture().equals(\"nothing\")) weaponAnimation = \"player_slash_left_0\" + getHitAnimationTime();\r\n                        else weaponAnimation = \"weapon_\" + getWeapon().getTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                    }\r\n                    else if (isAttackRight()) {\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            switch (weapon.getTexture()) {\r\n                                case \"longsword\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 100);\r\n                                    break;\r\n                                case \"rapier\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 90);\r\n                                    break;\r\n                                case \"long_spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 120);\r\n                                    break;\r\n                                case \"stick\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 80);\r\n                                    break;\r\n                                case \"nothing\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 70);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get(\"swish\"));\r\n                        bodyAnimation = \"player_\" + getWeapon().getAttackType() + \"_right_0\" + getHitAnimationTime();\r\n                        if (weapon.getTexture().equals(\"nothing\")) weaponAnimation = \"player_slash_right_0\" + getHitAnimationTime();\r\n                        else weaponAnimation = \"weapon_\" + getWeapon().getTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                    }\r\n                    else if (isAttackUp()) {\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            switch (weapon.getTexture()) {\r\n                                case \"longsword\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 100);\r\n                                    break;\r\n                                case \"rapier\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 90);\r\n                                    break;\r\n                                case \"long_spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 120);\r\n                                    break;\r\n                                case \"stick\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 80);\r\n                                    break;\r\n                                case \"nothing\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 70);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get(\"swish\"));\r\n                        bodyAnimation = \"player_\" + getWeapon().getAttackType() + \"_up_0\" + getHitAnimationTime();\r\n                        if (weapon.getTexture().equals(\"nothing\")) weaponAnimation = \"player_slash_up_0\" + getHitAnimationTime();\r\n                        else weaponAnimation = \"weapon_\" + getWeapon().getTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                    }\r\n                    else if (isAttackDown()) {\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            switch (weapon.getTexture()) {\r\n                                case \"longsword\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 100);\r\n                                    break;\r\n                                case \"rapier\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 90);\r\n                                    break;\r\n                                case \"long_spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 120);\r\n                                    break;\r\n                                case \"stick\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 80);\r\n                                    break;\r\n                                case \"nothing\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 70);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get(\"swish\"));\r\n                        bodyAnimation = \"player_\" + getWeapon().getAttackType() + \"_down_0\" + getHitAnimationTime();\r\n                        if (weapon.getTexture().equals(\"nothing\")) weaponAnimation = \"player_slash_down_0\" + getHitAnimationTime();\r\n                        else weaponAnimation = \"weapon_\" + getWeapon().getTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                    }\r\n\r\n                    switch (getMoveDirection()) {\r\n                        case \"left\":\r\n                            getHitbox().update(getX() + 23, getY() + 15, getX() + 42, getY() + 59);\r\n                            break;\r\n                        case \"right\":\r\n                            getHitbox().update(getX() + 21, getY() + 15, getX() + 40, getY() + 59);\r\n                            break;\r\n                        case \"up\":\r\n                            getHitbox().update(getX() + 20, getY() + 15, getX() + 43, getY() + 60);\r\n                            break;\r\n                        case \"down\":\r\n                            getHitbox().update(getX() + 20, getY() + 15, getX() + 43, getY() + 61);\r\n                            break;\r\n                    }\r\n                    getCollisionBox().update(getX() + 17, getY() + 52, getX() + 46, getY() + 60);\r\n                    reArmor();\r\n                }\r\n            }\r\n            // В городе\r\n            else if (level.equals(\"Town\") && !dialogBubble && !scrollMenu) {\r\n                bodyAnimation = \"player_stand_\" + getMoveDirection();\r\n                headAnimation = \"HEAD_\" + getHeadTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                beltAnimation = \"BELT_\" + getBeltTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                handsAnimation = \"HANDS_\" + getHandsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                legsAnimation = \"LEGS_\" + getLegsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                feetAnimation = \"FEET_\" + getFeetTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n\r\n                if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) {\r\n                    if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                    if (player_animation_move_left_i == 3 || player_animation_move_left_i == 6)\r\n                        stepSound.play(playerSounds.get(\"stepStone\"));\r\n                    bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                    headAnimation = \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    if (player_animation_move_g == 8) {\r\n                        player_animation_move_left_i++;\r\n                        player_animation_move_g = 0;\r\n                    }\r\n                    player_animation_move_g++;\r\n                    moveLeft();\r\n                    if (!(getX() <= 290) && !(getX() > 1186)) {\r\n                        glTranslated(1, 0, 0);\r\n                        forPlacingCamera--;\r\n                    }\r\n                    if (getX() + 40 > 1410 && getX() + 40 < 1503) {\r\n                        if (getY() != 192) setY(getY() + 1);\r\n                    }\r\n                }\r\n                else if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) {\r\n                    if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                    if (player_animation_move_right_i == 3 || player_animation_move_right_i == 6)\r\n                        stepSound.play(playerSounds.get(\"stepStone\"));\r\n                    bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                    headAnimation = \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    if (player_animation_move_g == 8) {\r\n                        player_animation_move_right_i++;\r\n                        player_animation_move_g = 0;\r\n                    }\r\n                    player_animation_move_g++;\r\n                    moveRight();\r\n                    if (!(getX() > 1186) && !(getX() <= 290)) {\r\n                        glTranslated(-1, 0, 0);\r\n                        forPlacingCamera++;\r\n                    }\r\n                    if (getX() + 40 > 1410 && getX() + 40 < 1503) {\r\n                        if (getY() != 100) setY(getY() - 1);\r\n                    }\r\n                }\r\n            }\r\n            // В главном меню\r\n            else if (level.equals(\"MainMenu\")) {\r\n                if (mainMenuDirection) {\r\n                    if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                    bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                    headAnimation = \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    if (player_animation_move_g == 8) {\r\n                        player_animation_move_right_i++;\r\n                        player_animation_move_g = 0;\r\n                    }\r\n                    player_animation_move_g++;\r\n                    moveRight();\r\n                }\r\n                else if (!mainMenuDirection) {\r\n                    if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                    bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                    headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_left_i;\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    if (player_animation_move_g == 8) {\r\n                        player_animation_move_left_i++;\r\n                        player_animation_move_g = 0;\r\n                    }\r\n                    player_animation_move_g++;\r\n                    moveLeft();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            bodyAnimation = \"player_hurt_0\" + getDeathAnimationTime();\r\n            headAnimation = \"HEAD_\" + getHeadTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            beltAnimation = \"BELT_\" + getBeltTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            handsAnimation = \"HANDS_\" + getHandsTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            legsAnimation = \"LEGS_\" + getLegsTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            feetAnimation = \"FEET_\" + getFeetTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n        }\r\n    }\r\n\r\n    public void updateDamage() { setDamage(weapon.getDamage());}\r\n\r\n    public void reArmor() {\r\n        this.setArmor(head.getDefense() + shoulders.getDefense() + overTorso.getDefense() + torso.getDefense() + belt.getDefense() +\r\n                hands.getDefense() + legs.getDefense() + feet.getDefense());\r\n    }\r\n\r\n    public Armor getArmorType(Armor armor) {\r\n        switch (armor.getType()) {\r\n            case \"head\": return head;\r\n            case \"shoulders\": return shoulders;\r\n            case \"overTorso\": return overTorso;\r\n            case \"torso\": return torso;\r\n            case \"belt\": return belt;\r\n            case \"hands\": return hands;\r\n            case \"legs\": return legs;\r\n            case \"feet\": return feet;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void setArmor(Armor armor) {\r\n        switch (armor.getType()) {\r\n            case \"head\":\r\n                head = armor;\r\n                break;\r\n            case \"shoulders\":\r\n                shoulders = armor;\r\n                break;\r\n            case \"overTorso\":\r\n                overTorso = armor;\r\n                break;\r\n            case \"torso\":\r\n                torso = armor;\r\n                break;\r\n            case \"belt\":\r\n                belt = armor;\r\n                break;\r\n            case \"hands\":\r\n                hands = armor;\r\n                break;\r\n            case \"legs\":\r\n                legs = armor;\r\n                break;\r\n            case \"feet\":\r\n                feet = armor;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public Weapon getWeapon() { return weapon; }\r\n\r\n    public void setWeapon(Weapon weapon) { this.weapon = weapon; }\r\n\r\n    public int getForPlacingCamera() { return forPlacingCamera; }\r\n\r\n    public void setForPlacingCamera(int forPlacingCamera) { this.forPlacingCamera = forPlacingCamera; }\r\n\r\n    public String getHeadTexture() { return head.getTexture(); }\r\n\r\n    public String getShouldersTexture() { return shoulders.getTexture(); }\r\n\r\n    public String getOverTorsoTexture() { return overTorso.getTexture(); }\r\n\r\n    public String getTorsoTexture() { return torso.getTexture(); }\r\n\r\n    public String getBeltTexture() { return belt.getTexture(); }\r\n\r\n    public String getHandsTexture() { return hands.getTexture(); }\r\n\r\n    public String getLegsTexture() { return legs.getTexture(); }\r\n\r\n    public String getFeetTexture() { return feet.getTexture(); }\r\n\r\n    public String getBodyAnimation() { return bodyAnimation; }\r\n\r\n    public String getWeaponAnimation() { return weaponAnimation; }\r\n\r\n    public String getHeadAnimation() { return headAnimation; }\r\n\r\n    public String getShouldersAnimation() { return shouldersAnimation; }\r\n\r\n    public String getOverTorsoAnimation() { return overTorsoAnimation; }\r\n\r\n    public String getTorsoAnimation() { return torsoAnimation; }\r\n\r\n    public String getBeltAnimation() { return beltAnimation; }\r\n\r\n    public String getHandsAnimation() { return handsAnimation; }\r\n\r\n    public String getLegsAnimation() { return legsAnimation; }\r\n\r\n    public String getFeetAnimation() { return feetAnimation; }\r\n\r\n    public HashMap<String, Integer> getPlayerSounds() { return playerSounds; }\r\n\r\n    public Source getStepSound() { return stepSound; }\r\n\r\n    public int getMoney() { return money; }\r\n\r\n    public void setMoney(int money) { this.money = money; }\r\n\r\n    public int getKeys() { return keys; }\r\n\r\n    public void setKeys(int keys) { this.keys = keys; }\r\n\r\n    public boolean isDialogBubbleChoice() { return dialogBubbleChoice; }\r\n\r\n    public void setDialogBubbleChoice(boolean dialogBubbleChoice) {\r\n        this.dialogBubbleChoice = dialogBubbleChoice;\r\n        selectionMenuSound.play(playerSounds.get(\"selectionClick\"));\r\n    }\r\n\r\n    public boolean isDialogBubble() { return dialogBubble; }\r\n\r\n    public void setDialogBubble(boolean dialogBubble) { this.dialogBubble = dialogBubble; }\r\n\r\n    public boolean isScrollMenu() { return scrollMenu; }\r\n\r\n    public void setScrollMenu(boolean scrollMenu) {\r\n        this.scrollMenu = scrollMenu;\r\n        openMenuSound.play(playerSounds.get(\"openMenu\"));\r\n    }\r\n\r\n    public String getMenuChoice() { return menuChoice; }\r\n\r\n    public void setMenuChoice(String menuChoice) {\r\n        this.menuChoice = menuChoice;\r\n        selectionMenuSound.play(playerSounds.get(\"selectionClick\"));\r\n    }\r\n\r\n    public void setMainMenuDirection(boolean mainMenuDirection) { this.mainMenuDirection = mainMenuDirection; }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/mobs/Player.java	(revision bd0261d4b7da7a1eee6de5a887e91281896fbd63)
+++ src/mobs/Player.java	(date 1599044591600)
@@ -49,6 +49,9 @@
                     case "down":
                         knockBackDown();
                         break;
+                    default:
+                        System.out.println("Немного не сработало отбрасывание");
+                        break;
                 }
             }
         }
@@ -308,6 +311,9 @@
                         case "down":
                             knockBackDown();
                             break;
+                        default:
+                            System.out.println("Немного не сработало отбрасывание");
+                            break;
                     }
                 }
             }
@@ -752,7 +758,10 @@
                                     break;
                             }
                         }
-                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get("swish"));
+                        if (getHitAnimationTime() == 4) {
+                            hitSound.stop(playerSounds.get("swish"));
+                            hitSound.play(playerSounds.get("swish"));
+                        }
                         bodyAnimation = "player_" + getWeapon().getAttackType() + "_left_0" + getHitAnimationTime();
                         if (weapon.getTexture().equals("nothing")) weaponAnimation = "player_slash_left_0" + getHitAnimationTime();
                         else weaponAnimation = "weapon_" + getWeapon().getTexture() + "_left_" + getWeapon().getAttackType() + "_0" + getHitAnimationTime();
@@ -786,7 +795,10 @@
                                     break;
                             }
                         }
-                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get("swish"));
+                        if (getHitAnimationTime() == 4) {
+                            hitSound.stop(playerSounds.get("swish"));
+                            hitSound.play(playerSounds.get("swish"));
+                        }
                         bodyAnimation = "player_" + getWeapon().getAttackType() + "_right_0" + getHitAnimationTime();
                         if (weapon.getTexture().equals("nothing")) weaponAnimation = "player_slash_right_0" + getHitAnimationTime();
                         else weaponAnimation = "weapon_" + getWeapon().getTexture() + "_right_" + getWeapon().getAttackType() + "_0" + getHitAnimationTime();
@@ -820,7 +832,10 @@
                                     break;
                             }
                         }
-                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get("swish"));
+                        if (getHitAnimationTime() == 4) {
+                            hitSound.stop(playerSounds.get("swish"));
+                            hitSound.play(playerSounds.get("swish"));
+                        }
                         bodyAnimation = "player_" + getWeapon().getAttackType() + "_up_0" + getHitAnimationTime();
                         if (weapon.getTexture().equals("nothing")) weaponAnimation = "player_slash_up_0" + getHitAnimationTime();
                         else weaponAnimation = "weapon_" + getWeapon().getTexture() + "_up_" + getWeapon().getAttackType() + "_0" + getHitAnimationTime();
@@ -854,7 +869,10 @@
                                     break;
                             }
                         }
-                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get("swish"));
+                        if (getHitAnimationTime() == 4) {
+                            hitSound.stop(playerSounds.get("swish"));
+                            hitSound.play(playerSounds.get("swish"));
+                        }
                         bodyAnimation = "player_" + getWeapon().getAttackType() + "_down_0" + getHitAnimationTime();
                         if (weapon.getTexture().equals("nothing")) weaponAnimation = "player_slash_down_0" + getHitAnimationTime();
                         else weaponAnimation = "weapon_" + getWeapon().getTexture() + "_down_" + getWeapon().getAttackType() + "_0" + getHitAnimationTime();
Index: src/objects/Chest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package objects;\r\n\r\nimport math.AABB;\r\n\r\nimport static java.lang.Math.random;\r\n\r\npublic class Chest extends Container {\r\n    public Chest(String texture, boolean isNoclip, boolean isLying, int minX, int minY, int maxX, int maxY, AABB collisionBox) {\r\n        super(texture, isNoclip, isLying, minX, minY, maxX, maxY, collisionBox);\r\n        setIsNeedKey(true);\r\n        for (int i = 0; i < 3; i++) {\r\n            double b = random();\r\n                if (b >= 0 && b < 0.3) {\r\n                    loot.add(loot.size(), new Coin(\"coin_01\", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 11, this.getMaxY() + 12, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 9, this.getMaxY() + 9)));\r\n                    System.out.println(\"coin\");\r\n                }\r\n                else if (b >= 0.3 && b < 0.55) {\r\n                    loot.add(loot.size(), new Potion(\"potionRed\", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16)));\r\n                    System.out.println(\"potion\");\r\n                }\r\n                else if (b >= 0.55 && b < 0.75) {\r\n                    Armor armor;\r\n                    int randomNumber = (int) (Math.random() * 22);\r\n                    switch (randomNumber) {\r\n                        case 0:\r\n                            armor = new Armor(\"plate_shoes\", \"feet\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 1:\r\n                            armor = new Armor(\"leather_hat\", \"head\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 2:\r\n                            armor = new Armor(\"robe_hood\", \"head\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 3:\r\n                            armor = new Armor(\"chain_helmet\", \"head\", 4, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 4:\r\n                            armor = new Armor(\"chain_hood\", \"head\", 4, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 5:\r\n                            armor = new Armor(\"plate_helmet\", \"head\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 6:\r\n                            armor = new Armor(\"leather_shoulderPads\", \"shoulders\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 7:\r\n                            armor = new Armor(\"plate_shoulderPads\", \"shoulders\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 8:\r\n                            armor = new Armor(\"shirt_white\", \"torso\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 9:\r\n                            armor = new Armor(\"robe_shirt_brown\", \"torso\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 10:\r\n                            armor = new Armor(\"leather_armor\", \"overTorso\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 11:\r\n                            armor = new Armor(\"chain_jacket_purple\", \"overTorso\", 4, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 12:\r\n                            armor = new Armor(\"chain_armor\", \"torso\", 4, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 13:\r\n                            armor = new Armor(\"plate_armor\", \"overTorso\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 14:\r\n                            armor = new Armor(\"leather\", \"belt\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 15:\r\n                            armor = new Armor(\"rope\", \"belt\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 16:\r\n                            armor = new Armor(\"plate_gloves\", \"hands\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 17:\r\n                            armor = new Armor(\"leather_bracers\", \"hands\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 18:\r\n                            armor = new Armor(\"pants_greenish\", \"legs\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 19:\r\n                            armor = new Armor(\"robe_skirt\", \"legs\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 20:\r\n                            armor = new Armor(\"plate_pants\", \"legs\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        case 21:\r\n                            armor = new Armor(\"shoes_brown\", \"feet\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                            break;\r\n                        default:\r\n                            throw new IllegalStateException(\"Unexpected value: \" + randomNumber);\r\n                    }\r\n                    loot.add(loot.size(), armor);\r\n                    System.out.println(\"armor\");\r\n                }\r\n                else if (b >= 0.75 && b <= 1) System.out.println(\"nothing\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/objects/Chest.java	(revision bd0261d4b7da7a1eee6de5a887e91281896fbd63)
+++ src/objects/Chest.java	(date 1599043871310)
@@ -5,8 +5,11 @@
 import static java.lang.Math.random;
 
 public class Chest extends Container {
-    public Chest(String texture, boolean isNoclip, boolean isLying, int minX, int minY, int maxX, int maxY, AABB collisionBox) {
-        super(texture, isNoclip, isLying, minX, minY, maxX, maxY, collisionBox);
+    public Chest(String texture, int minX, int minY) {
+        super(texture, false, true, minX, minY, 0, 0, new AABB());
+        setMaxX(minX + 32);
+        setMaxY(minY + 32);
+        getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
         setIsNeedKey(true);
         for (int i = 0; i < 3; i++) {
             double b = random();
@@ -15,7 +18,7 @@
                     System.out.println("coin");
                 }
                 else if (b >= 0.3 && b < 0.55) {
-                    loot.add(loot.size(), new Potion("potionRed", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16)));
+                    loot.add(loot.size(), new Potion("potionRed", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 12, this.getMaxY() + 18, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 12, this.getMaxY() + 18)));
                     System.out.println("potion");
                 }
                 else if (b >= 0.55 && b < 0.75) {
Index: src/objects/Barrel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package objects;\r\n\r\nimport math.AABB;\r\n\r\nimport static java.lang.Math.random;\r\n\r\npublic class Barrel extends Container {\r\n    public Barrel(String texture, boolean isNoclip, boolean isLying, int minX, int minY, int maxX, int maxY, AABB collisionBox) {\r\n        super(texture, isNoclip, isLying, minX, minY, maxX, maxY, collisionBox);\r\n        for (int i = 0; i < 3; i++) {\r\n            double b = random();\r\n            if (b >= 0 && b < 0.3) {\r\n                loot.add(loot.size(), new Coin(\"coin_01\", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 11, this.getMaxY() + 12, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 9, this.getMaxY() + 9)));\r\n                System.out.println(\"coin\");\r\n            }\r\n            else if (b >= 0.3 && b < 0.4) {\r\n                loot.add(loot.size(), new Potion(\"potionRed\", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16)));\r\n                System.out.println(\"potion\");\r\n            }\r\n            else if (b >= 0.4 && b <= 1) System.out.println(\"nothing\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/objects/Barrel.java	(revision bd0261d4b7da7a1eee6de5a887e91281896fbd63)
+++ src/objects/Barrel.java	(date 1599043651881)
@@ -5,8 +5,11 @@
 import static java.lang.Math.random;
 
 public class Barrel extends Container {
-    public Barrel(String texture, boolean isNoclip, boolean isLying, int minX, int minY, int maxX, int maxY, AABB collisionBox) {
-        super(texture, isNoclip, isLying, minX, minY, maxX, maxY, collisionBox);
+    public Barrel(String texture, int minX, int minY) {
+        super(texture, false, true, minX, minY, 0, 0, new AABB());
+        setMaxX(minX + 20);
+        setMaxY(minY + 30);
+        getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
         for (int i = 0; i < 3; i++) {
             double b = random();
             if (b >= 0 && b < 0.3) {
@@ -14,7 +17,7 @@
                 System.out.println("coin");
             }
             else if (b >= 0.3 && b < 0.4) {
-                loot.add(loot.size(), new Potion("potionRed", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16)));
+                loot.add(loot.size(), new Potion("potionRed", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 12, this.getMaxY() + 18, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 12, this.getMaxY() + 18)));
                 System.out.println("potion");
             }
             else if (b >= 0.4 && b <= 1) System.out.println("nothing");
Index: src/objects/Furniture.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package objects;\r\n\r\nimport math.AABB;\r\n\r\npublic class Furniture extends Object {\r\n\r\n    public Furniture(String texture, int minX, int minY) {\r\n        super(texture, false, true, minX, minY, 0, 0, new AABB());\r\n        switch (texture) {\r\n            case \"table0\": {\r\n                setMaxX(minX + 64);\r\n                setMaxY(minY + 50);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"gate2\": {\r\n                setMaxX(minX + 48);\r\n                setMaxY(minY + 24);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"gate3\": {\r\n                setMaxX(minX + 36);\r\n                setMaxY(minY + 84);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"water\": {\r\n                setMaxX(minX + 32);\r\n                setMaxY(minY + 32);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"altar0\": {\r\n                setMaxX(minX + 32);\r\n                setMaxY(minY + 64);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"altar1\": {\r\n                setMaxX(minX + 32);\r\n                setMaxY(minY + 60);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"table1\": {\r\n                setMaxX(minX + 32);\r\n                setMaxY(minY + 80);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"chair0\":\r\n            case \"chair1\": {\r\n                setMaxX(minX + 18);\r\n                setMaxY(minY + 44);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"chair2\": {\r\n                setMaxX(minX + 20);\r\n                setMaxY(minY + 44);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"chair3\": {\r\n                setMaxX(minX + 20);\r\n                setMaxY(minY + 36);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"bookBlue\": {\r\n                setNoclip(false);\r\n                setMaxX(minX + 14);\r\n                setMaxY(minY + 22);\r\n                break;\r\n            }\r\n            case \"bookPink\":\r\n            case \"bookGreen\": {\r\n                setNoclip(false);\r\n                setMaxX(minX + 14);\r\n                setMaxY(minY + 18);\r\n                break;\r\n            }\r\n            case \"bookRed\": {\r\n                setNoclip(false);\r\n                setMaxX(minX + 18);\r\n                setMaxY(minY + 26);\r\n                break;\r\n            }\r\n            case \"bagSmall\": {\r\n                setMaxX(minX + 16);\r\n                setMaxY(minY + 20);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"bagMedium\": {\r\n                setMaxX(minX + 22);\r\n                setMaxY(minY + 26);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"bagBig\": {\r\n                setMaxX(minX + 28);\r\n                setMaxY(minY + 26);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"bones\":\r\n            case \"trash\": {\r\n                setNoclip(false);\r\n                setMaxX(minX + 32);\r\n                setMaxY(minY + 32);\r\n                break;\r\n            }\r\n            case \"boxOpened\": {\r\n                setMaxX(minX + 24);\r\n                setMaxY(minY + 30);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"barrelOpened\": {\r\n                setMaxX(minX + 20);\r\n                setMaxY(minY + 30);\r\n                getCollisionBox().update(minX, minY, getMaxX(), getMaxY());\r\n                break;\r\n            }\r\n            case \"littleBag\": {\r\n                setMaxX(minX + 28);\r\n                setMaxY(minY + 22);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/objects/Furniture.java	(revision bd0261d4b7da7a1eee6de5a887e91281896fbd63)
+++ src/objects/Furniture.java	(date 1599041203973)
@@ -32,27 +32,27 @@
                 break;
             }
             case "altar0": {
-                setMaxX(minX + 32);
-                setMaxY(minY + 64);
+                setMaxX(minX + 34);
+                setMaxY(minY + 66);
                 getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
                 break;
             }
             case "altar1": {
-                setMaxX(minX + 32);
-                setMaxY(minY + 60);
+                setMaxX(minX + 34);
+                setMaxY(minY + 62);
                 getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
                 break;
             }
             case "table1": {
-                setMaxX(minX + 32);
-                setMaxY(minY + 80);
+                setMaxX(minX + 34);
+                setMaxY(minY + 82);
                 getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
                 break;
             }
             case "chair0":
             case "chair1": {
-                setMaxX(minX + 18);
-                setMaxY(minY + 44);
+                setMaxX(minX + 20);
+                setMaxY(minY + 46);
                 getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
                 break;
             }
@@ -63,8 +63,8 @@
                 break;
             }
             case "chair3": {
-                setMaxX(minX + 20);
-                setMaxY(minY + 36);
+                setMaxX(minX + 22);
+                setMaxY(minY + 38);
                 getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
                 break;
             }
@@ -83,13 +83,13 @@
             }
             case "bookRed": {
                 setNoclip(false);
-                setMaxX(minX + 18);
-                setMaxY(minY + 26);
+                setMaxX(minX + 20);
+                setMaxY(minY + 28);
                 break;
             }
             case "bagSmall": {
-                setMaxX(minX + 16);
-                setMaxY(minY + 20);
+                setMaxX(minX + 18);
+                setMaxY(minY + 22);
                 getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
                 break;
             }
@@ -100,8 +100,8 @@
                 break;
             }
             case "bagBig": {
-                setMaxX(minX + 28);
-                setMaxY(minY + 26);
+                setMaxX(minX + 30);
+                setMaxY(minY + 28);
                 getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
                 break;
             }
Index: src/objects/Shop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package objects;\r\n\r\nimport math.AABB;\r\n\r\npublic class Shop extends Container {\r\n    public Shop() {\r\n        super(\"texture\", true, false, 0, 0, 0, 0, new AABB());\r\n        // Случайная генерация одежды\r\n        int randomNumber;\r\n        int forDuplicateExclude1 = 0, forDuplicateExclude2 = 0;\r\n        for (int i = 0; i < 3; i++) {\r\n            Armor armor;\r\n            randomNumber = (int) (Math.random() * 22);\r\n            if (i > 0) {\r\n                while (randomNumber == forDuplicateExclude1 || randomNumber == forDuplicateExclude2)\r\n                    randomNumber = (int) (Math.random() * 22);\r\n            }\r\n            if (i == 0) forDuplicateExclude1 = randomNumber;\r\n            if (i == 1) forDuplicateExclude2 = randomNumber;\r\n            switch (randomNumber) {\r\n                case 0:\r\n                    armor = new Armor(\"plate_shoes\", \"feet\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 1:\r\n                    armor = new Armor(\"leather_hat\", \"head\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 2:\r\n                    armor = new Armor(\"robe_hood\", \"head\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 3:\r\n                    armor = new Armor(\"chain_helmet\", \"head\", 4, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 4:\r\n                    armor = new Armor(\"chain_hood\", \"head\", 4, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 5:\r\n                    armor = new Armor(\"plate_helmet\", \"head\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 6:\r\n                    armor = new Armor(\"leather_shoulderPads\", \"shoulders\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 7:\r\n                    armor = new Armor(\"plate_shoulderPads\", \"shoulders\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 8:\r\n                    armor = new Armor(\"shirt_white\", \"torso\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 9:\r\n                    armor = new Armor(\"robe_shirt_brown\", \"torso\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 10:\r\n                    armor = new Armor(\"leather_armor\", \"overTorso\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 11:\r\n                    armor = new Armor(\"chain_jacket_purple\", \"overTorso\", 4, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 12:\r\n                    armor = new Armor(\"chain_armor\", \"torso\", 4, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 13:\r\n                    armor = new Armor(\"plate_armor\", \"overTorso\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 14:\r\n                    armor = new Armor(\"leather\", \"belt\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 15:\r\n                    armor = new Armor(\"rope\", \"belt\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 16:\r\n                    armor = new Armor(\"plate_gloves\", \"hands\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 17:\r\n                    armor = new Armor(\"leather_bracers\", \"hands\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 18:\r\n                    armor = new Armor(\"pants_greenish\", \"legs\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 19:\r\n                    armor = new Armor(\"robe_skirt\", \"legs\", 2, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 20:\r\n                    armor = new Armor(\"plate_pants\", \"legs\", 5, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                case 21:\r\n                    armor = new Armor(\"shoes_brown\", \"feet\", 1, true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 64, this.getMaxY() + 64, 10);\r\n                    break;\r\n                default:\r\n                    throw new IllegalStateException(\"Unexpected value: \" + randomNumber);\r\n            }\r\n            armor.setPositionOnTradeTable(i + 1);\r\n            loot.add(armor);\r\n        }\r\n        // Добавление сгенерированной одежды в коллекцию\r\n        for (Object object : loot) {\r\n            Armor armorForShop = (Armor) object;\r\n            if (armorForShop.getPositionOnTradeTable() == 1) {\r\n                switch (armorForShop.getTexture()) {\r\n                    case \"leather_hat\":\r\n                    case \"plate_helmet\":\r\n                        armorForShop.setSize(296, 225, 296 + 64, 225 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"robe_hood\":\r\n                        armorForShop.setSize(295, 222, 295 + 64, 222 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"chain_helmet\":\r\n                        armorForShop.setSize(295, 226, 295 + 64, 226 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"chain_hood\":\r\n                        armorForShop.setSize(296, 222, 296 + 64, 222 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"leather_shoulderPads\":\r\n                        armorForShop.setSize(295, 218, 295 + 64, 218 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"plate_shoulderPads\":\r\n                        armorForShop.setSize(296, 213, 296 + 64, 213 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"robe_shirt_brown\":\r\n                    case \"shirt_white\":\r\n                        armorForShop.setSize(295, 213, 295 + 64, 213 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"leather_armor\":\r\n                    case \"plate_armor\":\r\n                    case \"chain_jacket_purple\":\r\n                        armorForShop.setSize(296, 210, 296 + 64, 210 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"chain_armor\":\r\n                        armorForShop.setSize(296, 209, 296 + 64, 209 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"rope\":\r\n                    case \"leather\":\r\n                        armorForShop.setSize(296, 208, 296 + 64, 208 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"leather_bracers\":\r\n                    case \"plate_gloves\":\r\n                        armorForShop.setSize(296, 207, 296 + 64, 207 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"plate_pants\":\r\n                    case \"pants_greenish\":\r\n                        armorForShop.setSize(296, 204, 296 + 64, 204 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"robe_skirt\":\r\n                        armorForShop.setSize(295, 202, 295 + 64, 202 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"shoes_brown\":\r\n                        armorForShop.setSize(296, 197, 296 + 64, 197 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                    case \"plate_shoes\":\r\n                        armorForShop.setSize(296, 196, 296 + 64, 196 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x + 10, armorForShop.getCollisionBox().getMax().y);\r\n                        break;\r\n                }\r\n            }\r\n            else if (armorForShop.getPositionOnTradeTable() == 2) {\r\n                switch (armorForShop.getTexture()) {\r\n                    case \"leather_hat\":\r\n                        armorForShop.setSize(331, 186, 331 + 64, 186 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"robe_hood\":\r\n                        armorForShop.setSize(331, 180, 331 + 64, 180 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"chain_helmet\":\r\n                        armorForShop.setSize(331, 184, 331 + 64, 184 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"chain_hood\":\r\n                        armorForShop.setSize(332, 180, 332 + 64, 180 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"plate_helmet\":\r\n                        armorForShop.setSize(331, 183, 331 + 64, 183 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"leather_shoulderPads\":\r\n                        armorForShop.setSize(332, 174, 332 + 64, 174 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"plate_shoulderPads\":\r\n                        armorForShop.setSize(329, 170, 329 + 64, 170 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"robe_shirt_brown\":\r\n                    case \"shirt_white\":\r\n                        armorForShop.setSize(332, 169, 332 + 64, 169 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"leather_armor\":\r\n                    case \"plate_armor\":\r\n                        armorForShop.setSize(330, 169, 330 + 64, 169 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"chain_jacket_purple\":\r\n                        armorForShop.setSize(329, 167, 329 + 64, 167 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"chain_armor\":\r\n                        armorForShop.setSize(331, 166, 331 + 64, 166 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"rope\":\r\n                    case \"leather\":\r\n                        armorForShop.setSize(331, 167, 331 + 64, 167 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"leather_bracers\":\r\n                    case \"plate_gloves\":\r\n                        armorForShop.setSize(331, 163, 331 + 64, 163 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"plate_pants\":\r\n                    case \"pants_greenish\":\r\n                        armorForShop.setSize(331, 160, 331 + 64, 160 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"robe_skirt\":\r\n                        armorForShop.setSize(330, 158, 330 + 64, 158 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"shoes_brown\":\r\n                        armorForShop.setSize(331, 153, 331 + 64, 153 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"plate_shoes\":\r\n                        armorForShop.setSize(332, 151, 332 + 64, 151 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                }\r\n            }\r\n            else if (armorForShop.getPositionOnTradeTable() == 3) {\r\n                switch (armorForShop.getTexture()) {\r\n                    case \"leather_hat\":\r\n                        armorForShop.setSize(374, 186, 374 + 64, 186 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"robe_hood\":\r\n                        armorForShop.setSize(372, 180, 372 + 64, 180 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"chain_helmet\":\r\n                        armorForShop.setSize(373, 184, 373 + 64, 184 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"chain_hood\":\r\n                        armorForShop.setSize(375, 180, 375 + 64, 180 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"plate_helmet\":\r\n                        armorForShop.setSize(375, 183, 375 + 64, 183 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"leather_shoulderPads\":\r\n                        armorForShop.setSize(373, 173, 373 + 64, 173 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"plate_shoulderPads\":\r\n                        armorForShop.setSize(374, 170, 374 + 64, 170 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"robe_shirt_brown\":\r\n                    case \"shirt_white\":\r\n                        armorForShop.setSize(371, 169, 371 + 64, 169 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"leather_armor\":\r\n                    case \"plate_armor\":\r\n                        armorForShop.setSize(374, 169, 374 + 64, 169 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"chain_jacket_purple\":\r\n                        armorForShop.setSize(375, 167, 375 + 64, 167 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"chain_armor\":\r\n                        armorForShop.setSize(372, 166, 372 + 64, 166 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"rope\":\r\n                    case \"leather\":\r\n                        armorForShop.setSize(374, 167, 374 + 64, 167 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"leather_bracers\":\r\n                    case \"plate_gloves\":\r\n                        armorForShop.setSize(374, 162, 374 + 64, 162 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"plate_pants\":\r\n                    case \"pants_greenish\":\r\n                        armorForShop.setSize(374, 160, 374 + 64, 160 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"robe_skirt\":\r\n                        armorForShop.setSize(373, 158, 373 + 64, 158 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"shoes_brown\":\r\n                        armorForShop.setSize(371, 152, 371 + 64, 152 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                    case \"plate_shoes\":\r\n                        armorForShop.setSize(371, 151, 371 + 64, 151 + 64);\r\n                        armorForShop.correctCollisionBox();\r\n                        armorForShop.getCollisionBox().update(armorForShop.getCollisionBox().getMin().x, armorForShop.getCollisionBox().getMin().y, armorForShop.getCollisionBox().getMax().x, armorForShop.getCollisionBox().getMax().y + 20);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/objects/Shop.java	(revision bd0261d4b7da7a1eee6de5a887e91281896fbd63)
+++ src/objects/Shop.java	(date 1599044514977)
@@ -5,6 +5,7 @@
 public class Shop extends Container {
     public Shop() {
         super("texture", true, false, 0, 0, 0, 0, new AABB());
+
         // Случайная генерация одежды
         int randomNumber;
         int forDuplicateExclude1 = 0, forDuplicateExclude2 = 0;
@@ -90,6 +91,7 @@
             armor.setPositionOnTradeTable(i + 1);
             loot.add(armor);
         }
+
         // Добавление сгенерированной одежды в коллекцию
         for (Object object : loot) {
             Armor armorForShop = (Armor) object;
Index: src/objects/Box.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package objects;\r\n\r\nimport math.AABB;\r\n\r\nimport static java.lang.Math.random;\r\n\r\npublic class Box extends Container {\r\n    public Box(String texture, boolean isNoclip, boolean isLying, int minX, int minY, int maxX, int maxY, AABB collisionBox) {\r\n        super(texture, isNoclip, isLying, minX, minY, maxX, maxY, collisionBox);\r\n        for (int i = 0; i < 3; i++) {\r\n            double b = random();\r\n            if (b >= 0 && b < 0.3) {\r\n                loot.add(loot.size(), new Coin(\"coin_01\", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 11, this.getMaxY() + 12, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 9, this.getMaxY() + 9)));\r\n                System.out.println(\"coin\");\r\n            }\r\n            else if (b >= 0.3 && b < 0.4) {\r\n                loot.add(loot.size(), new Potion(\"potionRed\", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16)));\r\n                System.out.println(\"potion\");\r\n            }\r\n            else if (b >= 0.4 && b <= 1) System.out.println(\"nothing\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/objects/Box.java	(revision bd0261d4b7da7a1eee6de5a887e91281896fbd63)
+++ src/objects/Box.java	(date 1599043757083)
@@ -5,8 +5,11 @@
 import static java.lang.Math.random;
 
 public class Box extends Container {
-    public Box(String texture, boolean isNoclip, boolean isLying, int minX, int minY, int maxX, int maxY, AABB collisionBox) {
-        super(texture, isNoclip, isLying, minX, minY, maxX, maxY, collisionBox);
+    public Box(String texture, int minX, int minY) {
+        super(texture, false, true, minX, minY, 0, 0, new AABB());
+        setMaxX(minX + 24);
+        setMaxY(minY + 30);
+        getCollisionBox().update(minX, minY, getMaxX(), getMaxY());
         for (int i = 0; i < 3; i++) {
             double b = random();
             if (b >= 0 && b < 0.3) {
@@ -14,7 +17,7 @@
                 System.out.println("coin");
             }
             else if (b >= 0.3 && b < 0.4) {
-                loot.add(loot.size(), new Potion("potionRed", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 10, this.getMaxY() + 16)));
+                loot.add(loot.size(), new Potion("potionRed", true, true, this.getMaxX(), this.getMaxY(), this.getMaxX() + 12, this.getMaxY() + 18, new AABB(this.getMaxX(), this.getMaxY(), this.getMaxX() + 12, this.getMaxY() + 18)));
                 System.out.println("potion");
             }
             else if (b >= 0.4 && b <= 1) System.out.println("nothing");
