Index: src/Window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import content.AudioMaster;\r\nimport content.Source;\r\nimport content.Storage;\r\nimport content.Texture;\r\nimport math.AABB;\r\nimport math.CollisionMessage;\r\nimport mobs.*;\r\nimport objects.*;\r\nimport objects.Object;\r\nimport org.lwjgl.glfw.*;\r\nimport org.lwjgl.opengl.*;\r\nimport org.lwjgl.system.*;\r\nimport singletons.SingletonMobs;\r\nimport singletons.SingletonPlayer;\r\n\r\nimport java.nio.*;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\nimport static org.lwjgl.glfw.Callbacks.*;\r\nimport static org.lwjgl.glfw.GLFW.*;\r\nimport static org.lwjgl.opengl.GL11.*;\r\nimport static org.lwjgl.system.MemoryStack.*;\r\nimport static org.lwjgl.system.MemoryUtil.*;\r\n\r\npublic class Window {\r\n    private long window;\r\n    SingletonMobs singletonMobs;\r\n    SingletonPlayer singletonPlayer;\r\n    private ArrayList<Object> firstLevelObjectList;\r\n    private ArrayList<Object> secondLevelObjectList;\r\n    private ArrayList<Object> thirdLevelObjectList;\r\n    private ArrayList<Object> shopObjectList;\r\n    private HashMap<String, Integer> textureMap;\r\n    private HashMap<String, Integer> soundMap;\r\n    private HashMap<String, AABB> aabbMap;\r\n    private Source backgroundMusic, armorChange, coinSound, potionSound, doorSound, containerSound, beerSound;\r\n    private Coin coinGUI;\r\n    private Shop shop;\r\n    private Blacksmith blacksmith;\r\n    private Waiter waiter;\r\n    private String level = \"MainMenu\";\r\n    private boolean canChangeLevel = false;\r\n    boolean key_E_Pressed = false;\r\n    boolean forMainMenu = true;\r\n    private boolean firstLevelMobSpawning, secondLevelMobSpawning, fourthLevelMobSpawning = false;\r\n    private int time = 0;\r\n    private Timer mobTimer = new Timer();\r\n    private TimerTask mobSpawnTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            time++;\r\n            if (time == 5) stopMobSpawn();\r\n            SingletonMobs.mobList.add(new Slime(470, 288, 1, 50, 0, 5));\r\n        }\r\n    };\r\n\r\n    private void stopMobSpawn() {\r\n        time = 0;\r\n        mobTimer.cancel();\r\n        mobTimer.purge();\r\n        mobTimer = new Timer();\r\n        mobSpawnTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                time++;\r\n                if (level.equals(\"SecondLevel\")) {\r\n                    SingletonMobs.mobList.add(new Spider(477, 284, 1, 60, 0, 10));\r\n                    if (time == 3) stopMobSpawn();\r\n                }\r\n                else if (level.equals(\"ForthLevel\")) {\r\n                    SingletonMobs.mobList.add(new Imp(477, 284, 1, 100, 0, 50));\r\n                    if (time == 1) stopMobSpawn();\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    public void run() {\r\n        System.out.println(\"Игра запущена\");\r\n\r\n        init();\r\n        loop();\r\n\r\n        glfwFreeCallbacks(window);\r\n        glfwDestroyWindow(window);\r\n\r\n        glfwTerminate();\r\n        glfwSetErrorCallback(null).free();\r\n    }\r\n\r\n    private void init() {\r\n        GLFWErrorCallback.createPrint(System.err).set();\r\n        if (!glfwInit()) throw new IllegalStateException(\"Unable to initialize GLFW\");\r\n\r\n        // Работа с экраном\r\n        window = glfwCreateWindow(1920, 1080, \"Philistine\", glfwGetPrimaryMonitor(), NULL);\r\n        if (window == NULL) throw new RuntimeException(\"Failed to create the GLFW window\");\r\n        try (MemoryStack stack = stackPush()) {\r\n            IntBuffer pWidth = stack.mallocInt(1);\r\n            IntBuffer pHeight = stack.mallocInt(1);\r\n            glfwGetWindowSize(window, pWidth, pHeight);\r\n            GLFWVidMode vidMode = glfwGetVideoMode(glfwGetPrimaryMonitor());\r\n            glfwSetWindowPos(window, (vidMode.width() - pWidth.get(0)) / 2, ((vidMode.height() - pHeight.get(0)) / 2) - 10);\r\n        }\r\n        glfwMakeContextCurrent(window);\r\n        glfwSwapInterval(1);\r\n        glfwShowWindow(window);\r\n\r\n        // Работа с OpenGL\r\n        GL.createCapabilities(); // создает instance для OpenGL в текущем потоке\r\n        glMatrixMode(GL_PROJECTION); // Выставление камеры\r\n        glLoadIdentity(); // По видимости ненужная строка(что-то с единичной матрицей)\r\n        glOrtho(0, 640, 360, 0, 1, -1); // Камера на место окна\r\n        glMatrixMode(GL_MODELVIEW); // Установка матрицы в состояние ModelView\r\n        glEnable(GL_TEXTURE_2D); // Включить 2D текстуры\r\n        glEnable(GL_BLEND); // Включить смешивание цветов\r\n        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); // Добавляет прозрачность\r\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\r\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\r\n\r\n        // Инициализация звуковых источников\r\n        AudioMaster.init();\r\n        AudioMaster.setListenerData();\r\n        backgroundMusic = new Source(1);\r\n        armorChange = new Source(0);\r\n        coinSound = new Source(0);\r\n        potionSound = new Source(0);\r\n        beerSound = new Source(0);\r\n        doorSound = new Source(0);\r\n        containerSound = new Source(0);\r\n        coinGUI = new Coin(\"coin_01\", true, false, 0, 0, 0, 0, new AABB());\r\n        coinGUI.getTimer().schedule(coinGUI.getAnimationTask(), 0, 120);\r\n\r\n        // Инициализация всех коллекций\r\n        singletonPlayer = SingletonPlayer.getInstance();\r\n        singletonMobs = SingletonMobs.getInstance();\r\n        textureMap = new HashMap<String, Integer>();\r\n        soundMap = new HashMap<String, Integer>();\r\n        aabbMap = new HashMap<String, AABB>();\r\n        firstLevelObjectList = new ArrayList<Object>();\r\n        secondLevelObjectList = new ArrayList<Object>();\r\n        thirdLevelObjectList = new ArrayList<>();\r\n        shopObjectList = new ArrayList<>();\r\n\r\n        // Единичная загрузка всех текстур\r\n        for (int i = 0, id = 0; i < Storage.textureString.length; i++)\r\n            textureMap.put(Storage.textureString[i], id = Texture.loadTexture(\"textures/\" + Storage.textureString[i]));\r\n\r\n        // Единичная загрузка всех звуков\r\n        for (int i = 0, id = 0; i < Storage.soundString.length; i++)\r\n            soundMap.put(Storage.soundString[i], id = AudioMaster.loadSound(\"sounds/\" + Storage.soundString[i]));\r\n\r\n        // Единичная загрузка всех хитбоксов\r\n        for(int i = 0; i < Storage.aabbString.length; i++)\r\n            aabbMap.put(Storage.aabbString[i], new AABB());\r\n\r\n        // Переходы м/у уровнями\r\n        aabbMap.get(\"entranceToFirstLevel\").update(0, 190, 2, 286);\r\n        aabbMap.get(\"entranceToSecondLevel\").update(626, 237, 640, 335);\r\n        aabbMap.get(\"entranceToThirdLevel\").update(197, 134, 237, 145);\r\n        aabbMap.get(\"entranceToForthLevel\").update(247, 134, 283, 144);\r\n        aabbMap.get(\"entranceFromThirdToSecondLevel\").update(249, 134, 288, 146);\r\n        aabbMap.get(\"entranceFromForthToSecondLevel\").update(199, 132, 236, 141);\r\n        aabbMap.get(\"entranceFromTavernToTown\").update(224,316,255,318);\r\n        aabbMap.get(\"entranceFromForgeToTown\").update(384,316,415,318);\r\n        aabbMap.get(\"toBuyBeer\").update(224, 240, 255, 255);\r\n\r\n        // Добавление объектов на первый уровень\r\n        firstLevelObjectList.add(new Furniture(\"barrelOpened\", 118, 135));\r\n        firstLevelObjectList.add(new Furniture(\"bagMedium\", 137, 134));\r\n        firstLevelObjectList.add(new Furniture(\"boxOpened\", 308, 129));\r\n        firstLevelObjectList.add(new Furniture(\"chair1\", 400, 173));\r\n        firstLevelObjectList.add(new Furniture(\"chair3\", 432, 227));\r\n        firstLevelObjectList.add(new Furniture(\"table1\", 426, 163));\r\n        firstLevelObjectList.add(new Furniture(\"littleBag\", 426, 160));\r\n        firstLevelObjectList.add(new Furniture(\"bookRed\", 434, 186));\r\n        firstLevelObjectList.add(new Furniture(\"bones\", 113, 173));\r\n        firstLevelObjectList.add(new Furniture(\"trash\", 462, 173));\r\n        firstLevelObjectList.add(new Lever(\"lever\", 500, 241));\r\n        firstLevelObjectList.add(new Gate(\"verticalGate\", 628, 147));\r\n        firstLevelObjectList.add(new Gate(\"verticalGate\", 628, 243));\r\n        firstLevelObjectList.add(new Weapon(\"longsword\", \"slash\", 10, true, true, 150, 150, 342, 342, new AABB(231, 231, 259, 259)));\r\n        firstLevelObjectList.add(new Armor(\"chain_helmet\", \"head\", 4, true, true, 300, 150, 364, 214, 10));\r\n\r\n        // Добавление объектов на третий уровень\r\n        thirdLevelObjectList.add(new Chest(\"chest\", false, true, 279, 215, 279 + 32, 215 + 32, new AABB(279, 215, 279 + 32, 215 + 32)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 369, 127, 369 + 24, 127 + 30, new AABB(369, 127, 369 + 24, 127 + 30)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 451, 153, 451 + 24, 153 + 30, new AABB(451, 153, 451 + 24, 153 + 30)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 414, 246, 414 + 24, 246 + 30, new AABB(414, 246, 414 + 24, 246 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 150, 234, 150 + 20, 234 + 30, new AABB(150, 234, 150 + 20, 234 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 111, 241, 111 + 20, 241 + 30, new AABB(111, 241, 111 + 20, 241 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 120, 278, 120 + 20, 278 + 30, new AABB(120, 278, 120 + 20, 278 + 30)));\r\n        thirdLevelObjectList.add(new Furniture(\"bagBig\", 171, 131));\r\n        thirdLevelObjectList.add(new Furniture(\"bagMedium\", 199, 133));\r\n        thirdLevelObjectList.add(new Furniture(\"bagSmall\", 113, 208));\r\n        thirdLevelObjectList.add(new Furniture(\"altar0\", 463, 164));\r\n        thirdLevelObjectList.add(new Furniture(\"altar1\", 129, 168));\r\n\r\n        shop = new Shop();\r\n        blacksmith = new Blacksmith(176, 126, 1);\r\n        waiter = new Waiter(168, 136, 1);\r\n        SingletonMobs.mobList.add(SingletonPlayer.player);\r\n\r\n        // Обработка единичного нажатий клавиш\r\n        glfwSetKeyCallback(window, (window, key, scancode, action, mods) -> {\r\n            // Нажатие Escape\r\n            if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS && !level.equals(\"MainMenu\")) {\r\n                switch (SingletonPlayer.player.getMenuChoice()) {\r\n                    case \"Resume\":\r\n                    case \"Options\":\r\n                    case \"Exit\": {\r\n                        SingletonPlayer.player.setScrollMenu(!SingletonPlayer.player.isScrollMenu());\r\n                        break;\r\n                    }\r\n                    case \"Options_Sounds\":\r\n                    case \"Options_Controls\": {\r\n                        SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                        break;\r\n                    }\r\n                    case \"Controls\": {\r\n                        SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Нажатие Е\r\n            if (key == GLFW_KEY_E && action == GLFW_PRESS && !level.equals(\"MainMenu\")) key_E_Pressed = true;\r\n\r\n            // Нажатие Enter\r\n            if (key == GLFW_KEY_ENTER && action == GLFW_PRESS) {\r\n                // Выход из главного меню\r\n                if (level.equals(\"MainMenu\")) {\r\n                    level = \"Town\";\r\n                    backgroundMusic.stop(soundMap.get(\"mainMenuTheme\"));\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu()) {\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setScrollMenu(false);\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Controls\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            AudioMaster.destroy();\r\n                            glfwSetWindowShouldClose(window, true);\r\n                            for (Mob mob : SingletonMobs.mobList) {\r\n                                if (!mob.isDead()) {\r\n                                    mob.getTimer().cancel();\r\n                                    mob.getTimer().purge();\r\n                                }\r\n                            }\r\n                            for (Object object : firstLevelObjectList) {\r\n                                if (object instanceof Coin) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                }\r\n                            }\r\n                            System.exit(0);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble()) {\r\n                    SingletonPlayer.player.setX(SingletonPlayer.player.getX() - 1);\r\n                    SingletonPlayer.player.setDialogBubble(false);\r\n                    if (SingletonPlayer.player.isDialogBubbleChoice()) {\r\n                        backgroundMusic.changeVolume(0.1f);\r\n                        backgroundMusic.play(soundMap.get(\"dungeonAmbient1\"));\r\n                        glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n\r\n                        // Установление хитбоксов стен первого уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4)\r\n                            aabbMap.get(\"wall\" + i).update(Storage.firstLevelWalls[j], Storage.firstLevelWalls[j + 1], Storage.firstLevelWalls[j + 2], Storage.firstLevelWalls[j + 3]);\r\n                        SingletonPlayer.player.setX(199);\r\n                        SingletonPlayer.player.setY(273);\r\n                        SingletonPlayer.player.setSpeed(2);\r\n                        SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        level = \"FirstLevel\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Нажатие стрелки влево\r\n            if (key == GLFW_KEY_LEFT && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttackRight() && !SingletonPlayer.player.isAttackUp() && !SingletonPlayer.player.isAttackDown() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\")) {\r\n                    SingletonPlayer.player.setAttackLeft(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"left\");\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble())\r\n                    SingletonPlayer.player.setDialogBubbleChoice(!SingletonPlayer.player.isDialogBubbleChoice());\r\n            }\r\n\r\n            // Нажатие стрелки вправо\r\n            if (key == GLFW_KEY_RIGHT && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttackLeft() && !SingletonPlayer.player.isAttackUp() && !SingletonPlayer.player.isAttackDown() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\")) {\r\n                    SingletonPlayer.player.setAttackRight(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"right\");\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble())\r\n                    SingletonPlayer.player.setDialogBubbleChoice(!SingletonPlayer.player.isDialogBubbleChoice());\r\n            }\r\n\r\n            // Нажатие стрелки вверх\r\n            if (key == GLFW_KEY_UP && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttackLeft() && !SingletonPlayer.player.isAttackRight() && !SingletonPlayer.player.isAttackDown() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\") &&\r\n                        !SingletonPlayer.player.isScrollMenu()) {\r\n                    SingletonPlayer.player.setAttackUp(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"up\");\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu())\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Exit\");\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Resume\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Sounds\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Sounds\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                    }\r\n            }\r\n\r\n            // Нажатие стрелки вниз\r\n            if (key == GLFW_KEY_DOWN && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttackLeft() && !SingletonPlayer.player.isAttackRight() && !SingletonPlayer.player.isAttackUp() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\") &&\r\n                        !SingletonPlayer.player.isScrollMenu()) {\r\n                    SingletonPlayer.player.setAttackDown(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"down\");\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu())\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Exit\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Resume\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Sounds\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Sounds\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n    }\r\n\r\n    private synchronized void loop() {\r\n        int guard_i = 1, guard_g = 0, forgeFurnace_i = 1, forgeFurnace_g = 0;\r\n        backgroundMusic.play(soundMap.get(\"mainMenuTheme\"));\r\n\r\n        while (!glfwWindowShouldClose(window)) {\r\n            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\r\n\r\n            // Переключение уровня\r\n            switch (level) {\r\n                case \"MainMenu\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"MainMenu\")); // Фон главного меню\r\n                    createQuadTexture(0, 0, 1536, 360);\r\n\r\n                    // Анимация охранника\r\n                    if (guard_i == 11) guard_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"guard_stand_0\" + guard_i));\r\n                    createQuadTexture(30, 190, 62, 224);\r\n                    if (guard_g == 10) {\r\n                        guard_i++;\r\n                        guard_g = 0;\r\n                    }\r\n                    guard_g++;\r\n\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"Philistine\"));\r\n                    createQuadTexture(SingletonPlayer.player.getX() - 68, SingletonPlayer.player.getY() - 156, SingletonPlayer.player.getX() + 64 + 68, SingletonPlayer.player.getY() - 100);\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"Press_enter\"));\r\n                    createQuadTexture(SingletonPlayer.player.getX() - 18, SingletonPlayer.player.getY() - 100, SingletonPlayer.player.getX() + 82, SingletonPlayer.player.getY() - 72);\r\n                    if (SingletonPlayer.player.getX() == 1186) forMainMenu = false;\r\n                    else if (SingletonPlayer.player.getX() == 290) forMainMenu = true;\r\n                    if (forMainMenu) {\r\n                        glTranslated(-1, 0, 0);\r\n                        SingletonPlayer.player.setForPlacingCamera(SingletonPlayer.player.getForPlacingCamera() + 1);\r\n                        SingletonPlayer.player.setMainMenuDirection(true);\r\n                    }\r\n                    else {\r\n                        glTranslated(1, 0, 0);\r\n                        SingletonPlayer.player.setForPlacingCamera(SingletonPlayer.player.getForPlacingCamera() - 1);\r\n                        SingletonPlayer.player.setMainMenuDirection(false);\r\n                    }\r\n                    break;\r\n                }\r\n                case \"Town\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"MainMenu\")); // Фон главного меню\r\n                    createQuadTexture(0, 0, 1536, 360);\r\n\r\n                    // Анимация охранника\r\n                    if (guard_i == 11) guard_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"guard_stand_0\" + guard_i));\r\n                    createQuadTexture(30, 190, 62, 224);\r\n                    if (guard_g == 10) {\r\n                        guard_i++;\r\n                        guard_g = 0;\r\n                    }\r\n                    guard_g++;\r\n\r\n                    // Левая граница города\r\n                    if (SingletonPlayer.player.getX() <= 48) SingletonPlayer.player.stopLeft();\r\n                    if (SingletonPlayer.player.getX() <= 50) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"you_Shall_Not_Pass\"));\r\n                        createQuadTexture(34, 136, 94, 195);\r\n                    }\r\n\r\n                    // Переход в данж\r\n                    if (SingletonPlayer.player.getX() + 32 == 1519) {\r\n                        SingletonPlayer.player.setDialogBubble(true);\r\n                        if (SingletonPlayer.player.isDialogBubbleChoice()) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enterTheDungeon_Yes\"));\r\n                        else if (!SingletonPlayer.player.isDialogBubbleChoice()) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enterTheDungeon_No\"));\r\n                        createQuadTexture(SingletonPlayer.player.getX() - 20, SingletonPlayer.player.getY() - 55, SingletonPlayer.player.getX() + 40, SingletonPlayer.player.getY());\r\n                    }\r\n\r\n                    if (key_E_Pressed) {\r\n                        // Вхождение в таверну\r\n                        if (SingletonPlayer.player.getX() + 32 > 305 && SingletonPlayer.player.getX() + 32 < 341) {\r\n                            level = \"tavern\";\r\n                            glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                            SingletonPlayer.player.setForPlacingCamera(3);\r\n\r\n                            // Обновление хитбоксов стен для tavern\r\n                            for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.tavernLevelWalls[j], Storage.tavernLevelWalls[j + 1],\r\n                                        Storage.tavernLevelWalls[j + 2], Storage.tavernLevelWalls[j + 3]);\r\n                            }\r\n                            doorSound.play(soundMap.get(\"doorOpen\"));\r\n                            SingletonPlayer.player.setX(210);\r\n                            SingletonPlayer.player.setY(254);\r\n                            SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        }\r\n                        // Вхождение в кузницу\r\n                        else if (SingletonPlayer.player.getX() + 32 > 620 && SingletonPlayer.player.getX() + 32 < 651) {\r\n                            level = \"forge\";\r\n                            glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                            SingletonPlayer.player.setForPlacingCamera(315);\r\n\r\n                            // Обновление хитбоксов стен для forge\r\n                            for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.forgeLevelWalls[j], Storage.forgeLevelWalls[j + 1],\r\n                                        Storage.forgeLevelWalls[j + 2], Storage.forgeLevelWalls[j + 3]);\r\n                            }\r\n                            doorSound.play(soundMap.get(\"doorOpen\"));\r\n                            SingletonPlayer.player.setX(368);\r\n                            SingletonPlayer.player.setY(254);\r\n                            SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n                    break;\r\n                }\r\n                case \"tavern\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"tavern\")); // Фон таверны\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Отрисовка оффицианта и остановка около прилавка\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"waiter_\" + waiter.getMoveDirection() + \"_move_0\" + waiter.getAnimationTime()));\r\n                    createQuadTexture(waiter.getX(), waiter.getY(), waiter.getX() + 64, waiter.getY() + 64);\r\n                    waiter.simulateBehavior();\r\n                    if (waiter.isWaitingTaskStarted()) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_question\"));\r\n                        createQuadTexture(waiter.getX() + 31, waiter.getY(), waiter.getX() + 51, waiter.getY() + 20);\r\n\r\n                        // Восстановить здоровье\r\n                        if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"toBuyBeer\"))) {\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_health\")); // Фон таверны\r\n                            createQuadTexture(SingletonPlayer.player.getX() + 32, SingletonPlayer.player.getY(),\r\n                                    SingletonPlayer.player.getX() + 52, SingletonPlayer.player.getY() + 20);\r\n                            if (key_E_Pressed && SingletonPlayer.player.getHealth() < 100 && SingletonPlayer.player.getMoney() >= 10) {\r\n                                SingletonPlayer.player.setHealth(100);\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() - 10);\r\n                                beerSound.play(soundMap.get(\"drinkBeer\"));\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"gentleman_brown\"));\r\n                    createQuadTexture(350, 190, 350 + 64, 190 + 64);\r\n\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall6\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    // Проверка выхода в город\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromTavernToTown\"))) {\r\n                        level = \"Town\";\r\n\r\n                        // Обновление хитбоксов стен для города\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.townLevelWalls[j], Storage.townLevelWalls[j + 1],\r\n                                    Storage.townLevelWalls[j + 2], Storage.townLevelWalls[j + 3]);\r\n                        }\r\n                        doorSound.play(soundMap.get(\"doorOpen\"));\r\n                        SingletonPlayer.player.getStepSound().stop(SingletonPlayer.player.getPlayerSounds().get(\"stepWood\"));\r\n                        glTranslated(-SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                        SingletonPlayer.player.setX(293);\r\n                        SingletonPlayer.player.setY(192);\r\n                        SingletonPlayer.player.setMoveDirection(\"right\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"forge\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"forge\")); // Фон кузницы\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Анимация печки\r\n                    if (forgeFurnace_i == 4) forgeFurnace_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"furnace_burn_0\" + forgeFurnace_i));\r\n                    createQuadTexture(223, 142, 259, 173);\r\n                    if (forgeFurnace_g == 12) {\r\n                        forgeFurnace_i++;\r\n                        forgeFurnace_g = 0;\r\n                    }\r\n                    forgeFurnace_g++;\r\n\r\n                    // Отрисовка кузнеца и остановка около прилавка\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"blacksmith_\" + blacksmith.getMoveDirection() + \"_move_0\" + blacksmith.getAnimationTime()));\r\n                    createQuadTexture(blacksmith.getX(), blacksmith.getY(), blacksmith.getX() + 64, blacksmith.getY() + 64);\r\n                    blacksmith.simulateBehavior();\r\n                    if (blacksmith.isWaitingTaskStarted()) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_question\"));\r\n                        createQuadTexture(blacksmith.getX() + 31, blacksmith.getY(), blacksmith.getX() + 51, blacksmith.getY() + 20);\r\n                    }\r\n\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall6\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    if (shop.loot.size() != 0) {\r\n                        shopObjectList.addAll(shop.loot);\r\n                        shop.loot.clear();\r\n                    }\r\n\r\n                    for (Object object : shopObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    for (int i = 0; i < shopObjectList.size(); i++) {\r\n                        if (!shopObjectList.get(i).isDrawAble()) continue;\r\n                        if (shopObjectList.get(i) instanceof Armor && AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(),\r\n                                shopObjectList.get(i).getCollisionBox())) {\r\n                            Armor tempArmor = (Armor) shopObjectList.get(i);\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"price\"));\r\n                            createQuadTexture(tempArmor.getMinX() + 15 ,tempArmor.getCollisionBox().getMin().y - 27, tempArmor.getMinX() + 45,  tempArmor.getCollisionBox().getMin().y);\r\n                            int tempX0, tempX1, tempY0, tempY1;\r\n                            tempX0 = tempArmor.getMinX() + 37 - 7;\r\n                            tempX1 = tempArmor.getMinX() + 37;\r\n                            tempY0 = tempArmor.getCollisionBox().getMin().y - 13;\r\n                            tempY1 = tempArmor.getCollisionBox().getMin().y - 3;\r\n                            int tempPrice = tempArmor.getPrice();\r\n                            for (int j = 0; j < getCountsOfDigits(tempArmor.getPrice()); j++) {\r\n                                switch (tempPrice % 10) {\r\n                                    case 0:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 1:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 2:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 3:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 4:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 5:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 6:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 7:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 8:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 9:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n\r\n                                }\r\n                                tempPrice = tempPrice / 10;\r\n                                tempX0 -= 7;\r\n                                tempX1 -= 7;\r\n                            }\r\n                            if (key_E_Pressed && SingletonPlayer.player.getMoney() >= tempArmor.getPrice()) {\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() - tempArmor.getPrice());\r\n                                SingletonPlayer.player.setArmor(tempArmor);\r\n                                shopObjectList.get(i).setIsLying(false);\r\n                                shopObjectList.remove(i);\r\n                                armorChange.play(soundMap.get(\"changingArmor\"));\r\n                            }\r\n                            key_E_Pressed = false;\r\n                        }\r\n                    }\r\n\r\n                    // Проверка выхода в город\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromForgeToTown\"))) {\r\n                        level = \"Town\";\r\n\r\n                        // Обновление хитбоксов стен для города\r\n                        for (int i = 0, j = 0; i < 7; i++, j += 4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.townLevelWalls[j], Storage.townLevelWalls[j + 1],\r\n                                    Storage.townLevelWalls[j + 2], Storage.townLevelWalls[j + 3]);\r\n                        }\r\n                        doorSound.play(soundMap.get(\"doorOpen\"));\r\n                        SingletonPlayer.player.getStepSound().stop(SingletonPlayer.player.getPlayerSounds().get(\"stepWood\"));\r\n                        glTranslated(-SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                        SingletonPlayer.player.setX(605);\r\n                        SingletonPlayer.player.setY(192);\r\n                        SingletonPlayer.player.setMoveDirection(\"right\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"FirstLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level0\")); // Фон первого уровня\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    //Анимация факела\r\n//                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"torch_0\" + torch_i));\r\n//                    createQuadTexture(190, 63, 221, 126);\r\n//                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"torch_0\" + torch_i));\r\n//                    createQuadTexture(384, 63, 415, 126);\r\n//                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"torch_0\" + torch_i));\r\n//                    createQuadTexture(556, 158, 587, 221);\r\n\r\n                    if (!firstLevelMobSpawning) {\r\n                        firstLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 0, 5000);\r\n                    }\r\n\r\n                    // Отрисовка всех объектов\r\n                    for (Object object : firstLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        if (object instanceof Coin) {\r\n                            Coin coin = (Coin) object;\r\n                            if (!coin.isAnimationTaskStarted())\r\n                                coin.getTimer().schedule(coin.getAnimationTask(), 0, 120);\r\n                            coin.setTexture(\"coin_0\" + coin.getAnimationTime());\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(coin.getTexture()));\r\n                        }\r\n                        else if (object instanceof Container) {\r\n                            Container container = (Container) object;\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(container.getTexture() + container.getState()));\r\n                        }\r\n                        else if (object instanceof Lever) {\r\n                            Lever lever = (Lever) object;\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(lever.getTexture() + lever.getState()));\r\n                        }\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    // Подбор всех возможных предметов с клавишей Е\r\n                    if (key_E_Pressed) {\r\n                        for (int i = 0; i < firstLevelObjectList.size(); i++) {\r\n                            if (firstLevelObjectList.get(i) instanceof Armor) {\r\n                                Armor changingArmor = (Armor) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingArmor.getCollisionBox())) {\r\n                                    Armor playerArmor = SingletonPlayer.player.getArmorType(changingArmor);\r\n                                    changingArmor.setIsLying(false);\r\n                                    SingletonPlayer.player.setArmor(changingArmor);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingArmor = playerArmor;\r\n                                    if (changingArmor.getTexture().equals(\"nothing\")) firstLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingArmor.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 20);\r\n                                        changingArmor.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 30);\r\n                                        changingArmor.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 44);\r\n                                        changingArmor.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 34);\r\n                                        changingArmor.setIsLying(true);\r\n                                        changingArmor.correctCollisionBox();\r\n                                        firstLevelObjectList.set(i, changingArmor);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else if (firstLevelObjectList.get(i) instanceof Weapon) {\r\n                                Weapon changingWeapon = (Weapon) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingWeapon.getCollisionBox())) {\r\n                                    Weapon playerWeapon = SingletonPlayer.player.getWeapon();\r\n                                    changingWeapon.setIsLying(false);\r\n                                    changingWeapon.resize();\r\n                                    SingletonPlayer.player.setWeapon(changingWeapon);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingWeapon = playerWeapon;\r\n                                    if (changingWeapon.getTexture().equals(\"nothing\")) firstLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingWeapon.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 64);\r\n                                        changingWeapon.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 64);\r\n                                        changingWeapon.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 128);\r\n                                        changingWeapon.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 128);\r\n                                        changingWeapon.setIsLying(true);\r\n                                        changingWeapon.correctCollisionBox();\r\n                                        firstLevelObjectList.set(i, changingWeapon);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else if (firstLevelObjectList.get(i) instanceof Lever) {\r\n                                Lever change = (Lever) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), change.getCollisionBox())) {\r\n                                    change.setState(\"On\");\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Slime) {\r\n                            Slime slime = (Slime) SingletonMobs.mobList.get(i);\r\n                            if (!slime.isDead()) {\r\n                                slime.update();\r\n                                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_\" + slime.getMoveDirection() + \"_0\" + slime.getAnimationTime()));\r\n                            }\r\n                            else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_death_0\" + slime.getDeathAnimationTime()));\r\n                            createQuadTexture(slime.getX(), slime.getY(), slime.getX() + 18, slime.getY() + 12);\r\n                        }\r\n                    }\r\n\r\n                    // Проверка всех мобов на столкновение со стенами, объектами. Столкновения объектов с объектами\r\n                    for (int i1 = 0; i1 < SingletonMobs.mobList.size(); i1++) {\r\n                        Mob mob = SingletonMobs.mobList.get(i1);\r\n\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                mob.stopDown();\r\n                        }\r\n\r\n                        for (int i = 0; i < firstLevelObjectList.size(); i++) {\r\n                            Object object = firstLevelObjectList.get(i);\r\n                            if (!(object instanceof Furniture) && !(object instanceof Container)) {\r\n                                // Столкновение объектов со стенами\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                                    object.stopRight();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                    object.stopLeft();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                    object.stopUp();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                    object.stopDown();\r\n\r\n                                // Столкновение объектов с объектами\r\n                                for (int j = i + 1; j < firstLevelObjectList.size(); j++) {\r\n                                    Object object2 = firstLevelObjectList.get(j);\r\n                                    if (!(object2 instanceof Furniture) && !(object2 instanceof Container)) {\r\n                                        if (AABB.AABBvsAABB(object.getCollisionBox(), object2.getCollisionBox()))\r\n                                            object.moveLeft();\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (!mob.isDead() && AABB.AABBvsAABB(mob.getCollisionBox(), object.getCollisionBox())) {\r\n                                if ((mob instanceof Player) && (object instanceof Coin)) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                    firstLevelObjectList.remove(object);\r\n                                    SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() + 10);\r\n                                    coinSound.play(soundMap.get(\"pickedCoin\"));\r\n                                    break;\r\n                                }\r\n                                else if ((mob instanceof Player) && (object instanceof Potion)) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                    firstLevelObjectList.remove(object);\r\n                                    if (SingletonPlayer.player.getHealth() > 90) SingletonPlayer.player.setHealth(100);\r\n                                    else SingletonPlayer.player.setHealth(SingletonPlayer.player.getHealth() + 10);\r\n                                    potionSound.play(soundMap.get(\"pickedPotion\"));\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (object.isNoclip()) continue;\r\n                            if (!mob.isDead() && AABB.AABBvsAABB2(mob.getCollisionBox(), object.getCollisionBox()))\r\n                                mob.stop(CollisionMessage.getMessage());\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToSecondLevel\"))) {\r\n                        for (Mob mob : SingletonMobs.mobList) {\r\n                            if (!mob.isDead() && !(mob instanceof Player)) {\r\n                                canChangeLevel = false;\r\n                                break;\r\n                            }\r\n                            canChangeLevel = true;\r\n                        }\r\n                        if (canChangeLevel) {\r\n                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                            // Обновление хитбоксов стен для второго уровня\r\n                            for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                        Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                            }\r\n                            SingletonPlayer.player.setX(2 - 14);\r\n                            SingletonPlayer.player.setY(225);\r\n                            level = \"SecondLevel\";\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case \"SecondLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level1\")); // Фон второго уровня\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    if (!secondLevelMobSpawning) {\r\n                        secondLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 3000, 10000);\r\n                    }\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Spider) {\r\n                            Spider spider = (Spider) SingletonMobs.mobList.get(i);\r\n                            if (!spider.isDead()) {\r\n                                spider.update();\r\n                                if (spider.isAttack()) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_\" + spider.getMoveDirection() + \"_attack_0\" + spider.getHitAnimationTime()));\r\n                                else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_\" + spider.getMoveDirection() + \"_move_0\" + spider.getAnimationTime()));\r\n                            }\r\n                            else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_death_0\" + spider.getDeathAnimationTime()));\r\n                            createQuadTexture(spider.getX(), spider.getY(), spider.getX() + 64, spider.getY() + 64);\r\n                        }\r\n                    }\r\n\r\n                    // Проверка всех мобов на столкновение со стенами\r\n                    for (int i1 = 0; i1 < SingletonMobs.mobList.size(); i1++) {\r\n                        Mob mob = SingletonMobs.mobList.get(i1);\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall6\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                mob.stopDown();\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на первый уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToFirstLevel\"))) {\r\n                        SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                        // Обновление хитбоксов стен для первого уровня\r\n                        for(int i = 0, j = 0; i < 5; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.firstLevelWalls[j], Storage.firstLevelWalls[j + 1],\r\n                                    Storage.firstLevelWalls[j + 2], Storage.firstLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(580);\r\n                        SingletonPlayer.player.setY(281);\r\n                        level = \"FirstLevel\";\r\n                    }\r\n\r\n                    // Проверка перехода на 3 уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToThirdLevel\"))) {\r\n                        SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                        // Обновление хитбоксов стен для 3 уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.thirdLevelWalls[j], Storage.thirdLevelWalls[j + 1],\r\n                                    Storage.thirdLevelWalls[j + 2], Storage.thirdLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(240);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                        level = \"ThirdLevel\";\r\n                    }\r\n\r\n                    // Проверка перехода на 4 уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToForthLevel\"))) {\r\n                        SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                        // Обновление хитбоксов стен для 4 уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.fourthLevelWalls[j], Storage.fourthLevelWalls[j + 1],\r\n                                    Storage.fourthLevelWalls[j + 2], Storage.fourthLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(180);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                        level = \"ForthLevel\";\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ThirdLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level2\"));\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Отрисовка всех объектов\r\n                    for (Object object : thirdLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        if (object instanceof Coin) {\r\n                            Coin coin = (Coin) object;\r\n                            if (!coin.isAnimationTaskStarted())\r\n                                coin.getTimer().schedule(coin.getAnimationTask(), 0, 120);\r\n                            coin.setTexture(\"coin_0\" + coin.getAnimationTime());\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(coin.getTexture()));\r\n                        }\r\n                        else if (object instanceof Container) {\r\n                            Container container = (Container) object;\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(container.getTexture() + container.getState()));\r\n                        }\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    // Столкновение игрока со стенами\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    for (int i = 0; i < thirdLevelObjectList.size(); i++) {\r\n                        Object object = thirdLevelObjectList.get(i);\r\n\r\n                        // Столкновение игрока с !noclip объектами\r\n                        if (AABB.AABBvsAABB2(SingletonPlayer.player.getCollisionBox(), object.getCollisionBox()) && !object.isNoclip())\r\n                            SingletonPlayer.player.stop(CollisionMessage.getMessage());\r\n\r\n                        // Столкновение объектов с объектами\r\n                        for (int j = i + 1; j < thirdLevelObjectList.size(); j++) {\r\n                            Object object2 = thirdLevelObjectList.get(j);\r\n                            if (AABB.AABBvsAABB(object.getCollisionBox(), object2.getCollisionBox())) {\r\n                                if (object.isNoclip() && object2.isNoclip()) {\r\n                                    object.moveLeft();\r\n                                    object2.moveRight();\r\n                                }\r\n                                else if (object.isNoclip() && !object2.isNoclip()) object.moveRight();\r\n                                else if (!object.isNoclip() && object2.isNoclip()) object2.moveRight();\r\n                            }\r\n                        }\r\n\r\n                        // Подбор монет и зелий игроком\r\n                        if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), object.getCollisionBox())) {\r\n                            if (object instanceof Coin) {\r\n                                object.getTimer().cancel();\r\n                                object.getTimer().purge();\r\n                                thirdLevelObjectList.remove(object);\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() + 10);\r\n                                coinSound.play(soundMap.get(\"pickedCoin\"));\r\n                                break;\r\n                            }\r\n                            else if (object instanceof Potion) {\r\n                                object.getTimer().cancel();\r\n                                object.getTimer().purge();\r\n                                thirdLevelObjectList.remove(object);\r\n                                if (SingletonPlayer.player.getHealth() > 90) SingletonPlayer.player.setHealth(100);\r\n                                else SingletonPlayer.player.setHealth(SingletonPlayer.player.getHealth() + 10);\r\n                                potionSound.play(soundMap.get(\"pickedPotion\"));\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Подбор всех возможных предметов с клавишей Е\r\n                    if (key_E_Pressed) {\r\n                        for (int i = 0; i < thirdLevelObjectList.size(); i++) {\r\n                            if (thirdLevelObjectList.get(i) instanceof Armor) {\r\n                                Armor changingArmor = (Armor) thirdLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingArmor.getCollisionBox())) {\r\n                                    Armor playerArmor = SingletonPlayer.player.getArmorType(changingArmor);\r\n                                    changingArmor.setIsLying(false);\r\n                                    SingletonPlayer.player.setArmor(changingArmor);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingArmor = playerArmor;\r\n                                    if (changingArmor.getTexture().equals(\"nothing\")) thirdLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingArmor.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 20);\r\n                                        changingArmor.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 30);\r\n                                        changingArmor.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 44);\r\n                                        changingArmor.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 34);\r\n                                        changingArmor.setIsLying(true);\r\n                                        changingArmor.correctCollisionBox();\r\n                                        thirdLevelObjectList.set(i, changingArmor);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else if (thirdLevelObjectList.get(i) instanceof Weapon) {\r\n                                Weapon changingWeapon = (Weapon) thirdLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingWeapon.getCollisionBox())) {\r\n                                    Weapon playerWeapon = SingletonPlayer.player.getWeapon();\r\n                                    changingWeapon.setIsLying(false);\r\n                                    changingWeapon.resize();\r\n                                    SingletonPlayer.player.setWeapon(changingWeapon);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingWeapon = playerWeapon;\r\n                                    if (changingWeapon.getTexture().equals(\"nothing\")) thirdLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingWeapon.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 64);\r\n                                        changingWeapon.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 64);\r\n                                        changingWeapon.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 128);\r\n                                        changingWeapon.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 128);\r\n                                        changingWeapon.setIsLying(true);\r\n                                        changingWeapon.correctCollisionBox();\r\n                                        thirdLevelObjectList.set(i, changingWeapon);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else if (thirdLevelObjectList.get(i) instanceof Container) {\r\n                                Container change = (Container) thirdLevelObjectList.get(i);\r\n                                if (AABB.toInteract(SingletonPlayer.player.getCollisionBox(), change.getCollisionBox())) {\r\n                                    if (change.getIsNeedKey() && SingletonPlayer.player.getKeys() > 0) {\r\n                                        SingletonPlayer.player.setKeys(SingletonPlayer.player.getKeys() - 1);\r\n                                        containerSound.play(soundMap.get(\"openChest\"));\r\n                                    }\r\n                                    else containerSound.play(soundMap.get(\"openBoxBarrel\"));\r\n                                    change.setState(\"Opened\");\r\n                                    if (change.loot.size() != 0) {\r\n                                        thirdLevelObjectList.addAll(change.loot);\r\n                                        change.loot.clear();\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromThirdToSecondLevel\"))) {\r\n                        level = \"SecondLevel\";\r\n                        // Обновление хитбоксов стен для второго уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j += 4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                    Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(180);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ForthLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level3\"));\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    if (!fourthLevelMobSpawning) {\r\n                        fourthLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 3000, 10000);\r\n                    }\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Imp) {\r\n                            Imp imp = (Imp) SingletonMobs.mobList.get(i);\r\n                            if (!imp.isDead()) {\r\n                                imp.update();\r\n                                // HealthBar\r\n                                int tempHealth = imp.getHealth() % 10 == 0 ? imp.getHealth() : imp.getHealth() - (imp.getHealth() % 10) + 10;\r\n                                if (tempHealth > 0) {\r\n                                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enemyHp\" + tempHealth));\r\n                                    createQuadTexture(imp.getX(), imp.getY(), imp.getX() + 64, imp.getY() + 8);\r\n                                }\r\n\r\n                                if (imp.isAttackLeft() || imp.isAttackRight() || imp.isAttackUp() || imp.isAttackDown())\r\n                                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_\" + imp.getMoveDirection() + \"_attack_0\" + imp.getHitAnimationTime()));\r\n                                else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_\" + imp.getMoveDirection() + \"_move_0\" + imp.getAnimationTime()));\r\n                            }\r\n                            else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_death_0\" + imp.getDeathAnimationTime()));\r\n                            createQuadTexture(imp.getX(), imp.getY(), imp.getX() + 64, imp.getY() + 64);\r\n                        }\r\n                    }\r\n\r\n                    // Столкновение мобов со стенами\r\n                    for (Mob mob : SingletonMobs.mobList) {\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                mob.stopDown();\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromForthToSecondLevel\"))) {\r\n                        for (Mob mob : SingletonMobs.mobList) {\r\n                            if (!mob.isDead() && !(mob instanceof Player));\r\n                        }\r\n\r\n                        // Обновление хитбоксов стен для второго уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                    Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(240);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                        level = \"SecondLevel\";\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Отрисовка интерфейса\r\n            if (!level.equals(\"MainMenu\") && !level.equals(\"Town\")) {\r\n                // Полоска здоровья\r\n                int tempHealth = SingletonPlayer.player.getHealth() % 10 == 0 ? SingletonPlayer.player.getHealth() : SingletonPlayer.player.getHealth() - (SingletonPlayer.player.getHealth() % 10) + 10;\r\n                if (tempHealth >= 0) glBindTexture(GL_TEXTURE_2D, textureMap.get(tempHealth + \"hp\"));\r\n                else if (SingletonPlayer.player.getHealth() <= 0) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"0hp\"));\r\n                createQuadTexture(0, 0, 103, 18);\r\n\r\n                // Щит с броней\r\n                int tempArmor = SingletonPlayer.player.getArmor() % 5 == 0 ? SingletonPlayer.player.getArmor() : SingletonPlayer.player.getArmor() - (SingletonPlayer.player.getArmor() % 5);\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(tempArmor + \"armor\"));\r\n                createQuadTexture(0, 20, 60, 40);\r\n\r\n                // Количество монет\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"coin_0\" + coinGUI.getAnimationTime()));\r\n                createQuadTexture(0, 42, 11, 54);\r\n                int tempCoin = SingletonPlayer.player.getMoney();\r\n                int tempX0 = 13 + (getCountsOfDigits(SingletonPlayer.player.getMoney()) * 7) - 7, tempX1 = 13 + (getCountsOfDigits(SingletonPlayer.player.getMoney()) * 7), tempY0 = 44, tempY1 = 54;\r\n                for (int i = 0; i < getCountsOfDigits(SingletonPlayer.player.getMoney()); i++) {\r\n                    switch (tempCoin % 10) {\r\n                        case 0:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 1:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 2:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 3:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 4:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 5:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 6:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 7:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 8:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 9:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n\r\n                    }\r\n                    tempCoin = tempCoin / 10;\r\n                    tempX0 -= 7;\r\n                    tempX1 -= 7;\r\n                }\r\n\r\n                // Количество ключей\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"keyGold\"));\r\n                createQuadTexture(0, 55, 16, 71);\r\n                int tempKeys = SingletonPlayer.player.getKeys();\r\n                tempX0 = 16 + (getCountsOfDigits(SingletonPlayer.player.getKeys()) * 7) - 7;\r\n                tempX1 = 16 + (getCountsOfDigits(SingletonPlayer.player.getKeys()) * 7);\r\n                tempY0 = 60;\r\n                tempY1 = 70;\r\n                for (int i = 0; i < getCountsOfDigits(SingletonPlayer.player.getKeys()); i++) {\r\n                    switch (tempKeys % 10) {\r\n                        case 0:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 1:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 2:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 3:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 4:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 5:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 6:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 7:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 8:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 9:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n\r\n                    }\r\n                    tempKeys = tempKeys / 10;\r\n                    tempX0 -= 7;\r\n                    tempX1 -= 7;\r\n                }\r\n            }\r\n\r\n            // Отрисовка экипировки и анимации\r\n            SingletonPlayer.player.update(window, level);\r\n            glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getBodyAnimation()));\r\n            createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            if (!SingletonPlayer.player.getFeetTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getFeetAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getLegsTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getLegsAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getTorsoTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getTorsoAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getOverTorsoTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getOverTorsoAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getShouldersTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getShouldersAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getBeltTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getBeltAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getHeadTexture().equals(\"nothing\")) {\r\n//                System.out.println(SingletonPlayer.player.getHeadAnimation());\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getHeadAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getHandsTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getHandsAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isDead() && !level.equals(\"MainMenu\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getWeaponAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX() - SingletonPlayer.player.getWeapon().getMinX(), SingletonPlayer.player.getY() - SingletonPlayer.player.getWeapon().getMinY(),\r\n                        SingletonPlayer.player.getX() + SingletonPlayer.player.getWeapon().getMaxX(), SingletonPlayer.player.getY() + SingletonPlayer.player.getWeapon().getMaxY());\r\n            }\r\n\r\n            // Отрисовка второстепенного меню\r\n            if (!level.equals(\"MainMenu\") && SingletonPlayer.player.isScrollMenu()) {\r\n                if (level.equals(\"Town\")) {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"scrollMenu_\" + SingletonPlayer.player.getMenuChoice())); // Фон второстепенного меню\r\n                    createQuadTexture(SingletonPlayer.player.getForPlacingCamera(), 0, SingletonPlayer.player.getForPlacingCamera() + 640, 360);\r\n                }\r\n                else {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"scrollMenu_\" + SingletonPlayer.player.getMenuChoice())); // Фон второстепенного меню\r\n                    createQuadTexture(0, 0, 640, 360);\r\n                }\r\n            }\r\n\r\n            glfwPollEvents();\r\n            glfwSwapBuffers(window);\r\n        }\r\n    }\r\n\r\n    private void createQuadTexture(int xMin, int yMin, int xMax, int yMax) {\r\n        glBegin(GL_QUADS);\r\n        glTexCoord2d(0, 0);\r\n        glVertex2f(xMin, yMin);\r\n        glTexCoord2d(1, 0);\r\n        glVertex2f(xMax, yMin);\r\n        glTexCoord2d(1, 1);\r\n        glVertex2f(xMax, yMax);\r\n        glTexCoord2d(0, 1);\r\n        glVertex2f(xMin, yMax);\r\n        glEnd();\r\n    }\r\n\r\n    public static int getCountsOfDigits(long number) {\r\n        return (number == 0) ? 1 : (int) Math.ceil(Math.log10(Math.abs(number) + 0.5));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Window.java	(revision 528e56d66072a05a68134df788af3ed134da5368)
+++ src/Window.java	(date 1598708018699)
@@ -200,8 +200,8 @@
         thirdLevelObjectList.add(new Furniture("altar1", 129, 168));
 
         shop = new Shop();
-        blacksmith = new Blacksmith(176, 126, 1);
         waiter = new Waiter(168, 136, 1);
+        blacksmith = new Blacksmith(176, 126, 1);
         SingletonMobs.mobList.add(SingletonPlayer.player);
 
         // Обработка единичного нажатий клавиш
@@ -780,8 +780,8 @@
                                 }
                             }
                         }
-                    }
-                    key_E_Pressed = false;
+                        key_E_Pressed = false;
+                    }
 
                     // Все операции с мобами
                     for (int i = 1; i < SingletonMobs.mobList.size(); i++) {
