Index: src/Window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import math.AABB;\r\nimport math.CollisionMessage;\r\nimport mobs.*;\r\nimport objects.Armor;\r\nimport objects.Furniture;\r\nimport objects.Object;\r\nimport org.lwjgl.glfw.*;\r\nimport org.lwjgl.openal.AL10;\r\nimport org.lwjgl.opengl.*;\r\nimport org.lwjgl.system.*;\r\n\r\nimport java.nio.*;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\nimport static org.lwjgl.glfw.Callbacks.*;\r\nimport static org.lwjgl.glfw.GLFW.*;\r\nimport static org.lwjgl.opengl.GL11.*;\r\nimport static org.lwjgl.system.MemoryStack.*;\r\nimport static org.lwjgl.system.MemoryUtil.*;\r\n\r\npublic class Window {\r\n    private long window;\r\n    private ArrayList<Mob> mobList;\r\n    private HashMap<String, Integer> textureMap;\r\n    private HashMap<String, AABB> aabbMap;\r\n    private HashMap<Integer, Object> objectMap;\r\n    private String level = \"MainMenu\";\r\n    private boolean forScale = true;\r\n    boolean isAttackRight = false, isAttackLeft = false, isAttackUp = false, isAttackDown = false;\r\n    boolean isCheck = false;\r\n    boolean forSkeletonAnimation = true;\r\n    boolean forMainMenu = true;\r\n    int forCamera = 0;\r\n    Player player;\r\n    String player_animation, weapon, head, shoulders, torso, belt, hands, legs, feet;\r\n\r\n    public void run() {\r\n        System.out.println(\"Игра запущена\");\r\n\r\n        init();\r\n        loop();\r\n\r\n        glfwFreeCallbacks(window);\r\n        glfwDestroyWindow(window);\r\n\r\n        glfwTerminate();\r\n        glfwSetErrorCallback(null).free();\r\n    }\r\n\r\n    private void init() {\r\n        GLFWErrorCallback.createPrint(System.err).set();\r\n        if (!glfwInit()) throw new IllegalStateException(\"Unable to initialize GLFW\");\r\n\r\n        // Работа с экраном\r\n        window = glfwCreateWindow(1920, 1080, \"Philistine\", glfwGetPrimaryMonitor(), NULL);\r\n        if (window == NULL) throw new RuntimeException(\"Failed to create the GLFW window\");\r\n        try (MemoryStack stack = stackPush()) {\r\n            IntBuffer pWidth = stack.mallocInt(1);\r\n            IntBuffer pHeight = stack.mallocInt(1);\r\n            glfwGetWindowSize(window, pWidth, pHeight);\r\n            GLFWVidMode vidMode = glfwGetVideoMode(glfwGetPrimaryMonitor());\r\n            glfwSetWindowPos(window, (vidMode.width() - pWidth.get(0)) / 2, ((vidMode.height() - pHeight.get(0)) / 2) - 10);\r\n        }\r\n        glfwMakeContextCurrent(window);\r\n        glfwSwapInterval(1);\r\n        glfwShowWindow(window);\r\n\r\n        GL.createCapabilities(); // создает instance для OpenGL в текущем потоке\r\n        glMatrixMode(GL_PROJECTION); // Выставление камеры\r\n        glLoadIdentity(); // По видимости ненужная строка(что-то с единичной матрицей)\r\n        glOrtho(0, 640, 360, 0, 1, -1); // Камера на место окна\r\n        glMatrixMode(GL_MODELVIEW); // Установка матрицы в состояние ModelView\r\n        glEnable(GL_TEXTURE_2D);\r\n        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); // Добавляет прозрачность\r\n        glEnable(GL_BLEND);\r\n\r\n        mobList = new ArrayList<>();\r\n        textureMap = new HashMap<String, Integer>();\r\n        aabbMap = new HashMap<String, AABB>();\r\n        objectMap = new HashMap<Integer, Object>();\r\n        objectMap.put(0, new Furniture(false, true,250, 200, 282, 232, new AABB(250, 200, 282, 232), \"chestClosed\"));\r\n        objectMap.put(1, new Armor(\"torso\", 1, true, true, 300, 100, 364, 164, new AABB(300, 100, 364, 164), \"shirt_white\"));\r\n        objectMap.put(2, new Armor(\"legs\", 1, true, true, 428, 100, 492, 164, new AABB(428, 100, 492, 164), \"pants_greenish\"));\r\n        objectMap.put(3, new Armor(\"feet\", 1, true, true, 364, 100, 428, 164, new AABB(364, 100, 428, 164), \"shoes_brown\"));\r\n        mobList.add(new Player(290, 192, 1, 100, 0, 10));\r\n        mobList.add(new Slime(300, 300, 1, 5, 0, 5));\r\n        mobList.add(new Skeleton(300, 200, 1, 50, 0, 10));\r\n        player = (Player) mobList.get(0);\r\n\r\n        // Единичная загрузка всех текстур\r\n        for (int i = 0, id = 0; i < Storage.textureString.length; i++) {\r\n            if (i < 11) id = Texture.loadTexture(\"healthbar/\" + Storage.textureString[i]);\r\n            else id = Texture.loadTexture(Storage.textureString[i]);\r\n            textureMap.put(Storage.textureString[i], id);\r\n        }\r\n\r\n        AudioMaster.init();\r\n        AudioMaster.setListenerData();\r\n        int mainMenuTheme = AudioMaster.loadSound(\"MainMenu\");\r\n        Source source = new Source();\r\n\r\n        // Единичная загрузка всех хитбоксов\r\n        for(int i = 0; i < Storage.aabbString.length; i++)\r\n            aabbMap.put(Storage.aabbString[i], new AABB());\r\n        // Единичное установление хитбоксов стен первого уровня и переходов м/у уровнями\r\n        for(int i = 0, j = 0; i < 5; i++, j+=4)\r\n            aabbMap.get(\"wall\" + i).update(Storage.firstLevelWalls[j], Storage.firstLevelWalls[j + 1], Storage.firstLevelWalls[j + 2], Storage.firstLevelWalls[j + 3]);\r\n        aabbMap.get(\"entranceToFirstLevel\").update(0, 190, 2, 286);\r\n        aabbMap.get(\"entranceToSecondLevel\").update(638, 238, 640, 335);\r\n\r\n        // Клашива ESC на выход(закрытие приложения)\r\n        glfwSetKeyCallback(window, (window, key, scancode, action, mods) -> {\r\n            if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS) {\r\n                AudioMaster.destroy();\r\n                source.delete();\r\n                AL10.alDeleteBuffers(mainMenuTheme);\r\n                glfwSetWindowShouldClose(window, true);\r\n                Player player = (Player) mobList.get(0);\r\n                player.getTimer().cancel();\r\n                player.getTimer().purge();\r\n                Slime slime = (Slime) mobList.get(1);\r\n                slime.getTimerSlime().cancel();\r\n                slime.getTimerSlime().purge();\r\n                Skeleton skeleton = (Skeleton) mobList.get(2);\r\n                skeleton.getTimer().cancel();\r\n                skeleton.getTimer().purge();\r\n            }\r\n            if (level.equals(\"MainMenu\") && key == GLFW_KEY_ENTER && action == GLFW_PRESS) {\r\n                level = \"FirstLevel\";\r\n                glTranslated(forCamera, 0, 0);\r\n                player.setX(200);\r\n                player.setY(150);\r\n                player.setSpeed(2);\r\n            }\r\n            if (key == GLFW_KEY_RIGHT && action == GLFW_PRESS) isAttackRight = true;\r\n            if (key == GLFW_KEY_LEFT && action == GLFW_PRESS) isAttackLeft = true;\r\n            if (key == GLFW_KEY_UP && action == GLFW_PRESS) isAttackUp = true;\r\n            if (key == GLFW_KEY_DOWN && action == GLFW_PRESS) isAttackDown = true;\r\n            if (key == GLFW_KEY_E && action == GLFW_PRESS) isCheck = true;\r\n            if (key == GLFW_KEY_U && action == GLFW_PRESS) source.play(mainMenuTheme);\r\n        });\r\n    }\r\n\r\n    private void loop() {\r\n        int i1 = 2, i2 = 2, i3 = 2, i4 = 2, i5 = 0;\r\n        int g1 = 0, g2 = 0, g3 = 0, g4 = 0;\r\n        int j1 = 1, j2 = 1, j3 = 1, j4 = 1;\r\n        int b = 0;\r\n\r\n        // Изменение скейла изображения\r\n        /*try (MemoryStack stack = stackPush()) {\r\n            IntBuffer pWidth = stack.mallocInt(1);\r\n            IntBuffer pHeight = stack.mallocInt(1);\r\n            glfwGetWindowSize(window, pWidth, pHeight);\r\n            reshape(pWidth.get(0), pHeight.get(0));\r\n        }*/\r\n\r\n        while (!glfwWindowShouldClose(window)) {\r\n            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\r\n            // Переключение уровня\r\n            switch (level) {\r\n                case \"MainMenu\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"MainMenu\")); // Фон главного меню\r\n                    createQuadTexture(0, 0, 1536, 360);\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"Press_enter\"));\r\n                    createQuadTexture(player.getX() - 13, player.getY() - 100, player.getX() + 77, player.getY() - 82);\r\n                    if (player.getX() == 1186) forMainMenu = false;\r\n                    else if (player.getX() == 290) forMainMenu = true;\r\n                    if (forMainMenu) {\r\n                        glTranslated(-1, 0, 0);\r\n                        forCamera++;\r\n                        if (i1 == 10) i1 = 2;\r\n                        player_animation = \"player_walk_right_0\" + i1;\r\n                        head = \"HEAD_\" + player.getHead() + \"_right_move_0\" + i1;\r\n                        shoulders = \"SHOULDERS_\" + player.getShoulders() + \"_right_move_0\" + i1;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_right_move_0\" + i1;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_right_move_0\" + i1;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_right_move_0\" + i1;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_right_move_0\" + i1;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_right_move_0\" + i1;\r\n                        if (g1 == 8) {\r\n                            i1++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveRight();\r\n                    }\r\n                    else {\r\n                        glTranslated(1, 0, 0);\r\n                        forCamera--;\r\n                        if (i2 == 10) i2 = 2;\r\n                        player_animation = \"player_walk_left_0\" + i2;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_left_move_0\" + i2;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_left_move_0\" + i2;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_left_move_0\" + i2;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_left_move_0\" + i2;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_left_move_0\" + i2;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_left_move_0\" + i2;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_left_move_0\" + i2;\r\n                        if (g1 == 8) {\r\n                            i2++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveLeft();\r\n                    }\r\n                    break;\r\n                }\r\n                case \"FirstLevel\": {\r\n                    Slime slime = (Slime) mobList.get(1);\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level0\")); // Фон первого уровня\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Отрисовка всех объектов\r\n                    for (int i = 0; i < objectMap.size(); i++) {\r\n                        Object object = objectMap.get(i);\r\n                        if (!object.getIsLying()) continue;\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n                    if (isCheck) {\r\n                        for (int i = 0; i < objectMap.size(); i++) {\r\n                            Object object = objectMap.get(i);\r\n                            if (object instanceof Armor) {\r\n                                if (AABB.AABBvsAABB(player.getCollisionBox(), object.getCollisionBox())) {\r\n                                    Armor armor = player.getArmorType((Armor) object);\r\n                                    object.setIsLying(false);\r\n                                    player.setArmor((Armor) object);\r\n                                    object = armor;\r\n                                    object.setMinX(player.getCollisionBox().getMin().x - 20);\r\n                                    object.setMinY(player.getCollisionBox().getMin().y - 30);\r\n                                    object.setMaxX(player.getCollisionBox().getMin().x + 44);\r\n                                    object.setMaxY(player.getCollisionBox().getMin().y + 34);\r\n                                    object.setIsLying(true);\r\n                                    object.getCollisionBox().update(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                                    objectMap.put(i, object);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    isCheck = false;\r\n\r\n                    player.reArmor();\r\n\r\n                    // Все операции со слизнем\r\n                    if (!slime.getDead()) {\r\n                        switch (i5) { // Анимация слайма\r\n                            case 0:\r\n                                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_\" + slime.getMoveDirection() +\"_01\"));\r\n                                break;\r\n                            case 1:\r\n                                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_\" + slime.getMoveDirection() +\"_02\"));\r\n                                break;\r\n                            case 2:\r\n                                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_\" + slime.getMoveDirection() +\"_03\"));\r\n                                break;\r\n                        }\r\n                        if (g2 == 8) {\r\n                            if (i5 == 0) { i5++; }\r\n                            else { i5--; }\r\n                            g2 = 0;\r\n                        }\r\n                        g2++;\r\n                        slime.getHitbox().update(slime.getX(), slime.getY(), slime.getX() + 16, slime.getY() + 10);\r\n                        slime.getCollisionBox().update(slime.getX(), slime.getY(), slime.getX() + 16, slime.getY() + 10);\r\n                        createQuadTexture(slime.getX(), slime.getY(), slime.getX() + 16, slime.getY() + 10);\r\n\r\n                        // Преследование игрока слаймом, обновление хитбокса и перерисовка текстуры\r\n                        if (!AABB.AABBvsAABB(player.getHitbox(), slime.getHitbox()) && (int)(Math.random() * 6) == 5) {\r\n                            if (slime.getHitbox().getMin().x > player.getHitbox().getMin().x) slime.moveLeft();\r\n                            else slime.moveRight();\r\n                            if (slime.getHitbox().getMin().y > player.getHitbox().getMin().y) slime.moveUp();\r\n                            else slime.moveDown();\r\n                        }\r\n\r\n                        // Получение урона от слизня\r\n                        if (AABB.AABBvsAABB(player.getHitbox(), slime.getHitbox()) && !player.getDead() && !player.getImmortal()) {\r\n                            if (player.getX() > slime.getX()) player.setKnockbackDirection(\"Right\");\r\n                            else if (player.getX() < slime.getX()) player.setKnockbackDirection(\"Left\");\r\n                            else if (player.getY() > slime.getY()) player.setKnockbackDirection(\"Down\");\r\n                            else if (player.getY() < slime.getY()) player.setKnockbackDirection(\"Up\");\r\n                            player.takeDamage(slime.getDamage());\r\n                            System.out.println(player.getHealth());\r\n                            player.setImmortal(true);\r\n                            player.getTimer().schedule(player.getTimerTaskPlayer(), 0, 10);\r\n                        }\r\n                        // Слизень получает урон от игрока\r\n                        if (AABB.AABBvsAABB(player.getAttackBox(), slime.getHitbox()) && !slime.getImmortal()) {\r\n                            if (player.getX() > slime.getX()) slime.setDirection(\"Left\");\r\n                            else if (player.getX() < slime.getX()) slime.setDirection(\"Right\");\r\n                            else if (player.getY() > slime.getY()) slime.setDirection(\"Up\");\r\n                            else if (player.getY() < slime.getY()) slime.setDirection(\"Down\");\r\n                            slime.setHealth(slime.getHealth() - player.getDamage());\r\n                            slime.setImmortal(true);\r\n                            slime.getTimerSlime().schedule(slime.getTimerTaskSlime(), 0, 10);\r\n                        }\r\n                        player.getAttackBox().update(0, 0, 0, 0);\r\n                        if (player.getTime() >= 15) {\r\n                            player.stopTimerPlayer();\r\n                            player.setImmortal(false);\r\n                        }\r\n                        if (slime.getTime() >= 25) {\r\n                            slime.stopTimerSlime();\r\n                            slime.setImmortal(false);\r\n                        }\r\n\r\n                        // Отрисовка хелсбара\r\n                        if (slime.getHealth() <= 0) slime.setDead(true);\r\n                        else {\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enemyHp\" + slime.getHealth()));\r\n                            createQuadTexture(slime.getX(), slime.getY() - 2, slime.getX() + 16, slime.getY());\r\n                        }\r\n                    }\r\n                    else slime.getHitbox().update(0,0,0,0);\r\n\r\n                    // Проверка всех мобов на столкновение со стенами\r\n                    for (Mob mob : mobList) {\r\n                        if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                            mob.stopRight();\r\n                        if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                            mob.stopLeft();\r\n                        if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                            mob.stopUp();\r\n                        if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                            mob.stopDown();\r\n                    }\r\n                    // Проверка всех мобов на столкновение с объектами\r\n                    for (Mob mob : mobList) {\r\n                        for (int i = 0; i < objectMap.size(); i++) {\r\n                            Object object = objectMap.get(i);\r\n                            if (object.getIsNoclip()) continue;\r\n                            if (AABB.AABBvsAABB2(mob.getCollisionBox(), object.getCollisionBox())) mob.stop(CollisionMessage.getMessage());\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(player.getCollisionBox(), aabbMap.get(\"entranceToSecondLevel\"))) {\r\n                        level = \"SecondLevel\";\r\n                        // Обновление хитбоксов стен для второго уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                    Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                        }\r\n                        player.setX(2 - 14);\r\n                        player.setY(225);\r\n                    }\r\n                    break;\r\n                }\r\n                case \"SecondLevel\": {\r\n                    Skeleton skeleton = (Skeleton) mobList.get(2);\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level1\")); // Фон второго уровня\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Все операции со скелетоном\r\n                    if (!skeleton.getDead()) {\r\n                        if (forSkeletonAnimation) {\r\n                            skeleton.getTimer().schedule(skeleton.getAnimationTask(), 0, 120);\r\n                            forSkeletonAnimation = false;\r\n                        }\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"skeleton_\" + skeleton.getMoveDirection() + \"_move_0\" + skeleton.getAnimationTime()));\r\n                        skeleton.getHitbox().update(skeleton.getX() + 18, skeleton.getY() + 15, skeleton.getX() + 45, skeleton.getY() + 61);\r\n                        skeleton.getCollisionBox().update(skeleton.getX() + 16, skeleton.getY() + 44, skeleton.getX() + 47, skeleton.getY() + 62);\r\n                        createQuadTexture(skeleton.getX(), skeleton.getY(), skeleton.getX() + 64, skeleton.getY() + 64);\r\n\r\n                        // Преследование игрока скелетоном\r\n                        if (!AABB.AABBvsAABB(player.getHitbox(), skeleton.getHitbox())) {\r\n                            if (player.getHitbox().getMin().y < skeleton.getHitbox().getMin().y &&\r\n                                    player.getHitbox().getMin().x < skeleton.getHitbox().getMin().x) skeleton.moveUpLeft();\r\n                            else if (player.getHitbox().getMin().y < skeleton.getHitbox().getMin().y &&\r\n                                    player.getHitbox().getMin().x > skeleton.getHitbox().getMin().x) skeleton.moveUpRight();\r\n                            else if (player.getHitbox().getMin().y > skeleton.getHitbox().getMin().y &&\r\n                                    player.getHitbox().getMin().x < skeleton.getHitbox().getMin().x) skeleton.moveDownLeft();\r\n                            else if (player.getHitbox().getMin().y > skeleton.getHitbox().getMin().y &&\r\n                                    player.getHitbox().getMin().x > skeleton.getHitbox().getMin().x) skeleton.moveDownRight();\r\n                            else if (player.getHitbox().getMin().x < skeleton.getHitbox().getMin().x) skeleton.moveLeft();\r\n                            else if (player.getHitbox().getMin().x > skeleton.getHitbox().getMin().x) skeleton.moveRight();\r\n                            else if (player.getHitbox().getMin().y < skeleton.getHitbox().getMin().y) skeleton.moveUp();\r\n                            else if (player.getHitbox().getMin().y > skeleton.getHitbox().getMin().y) skeleton.moveDown();\r\n                        }\r\n\r\n                        // Получение урона от скелетона\r\n                        if (AABB.AABBvsAABB(player.getHitbox(), skeleton.getHitbox()) && !player.getDead() && !player.getImmortal()) {\r\n                            if (player.getX() > skeleton.getX()) player.setKnockbackDirection(\"Right\");\r\n                            else if (player.getX() < skeleton.getX()) player.setKnockbackDirection(\"Left\");\r\n                            else if (player.getY() > skeleton.getY()) player.setKnockbackDirection(\"Down\");\r\n                            else if (player.getY() < skeleton.getY()) player.setKnockbackDirection(\"Up\");\r\n                            player.takeDamage(skeleton.getDamage());\r\n                            player.setImmortal(true);\r\n                            player.getTimer().schedule(player.getTimerTaskPlayer(), 0, 10);\r\n                        }\r\n                        // Скелетон получает урон от игрока\r\n                        if (AABB.AABBvsAABB(player.getAttackBox(), skeleton.getHitbox()) && !skeleton.getImmortal()) {\r\n                            if (player.getX() > skeleton.getX()) skeleton.setDirection(\"Left\");\r\n                            else if (player.getX() < skeleton.getX()) skeleton.setDirection(\"Right\");\r\n                            else if (player.getY() > skeleton.getY()) skeleton.setDirection(\"Up\");\r\n                            else if (player.getY() < skeleton.getY()) skeleton.setDirection(\"Down\");\r\n                            skeleton.setHealth(skeleton.getHealth() - player.getDamage());\r\n                            skeleton.setImmortal(true);\r\n                            skeleton.getTimer().schedule(skeleton.getKnockbackTimerTask(), 0, 10);\r\n                        }\r\n                        player.getAttackBox().update(0, 0, 0, 0);\r\n                        if (player.getTime() >= 15) {\r\n                            player.stopTimerPlayer();\r\n                            player.setImmortal(false);\r\n                        }\r\n                        if (skeleton.getKnockbackTime() >= 25) {\r\n                            skeleton.stopKnockbackTimer();\r\n                            skeleton.setImmortal(false);\r\n                            forSkeletonAnimation = true;\r\n                        }\r\n\r\n                        if (skeleton.getHealth() <= 0) skeleton.setDead(true);\r\n                    }\r\n                    else skeleton.getHitbox().update(0,0,0,0);\r\n\r\n                    // Проверка всех мобов на столкновение со стенами\r\n                    for (Mob mob : mobList) {\r\n                        if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                            mob.stopRight();\r\n                        if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                            mob.stopLeft();\r\n                        if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                            mob.stopUp();\r\n                        if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall6\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                            mob.stopDown();\r\n                    }\r\n\r\n                    // Проверка перехода на первый уровень\r\n                    if (AABB.AABBvsAABB(player.getCollisionBox(), aabbMap.get(\"entranceToFirstLevel\"))) {\r\n                        level = \"FirstLevel\";\r\n                        // Обновление хитбоксов стен для первого уровня\r\n                        for(int i = 0, j = 0; i < 5; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.firstLevelWalls[j], Storage.firstLevelWalls[j + 1],\r\n                                    Storage.firstLevelWalls[j + 2], Storage.firstLevelWalls[j + 3]);\r\n                        }\r\n                        player.setX(638 - 64 + 15);\r\n                        player.setY(281);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //Движение игрока и обновление одежды\r\n            if (!level.equals(\"MainMenu\")) {\r\n                if (!player.getDead()) {\r\n                    player_animation = \"player_stand_\" + player.getMoveDirection();\r\n                    head = \"HEAD_\" + player.getHead() + \"_\" + player.getMoveDirection() + \"_move_01\";\r\n                    shoulders = \"SHOULDERS_\" + player.getShoulders() + \"_\" + player.getMoveDirection() + \"_move_01\";\r\n                    torso = \"TORSO_\" + player.getTorso() + \"_\" + player.getMoveDirection() + \"_move_01\";\r\n                    belt = \"BELT_\" + player.getBelt() + \"_\" + player.getMoveDirection() + \"_move_01\";\r\n                    hands = \"HANDS_\" + player.getHands() + \"_\" + player.getMoveDirection() + \"_move_01\";\r\n                    legs = \"LEGS_\" + player.getLegs() + \"_\" + player.getMoveDirection() + \"_move_01\";\r\n                    feet = \"FEET_\" + player.getFeet() + \"_\" + player.getMoveDirection() + \"_move_01\";\r\n\r\n                    if ( (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) ) {\r\n                        if (i2 == 10) i2 = 2;\r\n                        player_animation = \"player_walk_left_0\" + i2;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_left_move_0\" + i2;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_left_move_0\" + i2;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_left_move_0\" + i2;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_left_move_0\" + i2;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_left_move_0\" + i2;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_left_move_0\" + i2;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_left_move_0\" + i2;\r\n                        if (g1 == 8) {\r\n                            i2++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveUpLeft();\r\n                    }\r\n                    else if ( (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) ) {\r\n                        if (i1 == 10) i1 = 2;\r\n                        player_animation = \"player_walk_right_0\" + i1;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_right_move_0\" + i1;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_right_move_0\" + i1;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_right_move_0\" + i1;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_right_move_0\" + i1;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_right_move_0\" + i1;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_right_move_0\" + i1;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_right_move_0\" + i1;\r\n                        if (g1 == 8) {\r\n                            i1++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveUpRight();\r\n                    }\r\n                    else if ( (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) ) {\r\n                        if (i2 == 10) i2 = 2;\r\n                        player_animation = \"player_walk_left_0\" + i2;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_left_move_0\" + i2;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_left_move_0\" + i2;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_left_move_0\" + i2;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_left_move_0\" + i2;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_left_move_0\" + i2;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_left_move_0\" + i2;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_left_move_0\" + i2;\r\n                        if (g1 == 8) {\r\n                            i2++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveDownLeft();\r\n                    }\r\n                    else if ( (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) ) {\r\n                        if (i1 == 10) i1 = 2;\r\n                        player_animation = \"player_walk_right_0\" + i1;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_right_move_0\" + i1;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_right_move_0\" + i1;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_right_move_0\" + i1;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_right_move_0\" + i1;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_right_move_0\" + i1;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_right_move_0\" + i1;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_right_move_0\" + i1;\r\n                        if (g1 == 8) {\r\n                            i1++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveDownRight();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) {\r\n                        if (i2 == 10) i2 = 2;\r\n                        player_animation = \"player_walk_left_0\" + i2;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_left_move_0\" + i2;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_left_move_0\" + i2;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_left_move_0\" + i2;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_left_move_0\" + i2;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_left_move_0\" + i2;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_left_move_0\" + i2;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_left_move_0\" + i2;\r\n                        if (g1 == 8) {\r\n                            i2++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveLeft();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) {\r\n                        if (i1 == 10) i1 = 2;\r\n                        player_animation = \"player_walk_right_0\" + i1;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_right_move_0\" + i1;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_right_move_0\" + i1;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_right_move_0\" + i1;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_right_move_0\" + i1;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_right_move_0\" + i1;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_right_move_0\" + i1;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_right_move_0\" + i1;\r\n                        if (g1 == 8) {\r\n                            i1++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveRight();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS) {\r\n                        if (i3 == 10) i3 = 2;\r\n                        player_animation = \"player_walk_up_0\" + i3;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_up_move_0\" + i3;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_up_move_0\" + i3;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_up_move_0\" + i3;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_up_move_0\" + i3;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_up_move_0\" + i3;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_up_move_0\" + i3;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_up_move_0\" + i3;\r\n                        if (g1 == 8) {\r\n                            i3++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveUp();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS) {\r\n                        if (i4 == 10) i4 = 2;\r\n                        player_animation = \"player_walk_down_0\" + i4;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_down_move_0\" + i4;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_down_move_0\" + i4;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_down_move_0\" + i4;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_down_move_0\" + i4;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_down_move_0\" + i4;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_down_move_0\" + i4;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_down_move_0\" + i4;\r\n                        if (g1 == 8) {\r\n                            i4++;\r\n                            g1 = 0;\r\n                        }\r\n                        g1++;\r\n                        player.moveDown();\r\n                    }\r\n                    if (isAttackLeft) {\r\n                        if (j3 == 7) {\r\n                            j3 = 1;\r\n                            isAttackLeft = false;\r\n                        }\r\n                        if (j3 == 5) player.getAttackBox().update(player.getX() - 50, player.getY() + 20, player.getX() - 50 + 69, player.getY() + 20 + 27);\r\n                        player_animation = \"player_\" + player.getAttackType() + \"_left_0\" + j3;\r\n                        weapon = \"weapon_\" + player.getWeapon() + \"_left_\" + player.getAttackType() + \"_0\" + j3;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_left_\" + player.getAttackType() + \"_0\" + j3;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_left_\" + player.getAttackType() + \"_0\" + j3;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_left_\" + player.getAttackType() + \"_0\" + j3;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_left_\" + player.getAttackType() + \"_0\" + j3;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_left_\" + player.getAttackType() + \"_0\" + j3;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_left_\" + player.getAttackType() + \"_0\" + j3;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_left_\" + player.getAttackType() + \"_0\" + j3;\r\n                        if (g3 == 4) {\r\n                            j3++;\r\n                            g3 = 0;\r\n                        }\r\n                        g3++;\r\n                    }\r\n                    else if (isAttackRight) {\r\n                        if (j1 == 7) {\r\n                            j1 = 1;\r\n                            isAttackRight = false;\r\n                        }\r\n                        if (j1 == 5) player.getAttackBox().update(player.getX() + 55, player.getY() + 20, player.getX() + 55 + 60, player.getY() + 20 + 28);\r\n                        player_animation = \"player_\" + player.getAttackType() + \"_right_0\" + j1;\r\n                        weapon = \"weapon_\" + player.getWeapon() + \"_right_\" + player.getAttackType() + \"_0\" + j1;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_right_\" + player.getAttackType() + \"_0\" + j1;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_right_\" + player.getAttackType() + \"_0\" + j1;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_right_\" + player.getAttackType() + \"_0\" + j1;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_right_\" + player.getAttackType() + \"_0\" + j1;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_right_\" + player.getAttackType() + \"_0\" + j1;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_right_\" + player.getAttackType() + \"_0\" + j1;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_right_\" + player.getAttackType() + \"_0\" + j1;\r\n                        if (g3 == 4) {\r\n                            g3 = 0;\r\n                            j1++;\r\n                        }\r\n                        g3++;\r\n                    }\r\n                    else if (isAttackUp) {\r\n                        if (j4 == 7) {\r\n                            j4 = 1;\r\n                            isAttackUp = false;\r\n                        }\r\n                        if (j4 == 5) player.getAttackBox().update(player.getX() + 18, player.getY() - 10, player.getX() + 18 + 56, player.getY() - 10 + 21);\r\n                        player_animation = \"player_\" + player.getAttackType() + \"_up_0\" + j4;\r\n                        weapon = \"weapon_\" + player.getWeapon() + \"_up_\" + player.getAttackType() + \"_0\" + j4;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_up_\" + player.getAttackType() + \"_0\" + j4;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_up_\" + player.getAttackType() + \"_0\" + j4;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_up_\" + player.getAttackType() + \"_0\" + j4;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_up_\" + player.getAttackType() + \"_0\" + j4;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_up_\" + player.getAttackType() + \"_0\" + j4;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_up_\" + player.getAttackType() + \"_0\" + j4;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_up_\" + player.getAttackType() + \"_0\" + j4;\r\n                        if (g3 == 4) {\r\n                            g3 = 0;\r\n                            j4++;\r\n                        }\r\n                        g3++;\r\n                    }\r\n                    else if (isAttackDown) {\r\n                        if (j2 == 7) {\r\n                            j2 = 1;\r\n                            isAttackDown = false;\r\n                        }\r\n                        if (j2 == 5) player.getAttackBox().update(player.getX() + 10, player.getY() + 20, player.getX() + 10 + 55, player.getY() + 45 + 39);\r\n                        player_animation = \"player_\" + player.getAttackType() + \"_down_0\" + j2;\r\n                        weapon = \"weapon_\" + player.getWeapon() + \"_down_\" + player.getAttackType() + \"_0\" + j2;\r\n                        head =  \"HEAD_\" + player.getHead() + \"_down_\" + player.getAttackType() + \"_0\" + j2;\r\n                        shoulders =  \"SHOULDERS_\" + player.getShoulders() + \"_down_\" + player.getAttackType() + \"_0\" + j2;\r\n                        torso = \"TORSO_\" + player.getTorso() + \"_down_\" + player.getAttackType() + \"_0\" + j2;\r\n                        belt = \"BELT_\" + player.getBelt() + \"_down_\" + player.getAttackType() + \"_0\" + j2;\r\n                        hands = \"HANDS_\" + player.getHands() + \"_down_\" + player.getAttackType() + \"_0\" + j2;\r\n                        legs = \"LEGS_\" + player.getLegs() + \"_down_\" + player.getAttackType() + \"_0\" + j2;\r\n                        feet = \"FEET_\" + player.getFeet() + \"_down_\" + player.getAttackType() + \"_0\" + j2;\r\n                        if (g3 == 4) {\r\n                            g3 = 0;\r\n                            j2++;\r\n                        }\r\n                        g3++;\r\n                    }\r\n\r\n                    // Полоска здоровья\r\n                    int tempHealth = player.getHealth() % 10 == 0 ? player.getHealth() : player.getHealth() - (player.getHealth() % 10) + 10;\r\n                    if (tempHealth >= 0) glBindTexture(GL_TEXTURE_2D, textureMap.get(tempHealth + \"hp\"));\r\n                    if (player.getHealth() <= 0) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"0hp\"));\r\n                        player.setDead(true);\r\n                    }\r\n                    createQuadTexture(0, 0, 103, 18);\r\n\r\n                    // Броня\r\n                    if (player.getArmor() < 30){\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"armor\" + player.getArmor() / 5));\r\n                    } else {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"armor5\"));\r\n                    }\r\n\r\n                    createQuadTexture(0, 19, 34, 53);\r\n                }\r\n                else {\r\n                    switch (b) {\r\n                        case 0:\r\n                            player_animation = \"player_hurt_01\";\r\n                            head = \"HEAD_\" + player.getHead() + \"_hurt_01\";\r\n                            shoulders = \"SHOULDERS_\" + player.getShoulders() + \"_hurt_01\";\r\n                            torso = \"TORSO_\" + player.getTorso() + \"_hurt_01\";\r\n                            belt = \"BELT_\" + player.getBelt() + \"_hurt_01\";\r\n                            hands = \"HANDS_\" + player.getHands() + \"_hurt_01\";\r\n                            legs = \"LEGS_\" + player.getLegs() + \"_hurt_01\";\r\n                            feet = \"FEET_\" + player.getFeet() + \"_hurt_01\";\r\n                            break;\r\n                        case 1:\r\n                            player_animation = \"player_hurt_02\";\r\n                            head = \"HEAD_\" + player.getHead() + \"_hurt_02\";\r\n                            shoulders = \"SHOULDERS_\" + player.getShoulders() + \"_hurt_02\";\r\n                            torso = \"TORSO_\" + player.getTorso() + \"_hurt_02\";\r\n                            belt = \"BELT_\" + player.getBelt() + \"_hurt_02\";\r\n                            hands = \"HANDS_\" + player.getHands() + \"_hurt_02\";\r\n                            legs = \"LEGS_\" + player.getLegs() + \"_hurt_02\";\r\n                            feet = \"FEET_\" + player.getFeet() + \"_hurt_02\";\r\n                            break;\r\n                        case 2:\r\n                            player_animation = \"player_hurt_03\";\r\n                            head = \"HEAD_\" + player.getHead() + \"_hurt_03\";\r\n                            shoulders = \"SHOULDERS_\" + player.getShoulders() + \"_hurt_03\";\r\n                            torso = \"TORSO_\" + player.getTorso() + \"_hurt_03\";\r\n                            belt = \"BELT_\" + player.getBelt() + \"_hurt_03\";\r\n                            hands = \"HANDS_\" + player.getHands() + \"_hurt_03\";\r\n                            legs = \"LEGS_\" + player.getLegs() + \"_hurt_03\";\r\n                            feet = \"FEET_\" + player.getFeet() + \"_hurt_03\";\r\n                            break;\r\n                        case 3:\r\n                            player_animation = \"player_hurt_04\";\r\n                            head = \"HEAD_\" + player.getHead() + \"_hurt_04\";\r\n                            shoulders = \"SHOULDERS_\" + player.getShoulders() + \"_hurt_04\";\r\n                            torso = \"TORSO_\" + player.getTorso() + \"_hurt_04\";\r\n                            belt = \"BELT_\" + player.getBelt() + \"_hurt_04\";\r\n                            hands = \"HANDS_\" + player.getHands() + \"_hurt_04\";\r\n                            legs = \"LEGS_\" + player.getLegs() + \"_hurt_04\";\r\n                            feet = \"FEET_\" + player.getFeet() + \"_hurt_04\";\r\n                            break;\r\n                        case 4:\r\n                            player_animation = \"player_hurt_05\";\r\n                            head = \"HEAD_\" + player.getHead() + \"_hurt_05\";\r\n                            shoulders = \"SHOULDERS_\" + player.getShoulders() + \"_hurt_05\";\r\n                            torso = \"TORSO_\" + player.getTorso() + \"_hurt_05\";\r\n                            belt = \"BELT_\" + player.getBelt() + \"_hurt_05\";\r\n                            hands = \"HANDS_\" + player.getHands() + \"_hurt_05\";\r\n                            legs = \"LEGS_\" + player.getLegs() + \"_hurt_05\";\r\n                            feet = \"FEET_\" + player.getFeet() + \"_hurt_05\";\r\n                            break;\r\n                        case 5:\r\n                            player_animation = \"player_hurt_06\";\r\n                            head = \"HEAD_\" + player.getHead() + \"_hurt_06\";\r\n                            shoulders = \"SHOULDERS_\" + player.getShoulders() + \"_hurt_06\";\r\n                            torso = \"TORSO_\" + player.getTorso() + \"_hurt_06\";\r\n                            belt = \"BELT_\" + player.getBelt() + \"_hurt_06\";\r\n                            hands = \"HANDS_\" + player.getHands() + \"_hurt_06\";\r\n                            legs = \"LEGS_\" + player.getLegs() + \"_hurt_06\";\r\n                            feet = \"FEET_\" + player.getFeet() + \"_hurt_06\";\r\n                            break;\r\n                    }\r\n                    if (g4 == 8) {\r\n                        b++;\r\n                        g4 = 0;\r\n                    }\r\n                    g4++;\r\n                }\r\n            }\r\n\r\n            // Отрисовка экипировки и анимации\r\n            glBindTexture(GL_TEXTURE_2D, textureMap.get(player_animation));\r\n            createQuadTexture(player.getX(), player.getY(), player.getX() + 64, player.getY() + 64);\r\n            if (!player.getFeet().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(feet));\r\n                createQuadTexture(player.getX(), player.getY(), player.getX() + 64, player.getY() + 64);\r\n            }\r\n            if (!player.getLegs().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(legs));\r\n                createQuadTexture(player.getX(), player.getY(), player.getX() + 64, player.getY() + 64);\r\n            }\r\n            if (!player.getTorso().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(torso));\r\n                createQuadTexture(player.getX(), player.getY(), player.getX() + 64, player.getY() + 64);\r\n            }\r\n            if (!player.getShoulders().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(shoulders));\r\n                createQuadTexture(player.getX(), player.getY(), player.getX() + 64, player.getY() + 64);\r\n            }\r\n            if (!player.getHands().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(hands));\r\n                createQuadTexture(player.getX(), player.getY(), player.getX() + 64, player.getY() + 64);\r\n            }\r\n            if (!player.getHead().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(head));\r\n                createQuadTexture(player.getX(), player.getY(), player.getX() + 64, player.getY() + 64);\r\n            }\r\n            if (!player.getBelt().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(belt));\r\n                createQuadTexture(player.getX(), player.getY(), player.getX() + 64, player.getY() + 64);\r\n            }\r\n            if ( (isAttackRight || isAttackUp || isAttackLeft || isAttackDown) && !player.getDead()) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(weapon));\r\n                createQuadTexture(player.getX() - 64, player.getY() - 64, player.getX() + 128, player.getY() + 128);\r\n            }\r\n\r\n            if (player.getMoveDirection().equals(\"left\")) player.getHitbox().update(player.getX() + 23, player.getY() + 15, player.getX() + 42, player.getY() + 59);\r\n            else if (player.getMoveDirection().equals(\"right\")) player.getHitbox().update(player.getX() + 21, player.getY() + 15, player.getX() + 40, player.getY() + 59);\r\n            else if (player.getMoveDirection().equals(\"up\")) player.getHitbox().update(player.getX() + 20, player.getY() + 15, player.getX() + 43, player.getY() + 60);\r\n            else if (player.getMoveDirection().equals(\"down\")) player.getHitbox().update(player.getX() + 20, player.getY() + 15, player.getX() + 43, player.getY() + 61);\r\n            player.getCollisionBox().update(player.getX() + 17, player.getY() + 46, player.getX() + 46, player.getY() + 61);\r\n\r\n            glfwPollEvents();\r\n            glfwSwapBuffers(window);\r\n        }\r\n    }\r\n\r\n    private void createQuadTexture(int xmin, int ymin, int xmax, int ymax) {\r\n        glBegin(GL_QUADS);\r\n        glTexCoord2d(0, 0);\r\n        glVertex2f(xmin, ymin);\r\n        glTexCoord2d(1, 0);\r\n        glVertex2f(xmax, ymin);\r\n        glTexCoord2d(1, 1);\r\n        glVertex2f(xmax, ymax);\r\n        glTexCoord2d(0, 1);\r\n        glVertex2f(xmin, ymax);\r\n        glEnd();\r\n    }\r\n\r\n    void reshape(int w, int h) {\r\n        glViewport(0, 0, w, h);\r\n        glMatrixMode(GL_PROJECTION);\r\n        glLoadIdentity();\r\n        glOrtho(0, w, h, 0, 1, -1);\r\n        glMatrixMode(GL_MODELVIEW);\r\n        if (forScale) {\r\n            glScaled(3, 3, 1);\r\n            forScale = false;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Window.java	(revision f6042af7431f2af7ea4d10c2c5d3e567bd1d23cd)
+++ src/Window.java	(date 1597238693395)
@@ -31,6 +31,9 @@
     boolean isCheck = false;
     boolean forSkeletonAnimation = true;
     boolean forMainMenu = true;
+    boolean forMainTheme = true;
+    int mainMenuTheme;
+    Source source;
     int forCamera = 0;
     Player player;
     String player_animation, weapon, head, shoulders, torso, belt, hands, legs, feet;
@@ -97,8 +100,8 @@
 
         AudioMaster.init();
         AudioMaster.setListenerData();
-        int mainMenuTheme = AudioMaster.loadSound("MainMenu");
-        Source source = new Source();
+        mainMenuTheme = AudioMaster.loadSound("MainMenu");
+        source = new Source();
 
         // Единичная загрузка всех хитбоксов
         for(int i = 0; i < Storage.aabbString.length; i++)
@@ -138,7 +141,6 @@
             if (key == GLFW_KEY_UP && action == GLFW_PRESS) isAttackUp = true;
             if (key == GLFW_KEY_DOWN && action == GLFW_PRESS) isAttackDown = true;
             if (key == GLFW_KEY_E && action == GLFW_PRESS) isCheck = true;
-            if (key == GLFW_KEY_U && action == GLFW_PRESS) source.play(mainMenuTheme);
         });
     }
 
@@ -148,19 +150,15 @@
         int j1 = 1, j2 = 1, j3 = 1, j4 = 1;
         int b = 0;
 
-        // Изменение скейла изображения
-        /*try (MemoryStack stack = stackPush()) {
-            IntBuffer pWidth = stack.mallocInt(1);
-            IntBuffer pHeight = stack.mallocInt(1);
-            glfwGetWindowSize(window, pWidth, pHeight);
-            reshape(pWidth.get(0), pHeight.get(0));
-        }*/
-
         while (!glfwWindowShouldClose(window)) {
             glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
             // Переключение уровня
             switch (level) {
                 case "MainMenu": {
+                    if (forMainTheme) {
+                        source.play(mainMenuTheme);
+                        forMainTheme = false;
+                    }
                     glBindTexture(GL_TEXTURE_2D, textureMap.get("MainMenu")); // Фон главного меню
                     createQuadTexture(0, 0, 1536, 360);
                     glBindTexture(GL_TEXTURE_2D, textureMap.get("Press_enter"));
@@ -684,11 +682,8 @@
                     createQuadTexture(0, 0, 103, 18);
 
                     // Броня
-                    if (player.getArmor() < 30){
-                        glBindTexture(GL_TEXTURE_2D, textureMap.get("armor" + player.getArmor() / 5));
-                    } else {
-                        glBindTexture(GL_TEXTURE_2D, textureMap.get("armor5"));
-                    }
+                    if (player.getArmor() < 30) glBindTexture(GL_TEXTURE_2D, textureMap.get("armor" + player.getArmor() / 5));
+                    else glBindTexture(GL_TEXTURE_2D, textureMap.get("armor5"));
 
                     createQuadTexture(0, 19, 34, 53);
                 }
Index: src/mobs/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mobs;\r\n\r\nimport math.AABB;\r\nimport objects.Armor;\r\n\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\npublic class Player extends Mob {\r\n    private int time = 0;\r\n    private String knockbackDirection;\r\n    private Armor head, shoulders, torso, belt, hands, legs, feet;\r\n    private String weapon, attackType;\r\n    private AABB attackBox;\r\n    private Timer timer = new Timer();\r\n    private TimerTask timerTaskPlayer = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            if (knockbackDirection.equals(\"Left\")) moveLeft();\r\n            else if (knockbackDirection.equals(\"Right\")) moveRight();\r\n            else if (knockbackDirection.equals(\"Up\")) moveUp();\r\n            else if (knockbackDirection.equals(\"Down\")) moveDown();\r\n            time++;\r\n        }\r\n    };\r\n\r\n    public Player(int x, int y, int speed, int health, int armor, int damage) {\r\n        super(x, y, speed, health, armor, damage, new AABB(), new AABB());\r\n        attackBox = new AABB();\r\n        setMoveDirection(\"down\");\r\n        weapon = \"longsword\";\r\n        attackType = \"slash\";\r\n        head = new Armor(\"head\", 5, true, false, 0,0,0,0, new AABB(),\"plate_helmet\");\r\n        shoulders = new Armor(\"shoulders\", 5, true, false, 0,0,0,0, new AABB(),\"plate_armor\");\r\n        torso = new Armor(\"torso\", 5, true, false, 0,0,0,0, new AABB(),\"plate_armor\");\r\n        belt = new Armor(\"belt\", 2, true, false, 0,0,0,0, new AABB(),\"leather\");\r\n        hands = new Armor(\"hands\", 2, true, false, 0,0,0,0, new AABB(),\"leather_bracers\");\r\n        legs = new Armor(\"legs\", 5, true, false, 0,0,0,0, new AABB(),\"plate_pants\");\r\n        feet = new Armor(\"feet\", 5, true, false, 0,0,0,0, new AABB(),\"plate_shoes\");\r\n    }\r\n\r\n    public void stopTimerPlayer() {\r\n        time = 0;\r\n        timer.cancel();\r\n        timer.purge();\r\n        timer = new Timer();\r\n        timerTaskPlayer = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                if (knockbackDirection.equals(\"Left\")) moveLeft();\r\n                else if (knockbackDirection.equals(\"Right\")) moveRight();\r\n                else if (knockbackDirection.equals(\"Up\")) moveUp();\r\n                else if (knockbackDirection.equals(\"Down\")) moveDown();\r\n                time++;\r\n            }\r\n        };\r\n    }\r\n\r\n    public Timer getTimer() { return timer; }\r\n\r\n    public TimerTask getTimerTaskPlayer() { return timerTaskPlayer; }\r\n\r\n    public AABB getAttackBox() { return attackBox; }\r\n\r\n    public int getTime() { return time; }\r\n\r\n    public void setKnockbackDirection(String knockbackDirection) { this.knockbackDirection = knockbackDirection; }\r\n\r\n    public String getWeapon() { return weapon; }\r\n\r\n    public void setWeapon(String weapon) { this.weapon = weapon; }\r\n\r\n    public String getAttackType() { return attackType; }\r\n\r\n    public void setAttackType(String attackType) { this.attackType = attackType; }\r\n\r\n    public String getHead() { return head.getTexture(); }\r\n\r\n    public void setHead(String head) { this.head.setTexture(head); }\r\n\r\n    public String getShoulders() { return shoulders.getTexture(); }\r\n\r\n    public void setShoulders(String shoulders) { this.shoulders.setTexture(shoulders); }\r\n\r\n    public String getTorso() { return torso.getTexture(); }\r\n\r\n    public void setTorso(String torso) { this.torso.setTexture(torso); }\r\n\r\n    public String getBelt() { return belt.getTexture(); }\r\n\r\n    public void setBelt(String belt) { this.belt.setTexture(belt); }\r\n\r\n    public String getHands() { return hands.getTexture(); }\r\n\r\n    public void setHands(String hands) { this.hands.setTexture(hands); }\r\n\r\n    public String getLegs() { return legs.getTexture(); }\r\n\r\n    public void setLegs(String legs) { this.legs.setTexture(legs); }\r\n\r\n    public String getFeet() { return feet.getTexture(); }\r\n\r\n    public void setFeet(String feet) { this.feet.setTexture(feet); }\r\n\r\n    public Armor getArmorType(Armor armor) {\r\n        switch (armor.getType()) {\r\n            case \"head\": return head;\r\n            case \"shoulders\": return shoulders;\r\n            case \"torso\": return torso;\r\n            case \"belt\": return belt;\r\n            case \"hands\": return hands;\r\n            case \"legs\": return legs;\r\n            case \"feet\": return feet;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void setArmor(Armor armor) {\r\n        switch (armor.getType()) {\r\n            case \"head\":\r\n                head = armor;\r\n                break;\r\n            case \"shoulders\":\r\n                shoulders = armor;\r\n                break;\r\n            case \"torso\":\r\n                torso = armor;\r\n                break;\r\n            case \"belt\":\r\n                belt = armor;\r\n                break;\r\n            case \"hands\":\r\n                hands = armor;\r\n                break;\r\n            case \"legs\":\r\n                legs = armor;\r\n                break;\r\n            case \"feet\":\r\n                feet = armor;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public void reArmor(){\r\n        this.setArmor(head.getDefense() + shoulders.getDefense() + torso.getDefense() + belt.getDefense() + hands.getDefense() + legs.getDefense() + feet.getDefense());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/mobs/Player.java	(revision f6042af7431f2af7ea4d10c2c5d3e567bd1d23cd)
+++ src/mobs/Player.java	(date 1597238410501)
@@ -6,6 +6,9 @@
 import java.util.Timer;
 import java.util.TimerTask;
 
+import static org.lwjgl.opengl.GL11.GL_TEXTURE_2D;
+import static org.lwjgl.opengl.GL11.glBindTexture;
+
 public class Player extends Mob {
     private int time = 0;
     private String knockbackDirection;
@@ -141,7 +144,5 @@
         }
     }
 
-    public void reArmor(){
-        this.setArmor(head.getDefense() + shoulders.getDefense() + torso.getDefense() + belt.getDefense() + hands.getDefense() + legs.getDefense() + feet.getDefense());
-    }
+    public void reArmor() { this.setArmor(head.getDefense() + shoulders.getDefense() + torso.getDefense() + belt.getDefense() + hands.getDefense() + legs.getDefense() + feet.getDefense()); }
 }
\ No newline at end of file
