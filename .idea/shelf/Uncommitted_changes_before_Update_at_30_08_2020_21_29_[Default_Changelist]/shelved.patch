Index: src/Window.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import content.AudioMaster;\r\nimport content.Source;\r\nimport content.Storage;\r\nimport content.Texture;\r\nimport math.AABB;\r\nimport math.CollisionMessage;\r\nimport mobs.*;\r\nimport objects.*;\r\nimport objects.Object;\r\nimport org.lwjgl.glfw.*;\r\nimport org.lwjgl.opengl.*;\r\nimport org.lwjgl.system.*;\r\nimport singletons.SingletonMobs;\r\nimport singletons.SingletonPlayer;\r\n\r\nimport java.nio.*;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\nimport static org.lwjgl.glfw.Callbacks.*;\r\nimport static org.lwjgl.glfw.GLFW.*;\r\nimport static org.lwjgl.opengl.GL11.*;\r\nimport static org.lwjgl.system.MemoryStack.*;\r\nimport static org.lwjgl.system.MemoryUtil.*;\r\n\r\npublic class Window {\r\n    private long window;\r\n    SingletonMobs singletonMobs;\r\n    SingletonPlayer singletonPlayer;\r\n    private ArrayList<Object> firstLevelObjectList;\r\n    private ArrayList<Object> secondLevelObjectList;\r\n    private ArrayList<Object> thirdLevelObjectList;\r\n    private ArrayList<Object> forthLevelObjectList;\r\n    private ArrayList<Object> shopObjectList;\r\n    private HashMap<String, Integer> textureMap;\r\n    private HashMap<String, Integer> soundMap;\r\n    private HashMap<String, AABB> aabbMap;\r\n    private Source backgroundMusic, armorChange, coinSound, potionSound, doorSound, containerSound, beerSound;\r\n    private Coin coinGUI;\r\n    private Shop shop;\r\n    private Blacksmith blacksmith;\r\n    private Waiter waiter;\r\n    private String level = \"MainMenu\";\r\n    private boolean canChangeLevel = false;\r\n    boolean key_E_Pressed = false;\r\n    boolean forMainMenu = true;\r\n    private boolean firstLevelMobSpawning, secondLevelMobSpawning, fourthLevelMobSpawning = false;\r\n    private int time = 0;\r\n    private Timer mobTimer = new Timer();\r\n    private TimerTask mobSpawnTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            time++;\r\n            if (time == 5) stopMobSpawn();\r\n            SingletonMobs.mobList.add(new Slime(470, 288, 1, 50, 0, 5));\r\n        }\r\n    };\r\n\r\n    private void stopMobSpawn() {\r\n        time = 0;\r\n        mobTimer.cancel();\r\n        mobTimer.purge();\r\n        mobTimer = new Timer();\r\n        mobSpawnTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                time++;\r\n                if (level.equals(\"SecondLevel\")) {\r\n                    SingletonMobs.mobList.add(new Spider(477, 284, 1, 60, 0, 10));\r\n                    if (time == 3) stopMobSpawn();\r\n                }\r\n                else if (level.equals(\"ForthLevel\")) {\r\n                    SingletonMobs.mobList.add(new Imp(477, 284, 1, 100, 0, 50));\r\n                    if (time == 1) stopMobSpawn();\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    public void run() {\r\n        System.out.println(\"Игра запущена\");\r\n\r\n        init();\r\n        loop();\r\n\r\n        glfwFreeCallbacks(window);\r\n        glfwDestroyWindow(window);\r\n\r\n        glfwTerminate();\r\n        glfwSetErrorCallback(null).free();\r\n    }\r\n\r\n    private void init() {\r\n        GLFWErrorCallback.createPrint(System.err).set();\r\n        if (!glfwInit()) throw new IllegalStateException(\"Unable to initialize GLFW\");\r\n\r\n        // Работа с экраном\r\n        window = glfwCreateWindow(1920, 1080, \"Philistine\", glfwGetPrimaryMonitor(), NULL);\r\n        if (window == NULL) throw new RuntimeException(\"Failed to create the GLFW window\");\r\n        try (MemoryStack stack = stackPush()) {\r\n            IntBuffer pWidth = stack.mallocInt(1);\r\n            IntBuffer pHeight = stack.mallocInt(1);\r\n            glfwGetWindowSize(window, pWidth, pHeight);\r\n            GLFWVidMode vidMode = glfwGetVideoMode(glfwGetPrimaryMonitor());\r\n            glfwSetWindowPos(window, (vidMode.width() - pWidth.get(0)) / 2, ((vidMode.height() - pHeight.get(0)) / 2) - 10);\r\n        }\r\n        glfwMakeContextCurrent(window);\r\n        glfwSwapInterval(1);\r\n        glfwShowWindow(window);\r\n\r\n        // Работа с OpenGL\r\n        GL.createCapabilities(); // создает instance для OpenGL в текущем потоке\r\n        glMatrixMode(GL_PROJECTION); // Выставление камеры\r\n        glLoadIdentity(); // По видимости ненужная строка(что-то с единичной матрицей)\r\n        glOrtho(0, 640, 360, 0, 1, -1); // Камера на место окна\r\n        glMatrixMode(GL_MODELVIEW); // Установка матрицы в состояние ModelView\r\n        glEnable(GL_TEXTURE_2D); // Включить 2D текстуры\r\n        glEnable(GL_BLEND); // Включить смешивание цветов\r\n        glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); // Добавляет прозрачность\r\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\r\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\r\n\r\n        // Инициализация звуковых источников\r\n        AudioMaster.init();\r\n        AudioMaster.setListenerData();\r\n        backgroundMusic = new Source(1);\r\n        armorChange = new Source(0);\r\n        coinSound = new Source(0);\r\n        potionSound = new Source(0);\r\n        beerSound = new Source(0);\r\n        doorSound = new Source(0);\r\n        containerSound = new Source(0);\r\n        coinGUI = new Coin(\"coin_01\", true, false, 0, 0, 0, 0, new AABB());\r\n        coinGUI.getTimer().schedule(coinGUI.getAnimationTask(), 0, 120);\r\n\r\n        // Инициализация всех коллекций\r\n        singletonPlayer = SingletonPlayer.getInstance();\r\n        singletonMobs = SingletonMobs.getInstance();\r\n        textureMap = new HashMap<String, Integer>();\r\n        soundMap = new HashMap<String, Integer>();\r\n        aabbMap = new HashMap<String, AABB>();\r\n        firstLevelObjectList = new ArrayList<Object>();\r\n        secondLevelObjectList = new ArrayList<Object>();\r\n        thirdLevelObjectList = new ArrayList<>();\r\n        forthLevelObjectList = new ArrayList<>();\r\n        shopObjectList = new ArrayList<>();\r\n\r\n        // Единичная загрузка всех текстур\r\n        for (int i = 0, id = 0; i < Storage.textureString.length; i++)\r\n            textureMap.put(Storage.textureString[i], id = Texture.loadTexture(\"textures/\" + Storage.textureString[i]));\r\n\r\n        // Единичная загрузка всех звуков\r\n        for (int i = 0, id = 0; i < Storage.soundString.length; i++)\r\n            soundMap.put(Storage.soundString[i], id = AudioMaster.loadSound(\"sounds/\" + Storage.soundString[i]));\r\n\r\n        // Единичная загрузка всех хитбоксов\r\n        for(int i = 0; i < Storage.aabbString.length; i++)\r\n            aabbMap.put(Storage.aabbString[i], new AABB());\r\n\r\n        // Переходы м/у уровнями\r\n        aabbMap.get(\"entranceToFirstLevel\").update(0, 190, 2, 286);\r\n        aabbMap.get(\"entranceToSecondLevel\").update(626, 237, 640, 335);\r\n        aabbMap.get(\"entranceToThirdLevel\").update(197, 134, 237, 145);\r\n        aabbMap.get(\"entranceToForthLevel\").update(247, 134, 283, 144);\r\n        aabbMap.get(\"entranceFromThirdToSecondLevel\").update(249, 134, 288, 146);\r\n        aabbMap.get(\"entranceFromForthToSecondLevel\").update(199, 132, 236, 141);\r\n        aabbMap.get(\"entranceFromTavernToTown\").update(224,316,255,318);\r\n        aabbMap.get(\"entranceFromForgeToTown\").update(384,316,415,318);\r\n        aabbMap.get(\"toBuyBeer\").update(224, 240, 255, 255);\r\n\r\n        // Добавление объектов на первый уровень\r\n        firstLevelObjectList.add(new Furniture(\"barrelOpened\", 118, 135));\r\n        firstLevelObjectList.add(new Furniture(\"bagMedium\", 137, 134));\r\n        firstLevelObjectList.add(new Furniture(\"boxOpened\", 308, 129));\r\n        firstLevelObjectList.add(new Furniture(\"chair1\", 400, 173));\r\n        firstLevelObjectList.add(new Furniture(\"chair3\", 432, 227));\r\n        firstLevelObjectList.add(new Furniture(\"table1\", 426, 163));\r\n        firstLevelObjectList.add(new Furniture(\"littleBag\", 426, 160));\r\n        firstLevelObjectList.add(new Furniture(\"bookRed\", 434, 186));\r\n        firstLevelObjectList.add(new Furniture(\"bones\", 113, 173));\r\n        firstLevelObjectList.add(new Furniture(\"trash\", 462, 173));\r\n        firstLevelObjectList.add(new Gate(\"verticalGate\", 628, 147));\r\n        firstLevelObjectList.add(new Gate(\"verticalGate\", 628, 243));\r\n        firstLevelObjectList.add(new Weapon(\"stick\", \"thrust\", 10, true, true, 150, 150, 342, 342, new AABB(231, 231, 259, 259)));\r\n        firstLevelObjectList.add(new Armor(\"chain_helmet\", \"head\", 4, true, true, 300, 150, 364, 214, 10));\r\n\r\n        // Добавление объектов на третий уровень\r\n        thirdLevelObjectList.add(new Chest(\"chest\", false, true, 279, 215, 279 + 32, 215 + 32, new AABB(279, 215, 279 + 32, 215 + 32)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 369, 127, 369 + 24, 127 + 30, new AABB(369, 127, 369 + 24, 127 + 30)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 451, 153, 451 + 24, 153 + 30, new AABB(451, 153, 451 + 24, 153 + 30)));\r\n        thirdLevelObjectList.add(new Box(\"box\", false, true, 414, 246, 414 + 24, 246 + 30, new AABB(414, 246, 414 + 24, 246 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 150, 234, 150 + 20, 234 + 30, new AABB(150, 234, 150 + 20, 234 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 180, 260, 180 + 20, 260 + 30, new AABB(180, 260, 180 + 20, 260 + 30)));\r\n        thirdLevelObjectList.add(new Barrel(\"barrel\", false, true, 110, 278, 110 + 20, 278 + 30, new AABB(110, 278, 110 + 20, 278 + 30)));\r\n        thirdLevelObjectList.add(new Furniture(\"bagBig\", 171, 131));\r\n        thirdLevelObjectList.add(new Furniture(\"bagMedium\", 199, 133));\r\n        thirdLevelObjectList.add(new Furniture(\"bagSmall\", 113, 208));\r\n        thirdLevelObjectList.add(new Furniture(\"altar0\", 463, 164));\r\n        thirdLevelObjectList.add(new Furniture(\"altar1\", 129, 168));\r\n\r\n        // Добавление объектов на четвертый уровень\r\n        forthLevelObjectList.add(new Furniture(\"gate2\", 292, 336));\r\n        forthLevelObjectList.add(new Furniture(\"trash\", 118, 288));\r\n        forthLevelObjectList.get(forthLevelObjectList.size() - 1).setNoclip(true);\r\n        forthLevelObjectList.add(new Furniture(\"bones\", 466, 163));\r\n        forthLevelObjectList.get(forthLevelObjectList.size() - 1).setNoclip(true);\r\n        forthLevelObjectList.add(new Furniture(\"water\", 466, 163));\r\n        forthLevelObjectList.get(forthLevelObjectList.size() - 1).setNoclip(true);\r\n\r\n        shop = new Shop();\r\n        waiter = new Waiter(168, 136, 1);\r\n        blacksmith = new Blacksmith(176, 126, 1);\r\n        SingletonMobs.mobList.add(SingletonPlayer.player);\r\n        SingletonMobs.mobList.add(new Slime(470, 288, 1, 50, 0, 5));\r\n\r\n        // Обработка единичного нажатий клавиш\r\n        glfwSetKeyCallback(window, (window, key, scancode, action, mods) -> {\r\n            // Нажатие Escape\r\n            if (key == GLFW_KEY_ESCAPE && action == GLFW_PRESS && !level.equals(\"MainMenu\")) {\r\n                switch (SingletonPlayer.player.getMenuChoice()) {\r\n                    case \"Resume\":\r\n                    case \"Options\":\r\n                    case \"Exit\": {\r\n                        SingletonPlayer.player.setScrollMenu(!SingletonPlayer.player.isScrollMenu());\r\n                        break;\r\n                    }\r\n                    case \"Options_Sounds\":\r\n                    case \"Options_Controls\": {\r\n                        SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                        break;\r\n                    }\r\n                    case \"Controls\": {\r\n                        SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Нажатие Е\r\n            if (key == GLFW_KEY_E && action == GLFW_PRESS && !level.equals(\"MainMenu\")) key_E_Pressed = true;\r\n\r\n            // Нажатие Enter\r\n            if (key == GLFW_KEY_ENTER && action == GLFW_PRESS) {\r\n                // Выход из главного меню\r\n                if (level.equals(\"MainMenu\")) {\r\n                    level = \"Town\";\r\n                    backgroundMusic.stop(soundMap.get(\"mainMenuTheme\"));\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu()) {\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setScrollMenu(false);\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Controls\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            AudioMaster.destroy();\r\n                            glfwSetWindowShouldClose(window, true);\r\n                            for (Mob mob : SingletonMobs.mobList) {\r\n                                if (!mob.isDead()) {\r\n                                    mob.getTimer().cancel();\r\n                                    mob.getTimer().purge();\r\n                                }\r\n                            }\r\n                            for (Object object : firstLevelObjectList) {\r\n                                if (object instanceof Coin) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                }\r\n                            }\r\n                            System.exit(0);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble()) {\r\n                    SingletonPlayer.player.setX(SingletonPlayer.player.getX() - 1);\r\n                    SingletonPlayer.player.setDialogBubble(false);\r\n                    if (SingletonPlayer.player.isDialogBubbleChoice()) {\r\n                        backgroundMusic.changeVolume(0.1f);\r\n                        backgroundMusic.play(soundMap.get(\"dungeonAmbient1\"));\r\n                        glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n\r\n                        // Установление хитбоксов стен первого уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4)\r\n                            aabbMap.get(\"wall\" + i).update(Storage.firstLevelWalls[j], Storage.firstLevelWalls[j + 1], Storage.firstLevelWalls[j + 2], Storage.firstLevelWalls[j + 3]);\r\n                        SingletonPlayer.player.setX(199);\r\n                        SingletonPlayer.player.setY(273);\r\n                        SingletonPlayer.player.setSpeed(2);\r\n                        SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        level = \"FirstLevel\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Нажатие стрелки влево\r\n            if (key == GLFW_KEY_LEFT && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isKnockBackTaskStarted() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\")) {\r\n                    SingletonPlayer.player.setAttackLeft(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"left\");\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble())\r\n                    SingletonPlayer.player.setDialogBubbleChoice(!SingletonPlayer.player.isDialogBubbleChoice());\r\n            }\r\n\r\n            // Нажатие стрелки вправо\r\n            if (key == GLFW_KEY_RIGHT && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isKnockBackTaskStarted() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\")) {\r\n                    SingletonPlayer.player.setAttackRight(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"right\");\r\n                }\r\n                // Выбор в диалоговом окне(Войти в данж?)\r\n                else if (level.equals(\"Town\") && SingletonPlayer.player.isDialogBubble())\r\n                    SingletonPlayer.player.setDialogBubbleChoice(!SingletonPlayer.player.isDialogBubbleChoice());\r\n            }\r\n\r\n            // Нажатие стрелки вверх\r\n            if (key == GLFW_KEY_UP && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isKnockBackTaskStarted() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\") &&\r\n                        !SingletonPlayer.player.isScrollMenu()) {\r\n                    SingletonPlayer.player.setAttackUp(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"up\");\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu())\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Exit\");\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Resume\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Sounds\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Sounds\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                    }\r\n            }\r\n\r\n            // Нажатие стрелки вниз\r\n            if (key == GLFW_KEY_DOWN && action == GLFW_PRESS) {\r\n                // Атака\r\n                if (!SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isKnockBackTaskStarted() &&\r\n                        !level.equals(\"MainMenu\") && !level.equals(\"Town\") && !level.equals(\"tavern\") && !level.equals(\"forge\") &&\r\n                        !SingletonPlayer.player.isScrollMenu()) {\r\n                    SingletonPlayer.player.setAttackDown(true);\r\n                    SingletonPlayer.player.setMoveDirection(\"down\");\r\n                }\r\n                // Выбор во второстепенном меню\r\n                else if (SingletonPlayer.player.isScrollMenu())\r\n                    switch (SingletonPlayer.player.getMenuChoice()) {\r\n                        case \"Resume\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options\");\r\n                            break;\r\n                        }\r\n                        case \"Options\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Exit\");\r\n                            break;\r\n                        }\r\n                        case \"Exit\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Resume\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Controls\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Sounds\");\r\n                            break;\r\n                        }\r\n                        case \"Options_Sounds\": {\r\n                            SingletonPlayer.player.setMenuChoice(\"Options_Controls\");\r\n                            break;\r\n                        }\r\n                    }\r\n            }\r\n        });\r\n    }\r\n\r\n    private synchronized void loop() {\r\n        int guard_i = 1, guard_g = 0, forgeFurnace_i = 1, forgeFurnace_g = 0;\r\n        backgroundMusic.play(soundMap.get(\"mainMenuTheme\"));\r\n\r\n        while (!glfwWindowShouldClose(window)) {\r\n            glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\r\n\r\n            // Переключение уровня\r\n            switch (level) {\r\n                case \"MainMenu\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"MainMenu\")); // Фон главного меню\r\n                    createQuadTexture(0, 0, 1536, 360);\r\n\r\n                    // Анимация охранника\r\n                    if (guard_i == 11) guard_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"guard_stand_0\" + guard_i));\r\n                    createQuadTexture(30, 190, 62, 224);\r\n                    if (guard_g == 10) {\r\n                        guard_i++;\r\n                        guard_g = 0;\r\n                    }\r\n                    guard_g++;\r\n\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"Philistine\"));\r\n                    createQuadTexture(SingletonPlayer.player.getX() - 68, SingletonPlayer.player.getY() - 156, SingletonPlayer.player.getX() + 64 + 68, SingletonPlayer.player.getY() - 100);\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"Press_enter\"));\r\n                    createQuadTexture(SingletonPlayer.player.getX() - 18, SingletonPlayer.player.getY() - 100, SingletonPlayer.player.getX() + 82, SingletonPlayer.player.getY() - 72);\r\n                    if (SingletonPlayer.player.getX() == 1186) forMainMenu = false;\r\n                    else if (SingletonPlayer.player.getX() == 290) forMainMenu = true;\r\n                    if (forMainMenu) {\r\n                        glTranslated(-1, 0, 0);\r\n                        SingletonPlayer.player.setForPlacingCamera(SingletonPlayer.player.getForPlacingCamera() + 1);\r\n                        SingletonPlayer.player.setMainMenuDirection(true);\r\n                    }\r\n                    else {\r\n                        glTranslated(1, 0, 0);\r\n                        SingletonPlayer.player.setForPlacingCamera(SingletonPlayer.player.getForPlacingCamera() - 1);\r\n                        SingletonPlayer.player.setMainMenuDirection(false);\r\n                    }\r\n                    break;\r\n                }\r\n                case \"Town\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"MainMenu\")); // Фон главного меню\r\n                    createQuadTexture(0, 0, 1536, 360);\r\n\r\n                    // Анимация охранника\r\n                    if (guard_i == 11) guard_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"guard_stand_0\" + guard_i));\r\n                    createQuadTexture(30, 190, 62, 224);\r\n                    if (guard_g == 10) {\r\n                        guard_i++;\r\n                        guard_g = 0;\r\n                    }\r\n                    guard_g++;\r\n\r\n                    // Левая граница города\r\n                    if (SingletonPlayer.player.getX() <= 48) SingletonPlayer.player.stopLeft();\r\n                    if (SingletonPlayer.player.getX() <= 50) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"you_Shall_Not_Pass\"));\r\n                        createQuadTexture(34, 136, 94, 195);\r\n                    }\r\n\r\n                    // Переход в данж\r\n                    if (SingletonPlayer.player.getX() + 32 == 1519) {\r\n                        SingletonPlayer.player.setDialogBubble(true);\r\n                        if (SingletonPlayer.player.isDialogBubbleChoice()) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enterTheDungeon_Yes\"));\r\n                        else if (!SingletonPlayer.player.isDialogBubbleChoice()) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enterTheDungeon_No\"));\r\n                        createQuadTexture(SingletonPlayer.player.getX() - 20, SingletonPlayer.player.getY() - 55, SingletonPlayer.player.getX() + 40, SingletonPlayer.player.getY());\r\n                    }\r\n\r\n                    if (key_E_Pressed) {\r\n                        // Вхождение в таверну\r\n                        if (SingletonPlayer.player.getX() + 32 > 305 && SingletonPlayer.player.getX() + 32 < 341) {\r\n                            level = \"tavern\";\r\n                            glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                            SingletonPlayer.player.setForPlacingCamera(3);\r\n\r\n                            // Обновление хитбоксов стен для tavern\r\n                            for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.tavernLevelWalls[j], Storage.tavernLevelWalls[j + 1],\r\n                                        Storage.tavernLevelWalls[j + 2], Storage.tavernLevelWalls[j + 3]);\r\n                            }\r\n                            doorSound.play(soundMap.get(\"doorOpen\"));\r\n                            SingletonPlayer.player.setX(210);\r\n                            SingletonPlayer.player.setY(254);\r\n                            SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        }\r\n                        // Вхождение в кузницу\r\n                        else if (SingletonPlayer.player.getX() + 32 > 620 && SingletonPlayer.player.getX() + 32 < 651) {\r\n                            level = \"forge\";\r\n                            glTranslated(SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                            SingletonPlayer.player.setForPlacingCamera(315);\r\n\r\n                            // Обновление хитбоксов стен для forge\r\n                            for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.forgeLevelWalls[j], Storage.forgeLevelWalls[j + 1],\r\n                                        Storage.forgeLevelWalls[j + 2], Storage.forgeLevelWalls[j + 3]);\r\n                            }\r\n                            doorSound.play(soundMap.get(\"doorOpen\"));\r\n                            SingletonPlayer.player.setX(368);\r\n                            SingletonPlayer.player.setY(254);\r\n                            SingletonPlayer.player.setMoveDirection(\"up\");\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n                    break;\r\n                }\r\n                case \"tavern\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"tavern\")); // Фон таверны\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Отрисовка оффицианта и остановка около прилавка\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"waiter_\" + waiter.getMoveDirection() + \"_move_0\" + waiter.getAnimationTime()));\r\n                    createQuadTexture(waiter.getX(), waiter.getY(), waiter.getX() + 64, waiter.getY() + 64);\r\n                    waiter.simulateBehavior();\r\n                    if (waiter.isWaitingTaskStarted()) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_question\"));\r\n                        createQuadTexture(waiter.getX() + 31, waiter.getY(), waiter.getX() + 51, waiter.getY() + 20);\r\n\r\n                        // Восстановить здоровье\r\n                        if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"toBuyBeer\"))) {\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_health\")); // Фон таверны\r\n                            createQuadTexture(SingletonPlayer.player.getX() + 32, SingletonPlayer.player.getY(),\r\n                                    SingletonPlayer.player.getX() + 52, SingletonPlayer.player.getY() + 20);\r\n                            if (key_E_Pressed && SingletonPlayer.player.getHealth() < 100 && SingletonPlayer.player.getMoney() >= 10) {\r\n                                SingletonPlayer.player.setHealth(100);\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() - 10);\r\n                                beerSound.play(soundMap.get(\"drinkBeer\"));\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"gentleman_brown\"));\r\n                    createQuadTexture(350, 190, 350 + 64, 190 + 64);\r\n\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall6\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    // Проверка выхода в город\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromTavernToTown\"))) {\r\n                        level = \"Town\";\r\n\r\n                        // Обновление хитбоксов стен для города\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.townLevelWalls[j], Storage.townLevelWalls[j + 1],\r\n                                    Storage.townLevelWalls[j + 2], Storage.townLevelWalls[j + 3]);\r\n                        }\r\n                        doorSound.play(soundMap.get(\"doorOpen\"));\r\n                        SingletonPlayer.player.getStepSound().stop(SingletonPlayer.player.getPlayerSounds().get(\"stepWood\"));\r\n                        glTranslated(-SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                        SingletonPlayer.player.setX(293);\r\n                        SingletonPlayer.player.setY(192);\r\n                        SingletonPlayer.player.setMoveDirection(\"right\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"forge\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"forge\")); // Фон кузницы\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Анимация печки\r\n                    if (forgeFurnace_i == 4) forgeFurnace_i = 1;\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"furnace_burn_0\" + forgeFurnace_i));\r\n                    createQuadTexture(223, 142, 259, 173);\r\n                    if (forgeFurnace_g == 12) {\r\n                        forgeFurnace_i++;\r\n                        forgeFurnace_g = 0;\r\n                    }\r\n                    forgeFurnace_g++;\r\n\r\n                    // Отрисовка кузнеца и остановка около прилавка\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"blacksmith_\" + blacksmith.getMoveDirection() + \"_move_0\" + blacksmith.getAnimationTime()));\r\n                    createQuadTexture(blacksmith.getX(), blacksmith.getY(), blacksmith.getX() + 64, blacksmith.getY() + 64);\r\n                    blacksmith.simulateBehavior();\r\n                    if (blacksmith.isWaitingTaskStarted()) {\r\n                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"emotion_question\"));\r\n                        createQuadTexture(blacksmith.getX() + 31, blacksmith.getY(), blacksmith.getX() + 51, blacksmith.getY() + 20);\r\n                    }\r\n\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall6\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    if (shop.loot.size() != 0) {\r\n                        shopObjectList.addAll(shop.loot);\r\n                        shop.loot.clear();\r\n                    }\r\n\r\n                    for (Object object : shopObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    for (int i = 0; i < shopObjectList.size(); i++) {\r\n                        if (!shopObjectList.get(i).isDrawAble()) continue;\r\n                        if (shopObjectList.get(i) instanceof Armor && AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(),\r\n                                shopObjectList.get(i).getCollisionBox())) {\r\n                            Armor tempArmor = (Armor) shopObjectList.get(i);\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"price\"));\r\n                            createQuadTexture(tempArmor.getMinX() + 15 ,tempArmor.getCollisionBox().getMin().y - 27, tempArmor.getMinX() + 45,  tempArmor.getCollisionBox().getMin().y);\r\n                            int tempX0, tempX1, tempY0, tempY1;\r\n                            tempX0 = tempArmor.getMinX() + 37 - 7;\r\n                            tempX1 = tempArmor.getMinX() + 37;\r\n                            tempY0 = tempArmor.getCollisionBox().getMin().y - 13;\r\n                            tempY1 = tempArmor.getCollisionBox().getMin().y - 3;\r\n                            int tempPrice = tempArmor.getPrice();\r\n                            for (int j = 0; j < getCountsOfDigits(tempArmor.getPrice()); j++) {\r\n                                switch (tempPrice % 10) {\r\n                                    case 0:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 1:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 2:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 3:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 4:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 5:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 6:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 7:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 8:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n                                    case 9:\r\n                                        glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                                        createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                                        break;\r\n\r\n                                }\r\n                                tempPrice = tempPrice / 10;\r\n                                tempX0 -= 7;\r\n                                tempX1 -= 7;\r\n                            }\r\n                            if (key_E_Pressed && SingletonPlayer.player.getMoney() >= tempArmor.getPrice()) {\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() - tempArmor.getPrice());\r\n                                SingletonPlayer.player.setArmor(tempArmor);\r\n                                shopObjectList.get(i).setIsLying(false);\r\n                                shopObjectList.remove(i);\r\n                                armorChange.play(soundMap.get(\"changingArmor\"));\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    // Проверка выхода в город\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromForgeToTown\"))) {\r\n                        level = \"Town\";\r\n\r\n                        // Обновление хитбоксов стен для города\r\n                        for (int i = 0, j = 0; i < 7; i++, j += 4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.townLevelWalls[j], Storage.townLevelWalls[j + 1],\r\n                                    Storage.townLevelWalls[j + 2], Storage.townLevelWalls[j + 3]);\r\n                        }\r\n                        doorSound.play(soundMap.get(\"doorOpen\"));\r\n                        SingletonPlayer.player.getStepSound().stop(SingletonPlayer.player.getPlayerSounds().get(\"stepWood\"));\r\n                        glTranslated(-SingletonPlayer.player.getForPlacingCamera(), 0, 0);\r\n                        SingletonPlayer.player.setX(605);\r\n                        SingletonPlayer.player.setY(192);\r\n                        SingletonPlayer.player.setMoveDirection(\"right\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"FirstLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level0\")); // Фон первого уровня\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    if (!firstLevelMobSpawning) {\r\n                        firstLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 0, 5000);\r\n                    }\r\n\r\n                    // Отрисовка всех объектов\r\n                    for (Object object : firstLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        if (object instanceof Coin) {\r\n                            Coin coin = (Coin) object;\r\n                            if (!coin.isAnimationTaskStarted())\r\n                                coin.getTimer().schedule(coin.getAnimationTask(), 0, 120);\r\n                            coin.setTexture(\"coin_0\" + coin.getAnimationTime());\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(coin.getTexture()));\r\n                        }\r\n                        else if (object instanceof Container) {\r\n                            Container container = (Container) object;\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(container.getTexture() + container.getState()));\r\n                        }\r\n                        else if (object instanceof Gate) {\r\n                            Gate gate = (Gate) object;\r\n                            if (canChangeLevel && gate.getMinY() == 243) {\r\n                                gate.setFinalY(147);\r\n                                gate.update();\r\n                            }\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(gate.getTexture()));\r\n                        }\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    // Подбор всех возможных предметов с клавишей Е\r\n                    if (key_E_Pressed) {\r\n                        for (int i = 0; i < firstLevelObjectList.size(); i++) {\r\n                            if (firstLevelObjectList.get(i) instanceof Armor) {\r\n                                Armor changingArmor = (Armor) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingArmor.getCollisionBox())) {\r\n                                    Armor playerArmor = SingletonPlayer.player.getArmorType(changingArmor);\r\n                                    changingArmor.setIsLying(false);\r\n                                    SingletonPlayer.player.setArmor(changingArmor);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingArmor = playerArmor;\r\n                                    if (changingArmor.getTexture().equals(\"nothing\")) firstLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingArmor.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 20);\r\n                                        changingArmor.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 30);\r\n                                        changingArmor.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 44);\r\n                                        changingArmor.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 34);\r\n                                        changingArmor.setIsLying(true);\r\n                                        changingArmor.correctCollisionBox();\r\n                                        firstLevelObjectList.set(i, changingArmor);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else if (firstLevelObjectList.get(i) instanceof Weapon) {\r\n                                Weapon changingWeapon = (Weapon) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingWeapon.getCollisionBox())) {\r\n                                    Weapon playerWeapon = SingletonPlayer.player.getWeapon();\r\n                                    changingWeapon.setIsLying(false);\r\n                                    changingWeapon.resize();\r\n                                    SingletonPlayer.player.setWeapon(changingWeapon);\r\n                                    SingletonPlayer.player.updateDamage();\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingWeapon = playerWeapon;\r\n                                    if (changingWeapon.getTexture().equals(\"nothing\")) firstLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingWeapon.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 64);\r\n                                        changingWeapon.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 64);\r\n                                        changingWeapon.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 128);\r\n                                        changingWeapon.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 128);\r\n                                        changingWeapon.setIsLying(true);\r\n                                        changingWeapon.correctCollisionBox();\r\n                                        firstLevelObjectList.set(i, changingWeapon);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else if (firstLevelObjectList.get(i) instanceof Lever) {\r\n                                Lever change = (Lever) firstLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), change.getCollisionBox())) {\r\n                                    change.setState(\"On\");\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        key_E_Pressed = false;\r\n                    }\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Slime) {\r\n                            Slime slime = (Slime) SingletonMobs.mobList.get(i);\r\n                            if (!slime.isDead()) {\r\n                                slime.update();\r\n                                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_\" + slime.getMoveDirection() + \"_0\" + slime.getAnimationTime()));\r\n                            }\r\n                            else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"slime_death_0\" + slime.getDeathAnimationTime()));\r\n                            createQuadTexture(slime.getX(), slime.getY(), slime.getX() + 18, slime.getY() + 12);\r\n                        }\r\n                    }\r\n\r\n                    // Проверка возможности перехода на другой уровень\r\n                    for (Mob mob : SingletonMobs.mobList) {\r\n                        if (!mob.isDead() && !(mob instanceof Player)) {\r\n                            canChangeLevel = false;\r\n                            break;\r\n                        }\r\n                        canChangeLevel = true;\r\n                    }\r\n\r\n                    // Проверка всех мобов на столкновение со стенами, объектами. Столкновения объектов с объектами\r\n                    for (int i = 0; i < SingletonMobs.mobList.size(); i++) {\r\n                        Mob mob = SingletonMobs.mobList.get(i);\r\n\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                mob.stopDown();\r\n                        }\r\n\r\n                        for (int j = 0; j < firstLevelObjectList.size(); j++) {\r\n                            Object object = firstLevelObjectList.get(j);\r\n                            if (!(object instanceof Furniture) && !(object instanceof Container) && !(object instanceof Gate)) {\r\n                                // Столкновение объектов со стенами\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                                    object.stopRight();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                    object.stopLeft();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                    object.stopUp();\r\n                                if (AABB.AABBvsAABB(object.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                    object.stopDown();\r\n\r\n                                // Столкновение объектов с объектами\r\n                                for (int k = j + 1; k < firstLevelObjectList.size(); k++) {\r\n                                    Object object2 = firstLevelObjectList.get(k);\r\n                                    if (!(object2 instanceof Furniture) && !(object2 instanceof Container) && !(object2 instanceof Gate)) {\r\n                                        if (AABB.AABBvsAABB(object.getCollisionBox(), object2.getCollisionBox()))\r\n                                            object.moveLeft();\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (!mob.isDead() && AABB.AABBvsAABB(mob.getCollisionBox(), object.getCollisionBox())) {\r\n                                if ((mob instanceof Player) && (object instanceof Coin)) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                    firstLevelObjectList.remove(object);\r\n                                    SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() + 10);\r\n                                    coinSound.play(soundMap.get(\"pickedCoin\"));\r\n                                    break;\r\n                                }\r\n                                else if ((mob instanceof Player) && (object instanceof Potion)) {\r\n                                    object.getTimer().cancel();\r\n                                    object.getTimer().purge();\r\n                                    firstLevelObjectList.remove(object);\r\n                                    if (SingletonPlayer.player.getHealth() > 90) SingletonPlayer.player.setHealth(100);\r\n                                    else SingletonPlayer.player.setHealth(SingletonPlayer.player.getHealth() + 10);\r\n                                    potionSound.play(soundMap.get(\"pickedPotion\"));\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            if (object.isNoclip()) continue;\r\n                            if (!mob.isDead() && AABB.AABBvsAABB2(mob.getCollisionBox(), object.getCollisionBox()))\r\n                                mob.stop(CollisionMessage.getMessage());\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToSecondLevel\"))) {\r\n                        if (canChangeLevel) {\r\n                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                            // Обновление хитбоксов стен для второго уровня\r\n                            for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                                aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                        Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                            }\r\n                            SingletonPlayer.player.setX(2 - 14);\r\n                            SingletonPlayer.player.setY(225);\r\n                            level = \"SecondLevel\";\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case \"SecondLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level1\")); // Фон второго уровня\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    if (!secondLevelMobSpawning) {\r\n                        secondLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 3000, 10000);\r\n                    }\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Spider) {\r\n                            Spider spider = (Spider) SingletonMobs.mobList.get(i);\r\n                            if (!spider.isDead()) {\r\n                                spider.update();\r\n                                if (spider.isAttack()) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_\" + spider.getMoveDirection() + \"_attack_0\" + spider.getHitAnimationTime()));\r\n                                else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_\" + spider.getMoveDirection() + \"_move_0\" + spider.getAnimationTime()));\r\n                            }\r\n                            else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"spider_death_0\" + spider.getDeathAnimationTime()));\r\n                            createQuadTexture(spider.getX(), spider.getY(), spider.getX() + 64, spider.getY() + 64);\r\n                        }\r\n                    }\r\n\r\n                    // Проверка всех мобов на столкновение со стенами\r\n                    for (int i1 = 0; i1 < SingletonMobs.mobList.size(); i1++) {\r\n                        Mob mob = SingletonMobs.mobList.get(i1);\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall5\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall6\")) || AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall4\")))\r\n                                mob.stopDown();\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на первый уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToFirstLevel\"))) {\r\n                        SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                        // Обновление хитбоксов стен для первого уровня\r\n                        for(int i = 0, j = 0; i < 5; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.firstLevelWalls[j], Storage.firstLevelWalls[j + 1],\r\n                                    Storage.firstLevelWalls[j + 2], Storage.firstLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(580);\r\n                        SingletonPlayer.player.setY(281);\r\n                        level = \"FirstLevel\";\r\n                    }\r\n\r\n                    // Проверка перехода на 3 уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToThirdLevel\"))) {\r\n                        SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                        // Обновление хитбоксов стен для 3 уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.thirdLevelWalls[j], Storage.thirdLevelWalls[j + 1],\r\n                                    Storage.thirdLevelWalls[j + 2], Storage.thirdLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(240);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                        level = \"ThirdLevel\";\r\n                    }\r\n\r\n                    // Проверка перехода на 4 уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceToForthLevel\"))) {\r\n                        SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов\r\n\r\n                        // Обновление хитбоксов стен для 4 уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.fourthLevelWalls[j], Storage.fourthLevelWalls[j + 1],\r\n                                    Storage.fourthLevelWalls[j + 2], Storage.fourthLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(180);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                        level = \"ForthLevel\";\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ThirdLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level2\"));\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    // Отрисовка всех объектов\r\n                    for (Object object : thirdLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        if (object instanceof Coin) {\r\n                            Coin coin = (Coin) object;\r\n                            if (!coin.isAnimationTaskStarted())\r\n                                coin.getTimer().schedule(coin.getAnimationTask(), 0, 120);\r\n                            coin.setTexture(\"coin_0\" + coin.getAnimationTime());\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(coin.getTexture()));\r\n                        }\r\n                        else if (object instanceof Container) {\r\n                            Container container = (Container) object;\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(container.getTexture() + container.getState()));\r\n                        }\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    // Столкновение игрока со стенами\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                        SingletonPlayer.player.stopRight();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                        SingletonPlayer.player.stopLeft();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall0\")))\r\n                        SingletonPlayer.player.stopUp();\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                        SingletonPlayer.player.stopDown();\r\n\r\n                    for (int i = 0; i < thirdLevelObjectList.size(); i++) {\r\n                        Object object = thirdLevelObjectList.get(i);\r\n\r\n                        // Столкновение игрока с !noclip объектами\r\n                        if (AABB.AABBvsAABB2(SingletonPlayer.player.getCollisionBox(), object.getCollisionBox()) && !object.isNoclip())\r\n                            SingletonPlayer.player.stop(CollisionMessage.getMessage());\r\n\r\n                        // Столкновение объектов с объектами\r\n                        for (int j = i + 1; j < thirdLevelObjectList.size(); j++) {\r\n                            Object object2 = thirdLevelObjectList.get(j);\r\n                            if (AABB.AABBvsAABB(object.getCollisionBox(), object2.getCollisionBox())) {\r\n                                if (object.isNoclip() && object2.isNoclip()) {\r\n                                    object.moveLeft();\r\n                                    object2.moveRight();\r\n                                }\r\n                                else if (object.isNoclip() && !object2.isNoclip()) object.moveRight();\r\n                                else if (!object.isNoclip() && object2.isNoclip()) object2.moveRight();\r\n                            }\r\n                        }\r\n\r\n                        // Подбор монет и зелий игроком\r\n                        if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), object.getCollisionBox())) {\r\n                            if (object instanceof Coin) {\r\n                                object.getTimer().cancel();\r\n                                object.getTimer().purge();\r\n                                thirdLevelObjectList.remove(object);\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() + 10);\r\n                                coinSound.play(soundMap.get(\"pickedCoin\"));\r\n                                break;\r\n                            }\r\n                            else if (object instanceof Potion) {\r\n                                object.getTimer().cancel();\r\n                                object.getTimer().purge();\r\n                                thirdLevelObjectList.remove(object);\r\n                                if (SingletonPlayer.player.getHealth() > 90) SingletonPlayer.player.setHealth(100);\r\n                                else SingletonPlayer.player.setHealth(SingletonPlayer.player.getHealth() + 10);\r\n                                potionSound.play(soundMap.get(\"pickedPotion\"));\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Подбор всех возможных предметов с клавишей Е\r\n                    if (key_E_Pressed) {\r\n                        for (int i = 0; i < thirdLevelObjectList.size(); i++) {\r\n                            if (thirdLevelObjectList.get(i) instanceof Armor) {\r\n                                Armor changingArmor = (Armor) thirdLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingArmor.getCollisionBox())) {\r\n                                    Armor playerArmor = SingletonPlayer.player.getArmorType(changingArmor);\r\n                                    changingArmor.setIsLying(false);\r\n                                    SingletonPlayer.player.setArmor(changingArmor);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingArmor = playerArmor;\r\n                                    if (changingArmor.getTexture().equals(\"nothing\")) thirdLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingArmor.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 20);\r\n                                        changingArmor.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 30);\r\n                                        changingArmor.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 44);\r\n                                        changingArmor.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 34);\r\n                                        changingArmor.setIsLying(true);\r\n                                        changingArmor.correctCollisionBox();\r\n                                        thirdLevelObjectList.set(i, changingArmor);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else if (thirdLevelObjectList.get(i) instanceof Weapon) {\r\n                                Weapon changingWeapon = (Weapon) thirdLevelObjectList.get(i);\r\n                                if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), changingWeapon.getCollisionBox())) {\r\n                                    Weapon playerWeapon = SingletonPlayer.player.getWeapon();\r\n                                    changingWeapon.setIsLying(false);\r\n                                    changingWeapon.resize();\r\n                                    SingletonPlayer.player.setWeapon(changingWeapon);\r\n                                    armorChange.play(soundMap.get(\"changingArmor\"));\r\n                                    changingWeapon = playerWeapon;\r\n                                    if (changingWeapon.getTexture().equals(\"nothing\")) thirdLevelObjectList.remove(i);\r\n                                    else {\r\n                                        changingWeapon.setMinX(SingletonPlayer.player.getCollisionBox().getMin().x - 64);\r\n                                        changingWeapon.setMinY(SingletonPlayer.player.getCollisionBox().getMin().y - 64);\r\n                                        changingWeapon.setMaxX(SingletonPlayer.player.getCollisionBox().getMin().x + 128);\r\n                                        changingWeapon.setMaxY(SingletonPlayer.player.getCollisionBox().getMin().y + 128);\r\n                                        changingWeapon.setIsLying(true);\r\n                                        changingWeapon.correctCollisionBox();\r\n                                        thirdLevelObjectList.set(i, changingWeapon);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            else if (thirdLevelObjectList.get(i) instanceof Container) {\r\n                                Container change = (Container) thirdLevelObjectList.get(i);\r\n                                if (AABB.toInteract(SingletonPlayer.player.getCollisionBox(), change.getCollisionBox())) {\r\n                                    if (change.getState().equals(\"Closed\")) {\r\n                                        if (change.getIsNeedKey() && SingletonPlayer.player.getKeys() > 0) {\r\n                                            SingletonPlayer.player.setKeys(SingletonPlayer.player.getKeys() - 1);\r\n                                            containerSound.play(soundMap.get(\"openChest\"));\r\n                                        }\r\n                                        else containerSound.play(soundMap.get(\"openBoxBarrel\"));\r\n                                        change.setState(\"Opened\");\r\n                                        if (change.loot.size() != 0) {\r\n                                            thirdLevelObjectList.addAll(change.loot);\r\n                                            change.loot.clear();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    key_E_Pressed = false;\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromThirdToSecondLevel\"))) {\r\n                        level = \"SecondLevel\";\r\n                        // Обновление хитбоксов стен для второго уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j += 4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                    Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(180);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ForthLevel\": {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"level3\"));\r\n                    createQuadTexture(0, 0, 640, 360);\r\n\r\n                    for (Object object : forthLevelObjectList) {\r\n                        if (!object.isDrawAble()) continue;\r\n                        if (object instanceof Coin) {\r\n                            Coin coin = (Coin) object;\r\n                            if (!coin.isAnimationTaskStarted())\r\n                                coin.getTimer().schedule(coin.getAnimationTask(), 0, 120);\r\n                            coin.setTexture(\"coin_0\" + coin.getAnimationTime());\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(coin.getTexture()));\r\n                        }\r\n                        else if (object instanceof Container) {\r\n                            Container container = (Container) object;\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(container.getTexture() + container.getState()));\r\n                        }\r\n                        else glBindTexture(GL_TEXTURE_2D, textureMap.get(object.getTexture()));\r\n                        createQuadTexture(object.getMinX(), object.getMinY(), object.getMaxX(), object.getMaxY());\r\n                    }\r\n\r\n                    for (int i = 0; i < forthLevelObjectList.size(); i++) {\r\n                        Object object = forthLevelObjectList.get(i);\r\n\r\n                        // Столкновение игрока с !noclip объектами\r\n                        if (AABB.AABBvsAABB2(SingletonPlayer.player.getCollisionBox(), object.getCollisionBox()) && !object.isNoclip())\r\n                            SingletonPlayer.player.stop(CollisionMessage.getMessage());\r\n\r\n                        // Столкновение объектов с объектами\r\n                        for (int j = i + 1; j < forthLevelObjectList.size(); j++) {\r\n                            Object object2 = forthLevelObjectList.get(j);\r\n                            if (AABB.AABBvsAABB(object.getCollisionBox(), object2.getCollisionBox())) {\r\n                                if (object.isNoclip() && object2.isNoclip()) {\r\n                                    object.moveLeft();\r\n                                    object2.moveRight();\r\n                                }\r\n                                else if (object.isNoclip() && !object2.isNoclip()) object.moveRight();\r\n                                else if (!object.isNoclip() && object2.isNoclip()) object2.moveRight();\r\n                            }\r\n                        }\r\n\r\n                        // Подбор монет и зелий игроком\r\n                        if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), object.getCollisionBox())) {\r\n                            if (object instanceof Coin) {\r\n                                object.getTimer().cancel();\r\n                                object.getTimer().purge();\r\n                                forthLevelObjectList.remove(object);\r\n                                SingletonPlayer.player.setMoney(SingletonPlayer.player.getMoney() + 10);\r\n                                coinSound.play(soundMap.get(\"pickedCoin\"));\r\n                                break;\r\n                            }\r\n                            else if (object instanceof Potion) {\r\n                                object.getTimer().cancel();\r\n                                object.getTimer().purge();\r\n                                forthLevelObjectList.remove(object);\r\n                                if (SingletonPlayer.player.getHealth() > 90) SingletonPlayer.player.setHealth(100);\r\n                                else SingletonPlayer.player.setHealth(SingletonPlayer.player.getHealth() + 10);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (!fourthLevelMobSpawning) {\r\n                        fourthLevelMobSpawning = true;\r\n                        mobTimer.schedule(mobSpawnTask, 3000, 10000);\r\n                    }\r\n\r\n                    // Все операции с мобами\r\n                    for (int i = 1; i < SingletonMobs.mobList.size(); i++) {\r\n                        if (SingletonMobs.mobList.get(i) instanceof Imp) {\r\n                            Imp imp = (Imp) SingletonMobs.mobList.get(i);\r\n                            if (!imp.isDead()) {\r\n                                imp.update();\r\n                                // HealthBar\r\n                                int tempHealth = imp.getHealth() % 10 == 0 ? imp.getHealth() : imp.getHealth() - (imp.getHealth() % 10) + 10;\r\n                                if (tempHealth > 0) {\r\n                                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"enemyHp\" + tempHealth));\r\n                                    createQuadTexture(imp.getX(), imp.getY(), imp.getX() + 64, imp.getY() + 8);\r\n                                }\r\n\r\n                                if (imp.isAttackLeft() || imp.isAttackRight() || imp.isAttackUp() || imp.isAttackDown())\r\n                                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_\" + imp.getMoveDirection() + \"_attack_0\" + imp.getHitAnimationTime()));\r\n                                else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_\" + imp.getMoveDirection() + \"_move_0\" + imp.getAnimationTime()));\r\n                            }\r\n                            else glBindTexture(GL_TEXTURE_2D, textureMap.get(\"imp_death_0\" + imp.getDeathAnimationTime()));\r\n                            createQuadTexture(imp.getX(), imp.getY(), imp.getX() + 64, imp.getY() + 64);\r\n                        }\r\n                    }\r\n\r\n                    // Столкновение мобов со стенами\r\n                    for (Mob mob : SingletonMobs.mobList) {\r\n                        if (!mob.isDead()) {\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall1\")))\r\n                                mob.stopRight();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall3\")))\r\n                                mob.stopLeft();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall0\")))\r\n                                mob.stopUp();\r\n                            if (AABB.AABBvsAABB(mob.getCollisionBox(), aabbMap.get(\"wall2\")))\r\n                                mob.stopDown();\r\n                        }\r\n                    }\r\n\r\n                    // Проверка перехода на второй уровень\r\n                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get(\"entranceFromForthToSecondLevel\"))) {\r\n                        for (Mob mob : SingletonMobs.mobList) {\r\n                            if (!mob.isDead() && !(mob instanceof Player));\r\n                        }\r\n\r\n                        // Обновление хитбоксов стен для второго уровня\r\n                        for (int i = 0, j = 0; i < 7; i++, j+=4) {\r\n                            aabbMap.get(\"wall\" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],\r\n                                    Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);\r\n                        }\r\n                        SingletonPlayer.player.setX(240);\r\n                        SingletonPlayer.player.setY(120);\r\n                        SingletonPlayer.player.setMoveDirection(\"down\");\r\n                        level = \"SecondLevel\";\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Отрисовка интерфейса\r\n            if (!level.equals(\"MainMenu\") && !level.equals(\"Town\")) {\r\n                // Полоска здоровья\r\n                int tempHealth = SingletonPlayer.player.getHealth() % 10 == 0 ? SingletonPlayer.player.getHealth() : SingletonPlayer.player.getHealth() - (SingletonPlayer.player.getHealth() % 10) + 10;\r\n                if (tempHealth >= 0) glBindTexture(GL_TEXTURE_2D, textureMap.get(tempHealth + \"hp\"));\r\n                else if (SingletonPlayer.player.getHealth() <= 0) glBindTexture(GL_TEXTURE_2D, textureMap.get(\"0hp\"));\r\n                createQuadTexture(0, 0, 103, 18);\r\n\r\n                // Щит с броней\r\n                int tempArmor = SingletonPlayer.player.getArmor() % 5 == 0 ? SingletonPlayer.player.getArmor() : SingletonPlayer.player.getArmor() - (SingletonPlayer.player.getArmor() % 5);\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(tempArmor + \"armor\"));\r\n                createQuadTexture(0, 20, 60, 40);\r\n\r\n                // Количество монет\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"coin_0\" + coinGUI.getAnimationTime()));\r\n                createQuadTexture(0, 42, 11, 54);\r\n                int tempCoin = SingletonPlayer.player.getMoney();\r\n                int tempX0 = 13 + (getCountsOfDigits(SingletonPlayer.player.getMoney()) * 7) - 7, tempX1 = 13 + (getCountsOfDigits(SingletonPlayer.player.getMoney()) * 7), tempY0 = 44, tempY1 = 54;\r\n                for (int i = 0; i < getCountsOfDigits(SingletonPlayer.player.getMoney()); i++) {\r\n                    switch (tempCoin % 10) {\r\n                        case 0:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 1:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 2:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 3:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 4:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 5:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 6:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 7:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 8:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 9:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n\r\n                    }\r\n                    tempCoin = tempCoin / 10;\r\n                    tempX0 -= 7;\r\n                    tempX1 -= 7;\r\n                }\r\n\r\n                // Количество ключей\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(\"keyGold\"));\r\n                createQuadTexture(0, 55, 16, 71);\r\n                int tempKeys = SingletonPlayer.player.getKeys();\r\n                tempX0 = 16 + (getCountsOfDigits(SingletonPlayer.player.getKeys()) * 7) - 7;\r\n                tempX1 = 16 + (getCountsOfDigits(SingletonPlayer.player.getKeys()) * 7);\r\n                tempY0 = 60;\r\n                tempY1 = 70;\r\n                for (int i = 0; i < getCountsOfDigits(SingletonPlayer.player.getKeys()); i++) {\r\n                    switch (tempKeys % 10) {\r\n                        case 0:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_0\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 1:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_1\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 2:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_2\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 3:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_3\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 4:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_4\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 5:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_5\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 6:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_6\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 7:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_7\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 8:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_8\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n                        case 9:\r\n                            glBindTexture(GL_TEXTURE_2D, textureMap.get(\"number_9\"));\r\n                            createQuadTexture(tempX0, tempY0, tempX1, tempY1);\r\n                            break;\r\n\r\n                    }\r\n                    tempKeys = tempKeys / 10;\r\n                    tempX0 -= 7;\r\n                    tempX1 -= 7;\r\n                }\r\n            }\r\n\r\n            // Отрисовка экипировки и анимации\r\n            SingletonPlayer.player.update(window, level);\r\n            glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getBodyAnimation()));\r\n            createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            if (!SingletonPlayer.player.getFeetTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getFeetAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getLegsTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getLegsAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getTorsoTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getTorsoAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getOverTorsoTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getOverTorsoAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getShouldersTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getShouldersAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getBeltTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getBeltAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getHeadTexture().equals(\"nothing\")) {\r\n//                System.out.println(SingletonPlayer.player.getHeadAnimation());\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getHeadAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (!SingletonPlayer.player.getHandsTexture().equals(\"nothing\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getHandsAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX(), SingletonPlayer.player.getY(), SingletonPlayer.player.getX() + 64, SingletonPlayer.player.getY() + 64);\r\n            }\r\n            if (SingletonPlayer.player.isAttack() && !SingletonPlayer.player.isDead() && !level.equals(\"MainMenu\")) {\r\n                glBindTexture(GL_TEXTURE_2D, textureMap.get(SingletonPlayer.player.getWeaponAnimation()));\r\n                createQuadTexture(SingletonPlayer.player.getX() - SingletonPlayer.player.getWeapon().getMinX(), SingletonPlayer.player.getY() - SingletonPlayer.player.getWeapon().getMinY(),\r\n                        SingletonPlayer.player.getX() + SingletonPlayer.player.getWeapon().getMaxX(), SingletonPlayer.player.getY() + SingletonPlayer.player.getWeapon().getMaxY());\r\n            }\r\n\r\n            // Отрисовка второстепенного меню\r\n            if (!level.equals(\"MainMenu\") && SingletonPlayer.player.isScrollMenu()) {\r\n                if (level.equals(\"Town\")) {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"scrollMenu_\" + SingletonPlayer.player.getMenuChoice())); // Фон второстепенного меню\r\n                    createQuadTexture(SingletonPlayer.player.getForPlacingCamera(), 0, SingletonPlayer.player.getForPlacingCamera() + 640, 360);\r\n                }\r\n                else {\r\n                    glBindTexture(GL_TEXTURE_2D, textureMap.get(\"scrollMenu_\" + SingletonPlayer.player.getMenuChoice())); // Фон второстепенного меню\r\n                    createQuadTexture(0, 0, 640, 360);\r\n                }\r\n            }\r\n\r\n            glfwPollEvents();\r\n            glfwSwapBuffers(window);\r\n        }\r\n    }\r\n\r\n    private void createQuadTexture(int xMin, int yMin, int xMax, int yMax) {\r\n        glBegin(GL_QUADS);\r\n        glTexCoord2d(0, 0);\r\n        glVertex2f(xMin, yMin);\r\n        glTexCoord2d(1, 0);\r\n        glVertex2f(xMax, yMin);\r\n        glTexCoord2d(1, 1);\r\n        glVertex2f(xMax, yMax);\r\n        glTexCoord2d(0, 1);\r\n        glVertex2f(xMin, yMax);\r\n        glEnd();\r\n    }\r\n\r\n    public static int getCountsOfDigits(long number) {\r\n        return (number == 0) ? 1 : (int) Math.ceil(Math.log10(Math.abs(number) + 0.5));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Window.java	(revision cb083484c6fe6b906aed841b0ba31df6c5f39743)
+++ src/Window.java	(date 1598797188306)
@@ -47,13 +47,17 @@
     boolean key_E_Pressed = false;
     boolean forMainMenu = true;
     private boolean firstLevelMobSpawning, secondLevelMobSpawning, fourthLevelMobSpawning = false;
+    private boolean firstLevelMobSpawningStopped, secondLevelMobSpawningStopped, fourthLevelMobSpawningStopped = false;
     private int time = 0;
     private Timer mobTimer = new Timer();
     private TimerTask mobSpawnTask = new TimerTask() {
         @Override
         public void run() {
             time++;
-            if (time == 5) stopMobSpawn();
+            if (time == 5) {
+                firstLevelMobSpawningStopped = true;
+                stopMobSpawn();
+            }
             SingletonMobs.mobList.add(new Slime(470, 288, 1, 50, 0, 5));
         }
     };
@@ -67,13 +71,26 @@
             @Override
             public void run() {
                 time++;
+                if (level.equals("FirstLevel")) {
+                    SingletonMobs.mobList.add(new Slime(470, 288, 1, 50, 0, 5));
+                    if (time == 5) {
+                        firstLevelMobSpawningStopped = true;
+                        stopMobSpawn();
+                    }
+                }
                 if (level.equals("SecondLevel")) {
                     SingletonMobs.mobList.add(new Spider(477, 284, 1, 60, 0, 10));
-                    if (time == 3) stopMobSpawn();
+                    if (time == 3) {
+                        secondLevelMobSpawningStopped = true;
+                        stopMobSpawn();
+                    }
                 }
                 else if (level.equals("ForthLevel")) {
                     SingletonMobs.mobList.add(new Imp(477, 284, 1, 100, 0, 50));
-                    if (time == 1) stopMobSpawn();
+                    if (time == 1) {
+                        fourthLevelMobSpawningStopped = true;
+                        stopMobSpawn();
+                    }
                 }
             }
         };
@@ -159,7 +176,7 @@
         for(int i = 0; i < Storage.aabbString.length; i++)
             aabbMap.put(Storage.aabbString[i], new AABB());
 
-        // Переходы м/у уровнями
+        // Единичная инициализация переходов м/у уровнями
         aabbMap.get("entranceToFirstLevel").update(0, 190, 2, 286);
         aabbMap.get("entranceToSecondLevel").update(626, 237, 640, 335);
         aabbMap.get("entranceToThirdLevel").update(197, 134, 237, 145);
@@ -168,52 +185,14 @@
         aabbMap.get("entranceFromForthToSecondLevel").update(199, 132, 236, 141);
         aabbMap.get("entranceFromTavernToTown").update(224,316,255,318);
         aabbMap.get("entranceFromForgeToTown").update(384,316,415,318);
+        aabbMap.get("entranceFromFourthLevelToTown").update(292,336,338,346);
         aabbMap.get("toBuyBeer").update(224, 240, 255, 255);
 
-        // Добавление объектов на первый уровень
-        firstLevelObjectList.add(new Furniture("barrelOpened", 118, 135));
-        firstLevelObjectList.add(new Furniture("bagMedium", 137, 134));
-        firstLevelObjectList.add(new Furniture("boxOpened", 308, 129));
-        firstLevelObjectList.add(new Furniture("chair1", 400, 173));
-        firstLevelObjectList.add(new Furniture("chair3", 432, 227));
-        firstLevelObjectList.add(new Furniture("table1", 426, 163));
-        firstLevelObjectList.add(new Furniture("littleBag", 426, 160));
-        firstLevelObjectList.add(new Furniture("bookRed", 434, 186));
-        firstLevelObjectList.add(new Furniture("bones", 113, 173));
-        firstLevelObjectList.add(new Furniture("trash", 462, 173));
-        firstLevelObjectList.add(new Gate("verticalGate", 628, 147));
-        firstLevelObjectList.add(new Gate("verticalGate", 628, 243));
-        firstLevelObjectList.add(new Weapon("stick", "thrust", 10, true, true, 150, 150, 342, 342, new AABB(231, 231, 259, 259)));
-        firstLevelObjectList.add(new Armor("chain_helmet", "head", 4, true, true, 300, 150, 364, 214, 10));
-
-        // Добавление объектов на третий уровень
-        thirdLevelObjectList.add(new Chest("chest", false, true, 279, 215, 279 + 32, 215 + 32, new AABB(279, 215, 279 + 32, 215 + 32)));
-        thirdLevelObjectList.add(new Box("box", false, true, 369, 127, 369 + 24, 127 + 30, new AABB(369, 127, 369 + 24, 127 + 30)));
-        thirdLevelObjectList.add(new Box("box", false, true, 451, 153, 451 + 24, 153 + 30, new AABB(451, 153, 451 + 24, 153 + 30)));
-        thirdLevelObjectList.add(new Box("box", false, true, 414, 246, 414 + 24, 246 + 30, new AABB(414, 246, 414 + 24, 246 + 30)));
-        thirdLevelObjectList.add(new Barrel("barrel", false, true, 150, 234, 150 + 20, 234 + 30, new AABB(150, 234, 150 + 20, 234 + 30)));
-        thirdLevelObjectList.add(new Barrel("barrel", false, true, 180, 260, 180 + 20, 260 + 30, new AABB(180, 260, 180 + 20, 260 + 30)));
-        thirdLevelObjectList.add(new Barrel("barrel", false, true, 110, 278, 110 + 20, 278 + 30, new AABB(110, 278, 110 + 20, 278 + 30)));
-        thirdLevelObjectList.add(new Furniture("bagBig", 171, 131));
-        thirdLevelObjectList.add(new Furniture("bagMedium", 199, 133));
-        thirdLevelObjectList.add(new Furniture("bagSmall", 113, 208));
-        thirdLevelObjectList.add(new Furniture("altar0", 463, 164));
-        thirdLevelObjectList.add(new Furniture("altar1", 129, 168));
-
-        // Добавление объектов на четвертый уровень
-        forthLevelObjectList.add(new Furniture("gate2", 292, 336));
-        forthLevelObjectList.add(new Furniture("trash", 118, 288));
-        forthLevelObjectList.get(forthLevelObjectList.size() - 1).setNoclip(true);
-        forthLevelObjectList.add(new Furniture("bones", 466, 163));
-        forthLevelObjectList.get(forthLevelObjectList.size() - 1).setNoclip(true);
-        forthLevelObjectList.add(new Furniture("water", 466, 163));
-        forthLevelObjectList.get(forthLevelObjectList.size() - 1).setNoclip(true);
-
+        addAllObjects();
         shop = new Shop();
         waiter = new Waiter(168, 136, 1);
         blacksmith = new Blacksmith(176, 126, 1);
         SingletonMobs.mobList.add(SingletonPlayer.player);
-        SingletonMobs.mobList.add(new Slime(470, 288, 1, 50, 0, 5));
 
         // Обработка единичного нажатий клавиш
         glfwSetKeyCallback(window, (window, key, scancode, action, mods) -> {
@@ -723,7 +702,7 @@
                         }
                         else if (object instanceof Gate) {
                             Gate gate = (Gate) object;
-                            if (canChangeLevel && gate.getMinY() == 243) {
+                            if (canChangeLevel && firstLevelMobSpawningStopped && gate.getMinY() == 243) {
                                 gate.setFinalY(147);
                                 gate.update();
                             }
@@ -804,15 +783,6 @@
                         }
                     }
 
-                    // Проверка возможности перехода на другой уровень
-                    for (Mob mob : SingletonMobs.mobList) {
-                        if (!mob.isDead() && !(mob instanceof Player)) {
-                            canChangeLevel = false;
-                            break;
-                        }
-                        canChangeLevel = true;
-                    }
-
                     // Проверка всех мобов на столкновение со стенами, объектами. Столкновения объектов с объектами
                     for (int i = 0; i < SingletonMobs.mobList.size(); i++) {
                         Mob mob = SingletonMobs.mobList.get(i);
@@ -877,6 +847,17 @@
                         }
                     }
 
+                    // Проверка возможности перехода на другой уровень
+                    if (firstLevelMobSpawningStopped) {
+                        for (Mob mob : SingletonMobs.mobList) {
+                            if (!mob.isDead() && !(mob instanceof Player)) {
+                                canChangeLevel = false;
+                                break;
+                            }
+                            canChangeLevel = true;
+                        }
+                    }
+
                     // Проверка перехода на второй уровень
                     if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get("entranceToSecondLevel"))) {
                         if (canChangeLevel) {
@@ -887,7 +868,7 @@
                                 aabbMap.get("wall" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],
                                         Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);
                             }
-                            SingletonPlayer.player.setX(2 - 14);
+                            SingletonPlayer.player.setX(-12);
                             SingletonPlayer.player.setY(225);
                             level = "SecondLevel";
                         }
@@ -1236,22 +1217,62 @@
                         }
                     }
 
+                    // Проверка возможности перехода на другой уровень
+                    for (Mob mob : SingletonMobs.mobList) {
+                        if (!mob.isDead() && !(mob instanceof Player)) {
+                            canChangeLevel = false;
+                            break;
+                        }
+                        canChangeLevel = true;
+                    }
+
                     // Проверка перехода на второй уровень
                     if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get("entranceFromForthToSecondLevel"))) {
-                        for (Mob mob : SingletonMobs.mobList) {
-                            if (!mob.isDead() && !(mob instanceof Player));
-                        }
+                        if (canChangeLevel) {
+                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов
 
-                        // Обновление хитбоксов стен для второго уровня
-                        for (int i = 0, j = 0; i < 7; i++, j+=4) {
-                            aabbMap.get("wall" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],
-                                    Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);
-                        }
-                        SingletonPlayer.player.setX(240);
-                        SingletonPlayer.player.setY(120);
-                        SingletonPlayer.player.setMoveDirection("down");
-                        level = "SecondLevel";
+                            // Обновление хитбоксов стен для второго уровня
+                            for (int i = 0, j = 0; i < 7; i++, j+=4) {
+                                aabbMap.get("wall" + i).update(Storage.secondLevelWalls[j], Storage.secondLevelWalls[j + 1],
+                                        Storage.secondLevelWalls[j + 2], Storage.secondLevelWalls[j + 3]);
+                            }
+                            SingletonPlayer.player.setX(240);
+                            SingletonPlayer.player.setY(120);
+                            SingletonPlayer.player.setMoveDirection("down");
+                            level = "SecondLevel";
+                        }
                     }
+                    // Проверка перехода в город
+                    if (AABB.AABBvsAABB(SingletonPlayer.player.getCollisionBox(), aabbMap.get("entranceFromFourthLevelToTown"))) {
+                        if (canChangeLevel) {
+                            SingletonMobs.mobList.removeIf(mob -> !(mob instanceof Player)); // Удаление трупов
+
+                            // Обновление хитбоксов стен для города
+                            for (int i = 0, j = 0; i < 7; i++, j+=4) {
+                                aabbMap.get("wall" + i).update(Storage.townLevelWalls[j], Storage.townLevelWalls[j + 1],
+                                        Storage.townLevelWalls[j + 2], Storage.townLevelWalls[j + 3]);
+                            }
+
+                            // Обновление всех объектов
+                            firstLevelObjectList.clear();
+                            secondLevelObjectList.clear();
+                            thirdLevelObjectList.clear();
+                            forthLevelObjectList.clear();
+                            addAllObjects();
+                            shopObjectList.clear();
+                            shop = new Shop();
+                            firstLevelMobSpawning = secondLevelMobSpawning = fourthLevelMobSpawning = false;
+                            firstLevelMobSpawningStopped = secondLevelMobSpawningStopped = fourthLevelMobSpawningStopped = false;
+                            glTranslated(-689, 0, 0);
+                            backgroundMusic.stop(soundMap.get("dungeonAmbient1"));
+                            SingletonPlayer.player.setForPlacingCamera(689);
+                            SingletonPlayer.player.setX(979);
+                            SingletonPlayer.player.setY(192);
+                            SingletonPlayer.player.setSpeed(1);
+                            SingletonPlayer.player.setMoveDirection("left");
+                            level = "Town";
+                        }
+                    }
                     break;
                 }
             }
@@ -1441,6 +1462,42 @@
         }
     }
 
+    private void addAllObjects() {
+        // Добавление объектов на первый уровень
+        firstLevelObjectList.add(new Furniture("barrelOpened", 118, 135));
+        firstLevelObjectList.add(new Furniture("bagMedium", 137, 134));
+        firstLevelObjectList.add(new Furniture("boxOpened", 308, 129));
+        firstLevelObjectList.add(new Furniture("chair1", 400, 173));
+        firstLevelObjectList.add(new Furniture("chair3", 432, 227));
+        firstLevelObjectList.add(new Furniture("table1", 426, 163));
+        firstLevelObjectList.add(new Furniture("littleBag", 426, 160));
+        firstLevelObjectList.add(new Furniture("bookRed", 434, 186));
+        firstLevelObjectList.add(new Furniture("bones", 113, 173));
+        firstLevelObjectList.add(new Furniture("trash", 462, 173));
+        firstLevelObjectList.add(new Gate("verticalGate", 628, 147));
+        firstLevelObjectList.add(new Gate("verticalGate", 628, 243));
+
+        // Добавление объектов на третий уровень
+        thirdLevelObjectList.add(new Chest("chest", false, true, 279, 215, 279 + 32, 215 + 32, new AABB(279, 215, 279 + 32, 215 + 32)));
+        thirdLevelObjectList.add(new Box("box", false, true, 369, 127, 369 + 24, 127 + 30, new AABB(369, 127, 369 + 24, 127 + 30)));
+        thirdLevelObjectList.add(new Box("box", false, true, 451, 153, 451 + 24, 153 + 30, new AABB(451, 153, 451 + 24, 153 + 30)));
+        thirdLevelObjectList.add(new Box("box", false, true, 414, 246, 414 + 24, 246 + 30, new AABB(414, 246, 414 + 24, 246 + 30)));
+        thirdLevelObjectList.add(new Barrel("barrel", false, true, 150, 234, 150 + 20, 234 + 30, new AABB(150, 234, 150 + 20, 234 + 30)));
+        thirdLevelObjectList.add(new Barrel("barrel", false, true, 180, 260, 180 + 20, 260 + 30, new AABB(180, 260, 180 + 20, 260 + 30)));
+        thirdLevelObjectList.add(new Barrel("barrel", false, true, 110, 278, 110 + 20, 278 + 30, new AABB(110, 278, 110 + 20, 278 + 30)));
+        thirdLevelObjectList.add(new Furniture("bagBig", 171, 131));
+        thirdLevelObjectList.add(new Furniture("bagMedium", 199, 133));
+        thirdLevelObjectList.add(new Furniture("bagSmall", 113, 208));
+        thirdLevelObjectList.add(new Furniture("altar0", 463, 164));
+        thirdLevelObjectList.add(new Furniture("altar1", 129, 168));
+
+        // Добавление объектов на четвертый уровень
+        forthLevelObjectList.add(new Furniture("gate2", 292, 336));
+        forthLevelObjectList.add(new Furniture("trash", 118, 288));
+        forthLevelObjectList.add(new Furniture("bones", 466, 163));
+        forthLevelObjectList.add(new Furniture("water", 466, 163));
+    }
+
     private void createQuadTexture(int xMin, int yMin, int xMax, int yMax) {
         glBegin(GL_QUADS);
         glTexCoord2d(0, 0);
Index: src/content/Storage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package content;\r\n\r\npublic class Storage {\r\n    public static final int[] firstLevelWalls = {\r\n            108, 128, 495, 140, // wall0\r\n            496, 143, 498, 232, // wall1\r\n            499, 232, 639, 236, // wall2\r\n            108, 339, 640, 359, // wall3\r\n            0, 45, 107, 338, // wall4\r\n            0, 0, 0, 0, // wall5\r\n            0, 0, 0, 0 // wall6\r\n    };\r\n\r\n    public static final int[] secondLevelWalls = {\r\n            0, 182, 94, 188, // wall0\r\n            92, 140, 96, 184, // wall1\r\n            98, 134, 526, 140, // wall2\r\n            529, 143, 534, 334, // wall3\r\n            97, 335, 528, 340, // wall4\r\n            92, 290, 96, 334, // wall5\r\n            0, 287, 92, 291 // wall6\r\n    };\r\n\r\n    public static final int[] thirdLevelWalls = {\r\n            96, 135, 528, 141, // wall0\r\n            528, 147, 534, 339, // wall1\r\n            96, 339, 528, 342, // wall2\r\n            90, 141, 96, 336, // wall3\r\n            0, 0, 0, 0, // wall4\r\n            0, 0, 0, 0, // wall5\r\n            0, 0, 0, 0 // wall6\r\n    };\r\n\r\n    public static final int[] fourthLevelWalls = {\r\n            96, 135, 528, 141, // wall0\r\n            528, 147, 534, 339, // wall1\r\n            96, 339, 528, 342, // wall2\r\n            90, 141, 96, 336, // wall3\r\n            0, 0, 0, 0, // wall4\r\n            0, 0, 0, 0, // wall5\r\n            0, 0, 0, 0 // wall6\r\n    };\r\n\r\n    public static final int[] townLevelWalls = {\r\n            0, 0, 0, 0, // wall0\r\n            0, 0, 0, 0, // wall1\r\n            0, 0, 0, 0, // wall2\r\n            0, 0, 0, 0, // wall3\r\n            0, 0, 0, 0, // wall4\r\n            0, 0, 0, 0, // wall5\r\n            0, 0, 0, 0 // wall6\r\n    };\r\n\r\n    public static final int[] tavernLevelWalls = {\r\n            189, 279, 223, 280, // wall0\r\n            184, 239, 188, 278, // wall1\r\n            189, 237, 447, 240, // wall2\r\n            448, 242, 451, 277, // wall3\r\n            257, 279, 448, 273, // wall4\r\n            256, 280, 261, 318, // wall5\r\n            222, 280, 224, 318 // wall6\r\n    };\r\n\r\n    public static final int[] forgeLevelWalls = {\r\n            382, 279, 383, 317, // wall0\r\n            342, 277, 381, 278, // wall1\r\n            340, 239, 341, 278, // wall2\r\n            342, 230, 451, 231, // wall3\r\n            452, 239, 458, 276, // wall4\r\n            418, 277, 451, 278, // wall5\r\n            416, 279, 417, 317 // wall6\r\n    };\r\n\r\n    public static final String[] aabbString = {\r\n            \"wall0\", \"wall1\", \"wall2\", \"wall3\", \"wall4\", \"wall5\", \"wall6\",\r\n            \"entranceToFirstLevel\", \"entranceToSecondLevel\", \"entranceToThirdLevel\", \"entranceToForthLevel\", \"entranceFromThirdToSecondLevel\", \"entranceFromForthToSecondLevel\", \"entranceFromTavernToTown\", \"entranceFromForgeToTown\",\r\n            \"toBuyBeer\"\r\n    };\r\n\r\n    public static final String[] soundString = {\r\n            \"mainMenuTheme\", \"dungeonAmbient1\", \"doorOpen\", \"openChest\", \"openBoxBarrel\",\r\n            \"changingArmor\", \"pickedCoin\", \"pickedPotion\", \"drinkBeer\",\r\n    };\r\n\r\n    public static final String[] playerSoundString = {\r\n            \"stepStone\", \"stepWood\", \"swish\",\r\n            \"selectionClick\", \"openMenu\"\r\n    };\r\n\r\n    public static final String[] textureString = {\r\n            // Фон\r\n            \"level0\", \"level1\", \"level2\", \"level3\", \"MainMenu\",\r\n\r\n            // Интерфейс\r\n            \"0hp\", \"10hp\", \"20hp\", \"30hp\", \"40hp\", \"50hp\", \"60hp\", \"70hp\", \"80hp\", \"90hp\", \"100hp\",\r\n            \"0armor\", \"5armor\", \"10armor\", \"15armor\", \"20armor\", \"25armor\", \"30armor\",\r\n            \"you_Shall_Not_Pass\", \"enterTheDungeon_Yes\", \"enterTheDungeon_No\",\r\n            \"Press_enter\", \"Philistine\", \"price\", \"price2\",\r\n            \"emotion_question\", \"emotion_health\",\r\n            \"enemyHp0\", \"enemyHp10\", \"enemyHp20\", \"enemyHp30\", \"enemyHp40\", \"enemyHp50\", \"enemyHp60\", \"enemyHp70\", \"enemyHp80\", \"enemyHp90\", \"enemyHp100\",\r\n            \"coin_01\", \"coin_02\", \"coin_03\", \"coin_04\", \"coin_05\", \"coin_06\", \"coin_07\", \"coin_08\",\r\n            \"number_0\", \"number_1\", \"number_2\", \"number_3\", \"number_4\", \"number_5\", \"number_6\", \"number_7\", \"number_8\", \"number_9\", \"keyGold\",\r\n            \"scrollMenu_Resume\", \"scrollMenu_Options\", \"scrollMenu_Options_Controls\", \"scrollMenu_Options_Sounds\", \"scrollMenu_Controls\", \"scrollMenu_Exit\",\r\n\r\n            // Окружение\r\n            \"chestClosed\", \"chestOpened\",\r\n            \"boxClosed\", \"boxOpened\",\r\n            \"barrelClosed\", \"barrelOpened\",\r\n            \"bones\", \"trash\",\r\n            \"bookBlue\", \"bookGreen\", \"bookPink\", \"bookRed\",\r\n            \"chair0\", \"chair1\", \"chair2\", \"chair3\",\r\n            \"table0\", \"table1\",\r\n            \"bagSmall\", \"bagMedium\", \"bagBig\", \"littleBag\",\r\n            \"verticalGate\",\r\n            \"furnace_burn_01\", \"furnace_burn_02\", \"furnace_burn_03\",\r\n            \"torch_01\", \"torch_02\", \"torch_03\", \"torch_04\", \"torch_05\", \"torch_06\", \"torch_07\", \"torch_08\", \"torch_09\",\r\n            \"leather_hat\", \"robe_hood\", \"chain_helmet\", \"chain_hood\", \"plate_helmet\",\r\n            \"leather_shoulderPads\", \"plate_shoulderPads\",\r\n            \"shirt_white\", \"plate_armor\", \"robe_shirt_brown\", \"leather_armor\", \"chain_jacket_purple\", \"chain_armor\",\r\n            \"leather\", \"rope\",\r\n            \"plate_gloves\", \"leather_bracers\",\r\n            \"pants_greenish\", \"plate_pants\", \"robe_skirt\",\r\n            \"shoes_brown\", \"plate_shoes\",\r\n            \"longsword\", \"rapier\", \"long_spear\", \"spear\", \"stick\", \"potionRed\",\r\n            \"guard_stand_01\", \"guard_stand_02\", \"guard_stand_03\", \"guard_stand_04\", \"guard_stand_05\", \"guard_stand_06\", \"guard_stand_07\", \"guard_stand_08\", \"guard_stand_09\", \"guard_stand_010\",\r\n\r\n            // NPC\r\n            \"blacksmith_left_move_01\", \"blacksmith_left_move_02\", \"blacksmith_left_move_03\", \"blacksmith_left_move_04\", \"blacksmith_left_move_05\", \"blacksmith_left_move_06\", \"blacksmith_left_move_07\", \"blacksmith_left_move_08\", \"blacksmith_left_move_09\",\r\n            \"blacksmith_right_move_01\", \"blacksmith_right_move_02\", \"blacksmith_right_move_03\", \"blacksmith_right_move_04\", \"blacksmith_right_move_05\", \"blacksmith_right_move_06\", \"blacksmith_right_move_07\", \"blacksmith_right_move_08\", \"blacksmith_right_move_09\",\r\n            \"blacksmith_up_move_01\", \"blacksmith_up_move_02\", \"blacksmith_up_move_03\", \"blacksmith_up_move_04\", \"blacksmith_up_move_05\", \"blacksmith_up_move_06\", \"blacksmith_up_move_07\", \"blacksmith_up_move_08\", \"blacksmith_up_move_09\",\r\n            \"blacksmith_down_move_01\", \"blacksmith_down_move_02\", \"blacksmith_down_move_03\", \"blacksmith_down_move_04\", \"blacksmith_down_move_05\", \"blacksmith_down_move_06\", \"blacksmith_down_move_07\", \"blacksmith_down_move_08\", \"blacksmith_down_move_09\",\r\n\r\n            \"waiter_left_move_01\", \"waiter_left_move_02\", \"waiter_left_move_03\", \"waiter_left_move_04\", \"waiter_left_move_05\", \"waiter_left_move_06\", \"waiter_left_move_07\", \"waiter_left_move_08\", \"waiter_left_move_09\",\r\n            \"waiter_right_move_01\", \"waiter_right_move_02\", \"waiter_right_move_03\", \"waiter_right_move_04\", \"waiter_right_move_05\", \"waiter_right_move_06\", \"waiter_right_move_07\", \"waiter_right_move_08\", \"waiter_right_move_09\",\r\n            \"waiter_up_move_01\", \"waiter_up_move_02\", \"waiter_up_move_03\", \"waiter_up_move_04\", \"waiter_up_move_05\", \"waiter_up_move_06\", \"waiter_up_move_07\", \"waiter_up_move_08\", \"waiter_up_move_09\",\r\n            \"waiter_down_move_01\", \"waiter_down_move_02\", \"waiter_down_move_03\", \"waiter_down_move_04\", \"waiter_down_move_05\", \"waiter_down_move_06\", \"waiter_down_move_07\", \"waiter_down_move_08\", \"waiter_down_move_09\",\r\n\r\n            \"gentleman_brown\",\r\n\r\n            // Анимации игрока\r\n            \"player_stand_left\", \"player_stand_right\", \"player_stand_up\", \"player_stand_down\",\r\n            \"player_walk_left_01\", \"player_walk_left_02\", \"player_walk_left_03\", \"player_walk_left_04\", \"player_walk_left_05\", \"player_walk_left_06\", \"player_walk_left_07\", \"player_walk_left_08\", \"player_walk_left_09\",\r\n            \"player_walk_right_01\", \"player_walk_right_02\", \"player_walk_right_03\", \"player_walk_right_04\", \"player_walk_right_05\", \"player_walk_right_06\", \"player_walk_right_07\", \"player_walk_right_08\", \"player_walk_right_09\",\r\n            \"player_walk_up_01\", \"player_walk_up_02\", \"player_walk_up_03\", \"player_walk_up_04\", \"player_walk_up_05\", \"player_walk_up_06\", \"player_walk_up_07\", \"player_walk_up_08\", \"player_walk_up_09\",\r\n            \"player_walk_down_01\", \"player_walk_down_02\", \"player_walk_down_03\", \"player_walk_down_04\", \"player_walk_down_05\", \"player_walk_down_06\", \"player_walk_down_07\", \"player_walk_down_08\", \"player_walk_down_09\",\r\n\r\n            \"player_slash_right_01\", \"player_slash_right_02\", \"player_slash_right_03\", \"player_slash_right_04\", \"player_slash_right_05\", \"player_slash_right_06\",\r\n            \"player_slash_up_01\", \"player_slash_up_02\", \"player_slash_up_03\", \"player_slash_up_04\", \"player_slash_up_05\", \"player_slash_up_06\",\r\n            \"player_slash_left_01\", \"player_slash_left_02\", \"player_slash_left_03\", \"player_slash_left_04\", \"player_slash_left_05\", \"player_slash_left_06\",\r\n            \"player_slash_down_01\", \"player_slash_down_02\", \"player_slash_down_03\", \"player_slash_down_04\", \"player_slash_down_05\", \"player_slash_down_06\",\r\n\r\n            \"player_thrust_left_01\", \"player_thrust_left_02\", \"player_thrust_left_03\", \"player_thrust_left_04\", \"player_thrust_left_05\", \"player_thrust_left_06\", \"player_thrust_left_07\", \"player_thrust_left_08\",\r\n            \"player_thrust_right_01\", \"player_thrust_right_02\", \"player_thrust_right_03\", \"player_thrust_right_04\", \"player_thrust_right_05\", \"player_thrust_right_06\", \"player_thrust_right_07\", \"player_thrust_right_08\",\r\n            \"player_thrust_up_01\", \"player_thrust_up_02\", \"player_thrust_up_03\", \"player_thrust_up_04\", \"player_thrust_up_05\", \"player_thrust_up_06\", \"player_thrust_up_07\", \"player_thrust_up_08\",\r\n            \"player_thrust_down_01\", \"player_thrust_down_02\", \"player_thrust_down_03\", \"player_thrust_down_04\", \"player_thrust_down_05\", \"player_thrust_down_06\", \"player_thrust_down_07\", \"player_thrust_down_08\",\r\n\r\n            \"player_hurt_01\", \"player_hurt_02\", \"player_hurt_03\", \"player_hurt_04\", \"player_hurt_05\", \"player_hurt_06\",\r\n\r\n            // Оружие\r\n            \"weapon_longsword_left_slash_01\", \"weapon_longsword_left_slash_02\", \"weapon_longsword_left_slash_03\", \"weapon_longsword_left_slash_04\", \"weapon_longsword_left_slash_05\", \"weapon_longsword_left_slash_06\",\r\n            \"weapon_longsword_right_slash_01\", \"weapon_longsword_right_slash_02\", \"weapon_longsword_right_slash_03\", \"weapon_longsword_right_slash_04\", \"weapon_longsword_right_slash_05\", \"weapon_longsword_right_slash_06\",\r\n            \"weapon_longsword_up_slash_01\", \"weapon_longsword_up_slash_02\", \"weapon_longsword_up_slash_03\", \"weapon_longsword_up_slash_04\", \"weapon_longsword_up_slash_05\", \"weapon_longsword_up_slash_06\",\r\n            \"weapon_longsword_down_slash_01\", \"weapon_longsword_down_slash_02\", \"weapon_longsword_down_slash_03\", \"weapon_longsword_down_slash_04\", \"weapon_longsword_down_slash_05\", \"weapon_longsword_down_slash_06\",\r\n\r\n            \"weapon_rapier_right_slash_01\", \"weapon_rapier_right_slash_02\", \"weapon_rapier_right_slash_03\", \"weapon_rapier_right_slash_04\", \"weapon_rapier_right_slash_05\", \"weapon_rapier_right_slash_06\",\r\n            \"weapon_rapier_up_slash_01\", \"weapon_rapier_up_slash_02\", \"weapon_rapier_up_slash_03\", \"weapon_rapier_up_slash_04\", \"weapon_rapier_up_slash_05\", \"weapon_rapier_up_slash_06\",\r\n            \"weapon_rapier_down_slash_01\", \"weapon_rapier_down_slash_02\", \"weapon_rapier_down_slash_03\", \"weapon_rapier_down_slash_04\", \"weapon_rapier_down_slash_05\", \"weapon_rapier_down_slash_06\",\r\n            \"weapon_rapier_left_slash_01\", \"weapon_rapier_left_slash_02\", \"weapon_rapier_left_slash_03\", \"weapon_rapier_left_slash_04\", \"weapon_rapier_left_slash_05\", \"weapon_rapier_left_slash_06\",\r\n\r\n            \"weapon_long_spear_left_thrust_01\", \"weapon_long_spear_left_thrust_02\", \"weapon_long_spear_left_thrust_03\", \"weapon_long_spear_left_thrust_04\", \"weapon_long_spear_left_thrust_05\", \"weapon_long_spear_left_thrust_06\", \"weapon_long_spear_left_thrust_07\", \"weapon_long_spear_left_thrust_08\",\r\n            \"weapon_long_spear_right_thrust_01\", \"weapon_long_spear_right_thrust_02\", \"weapon_long_spear_right_thrust_03\", \"weapon_long_spear_right_thrust_04\", \"weapon_long_spear_right_thrust_05\", \"weapon_long_spear_right_thrust_06\", \"weapon_long_spear_right_thrust_07\", \"weapon_long_spear_right_thrust_08\",\r\n            \"weapon_long_spear_up_thrust_01\", \"weapon_long_spear_up_thrust_02\", \"weapon_long_spear_up_thrust_03\", \"weapon_long_spear_up_thrust_04\", \"weapon_long_spear_up_thrust_05\", \"weapon_long_spear_up_thrust_06\", \"weapon_long_spear_up_thrust_07\", \"weapon_long_spear_up_thrust_08\",\r\n            \"weapon_long_spear_down_thrust_01\", \"weapon_long_spear_down_thrust_02\", \"weapon_long_spear_down_thrust_03\", \"weapon_long_spear_down_thrust_04\", \"weapon_long_spear_down_thrust_05\", \"weapon_long_spear_down_thrust_06\", \"weapon_long_spear_down_thrust_07\", \"weapon_long_spear_down_thrust_08\",\r\n\r\n            \"weapon_stick_left_thrust_01\", \"weapon_stick_left_thrust_02\", \"weapon_stick_left_thrust_03\", \"weapon_stick_left_thrust_04\", \"weapon_stick_left_thrust_05\", \"weapon_stick_left_thrust_06\", \"weapon_stick_left_thrust_07\", \"weapon_stick_left_thrust_08\",\r\n            \"weapon_stick_right_thrust_01\", \"weapon_stick_right_thrust_02\", \"weapon_stick_right_thrust_03\", \"weapon_stick_right_thrust_04\", \"weapon_stick_right_thrust_05\", \"weapon_stick_right_thrust_06\", \"weapon_stick_right_thrust_07\", \"weapon_stick_right_thrust_08\",\r\n            \"weapon_stick_up_thrust_01\", \"weapon_stick_up_thrust_02\", \"weapon_stick_up_thrust_03\", \"weapon_stick_up_thrust_04\", \"weapon_stick_up_thrust_05\", \"weapon_stick_up_thrust_06\", \"weapon_stick_up_thrust_07\", \"weapon_stick_up_thrust_08\",\r\n            \"weapon_stick_down_thrust_01\", \"weapon_stick_down_thrust_02\", \"weapon_stick_down_thrust_03\", \"weapon_stick_down_thrust_04\", \"weapon_stick_down_thrust_05\", \"weapon_stick_down_thrust_06\", \"weapon_stick_down_thrust_07\", \"weapon_stick_down_thrust_08\",\r\n\r\n            // Одежда игрока\r\n            \"HEAD_hair_left_move_01\", \"HEAD_hair_left_move_02\", \"HEAD_hair_left_move_03\", \"HEAD_hair_left_move_04\", \"HEAD_hair_left_move_05\", \"HEAD_hair_left_move_06\", \"HEAD_hair_left_move_07\", \"HEAD_hair_left_move_08\", \"HEAD_hair_left_move_09\",\r\n            \"HEAD_hair_right_move_01\", \"HEAD_hair_right_move_02\", \"HEAD_hair_right_move_03\", \"HEAD_hair_right_move_04\", \"HEAD_hair_right_move_05\", \"HEAD_hair_right_move_06\", \"HEAD_hair_right_move_07\", \"HEAD_hair_right_move_08\", \"HEAD_hair_right_move_09\",\r\n            \"HEAD_hair_up_move_01\", \"HEAD_hair_up_move_02\", \"HEAD_hair_up_move_03\", \"HEAD_hair_up_move_04\", \"HEAD_hair_up_move_05\", \"HEAD_hair_up_move_06\", \"HEAD_hair_up_move_07\", \"HEAD_hair_up_move_08\", \"HEAD_hair_up_move_09\",\r\n            \"HEAD_hair_down_move_01\", \"HEAD_hair_down_move_02\", \"HEAD_hair_down_move_03\", \"HEAD_hair_down_move_04\", \"HEAD_hair_down_move_05\", \"HEAD_hair_down_move_06\", \"HEAD_hair_down_move_07\", \"HEAD_hair_down_move_08\", \"HEAD_hair_down_move_09\",\r\n\r\n            \"HEAD_hair_left_slash_01\", \"HEAD_hair_left_slash_02\", \"HEAD_hair_left_slash_03\", \"HEAD_hair_left_slash_04\", \"HEAD_hair_left_slash_05\", \"HEAD_hair_left_slash_06\",\r\n            \"HEAD_hair_right_slash_01\", \"HEAD_hair_right_slash_02\", \"HEAD_hair_right_slash_03\", \"HEAD_hair_right_slash_04\", \"HEAD_hair_right_slash_05\", \"HEAD_hair_right_slash_06\",\r\n            \"HEAD_hair_up_slash_01\", \"HEAD_hair_up_slash_02\", \"HEAD_hair_up_slash_03\", \"HEAD_hair_up_slash_04\", \"HEAD_hair_up_slash_05\", \"HEAD_hair_up_slash_06\",\r\n            \"HEAD_hair_down_slash_01\", \"HEAD_hair_down_slash_02\", \"HEAD_hair_down_slash_03\", \"HEAD_hair_down_slash_04\", \"HEAD_hair_down_slash_05\", \"HEAD_hair_down_slash_06\",\r\n\r\n            \"HEAD_hair_hurt_01\", \"HEAD_hair_hurt_02\", \"HEAD_hair_hurt_03\", \"HEAD_hair_hurt_04\", \"HEAD_hair_hurt_05\", \"HEAD_hair_hurt_06\",\r\n\r\n            \"HEAD_leather_hat_left_move_01\", \"HEAD_leather_hat_left_move_02\", \"HEAD_leather_hat_left_move_03\", \"HEAD_leather_hat_left_move_04\", \"HEAD_leather_hat_left_move_05\", \"HEAD_leather_hat_left_move_06\", \"HEAD_leather_hat_left_move_07\", \"HEAD_leather_hat_left_move_08\", \"HEAD_leather_hat_left_move_09\",\r\n            \"HEAD_leather_hat_right_move_01\", \"HEAD_leather_hat_right_move_02\", \"HEAD_leather_hat_right_move_03\", \"HEAD_leather_hat_right_move_04\", \"HEAD_leather_hat_right_move_05\", \"HEAD_leather_hat_right_move_06\", \"HEAD_leather_hat_right_move_07\", \"HEAD_leather_hat_right_move_08\", \"HEAD_leather_hat_right_move_09\",\r\n            \"HEAD_leather_hat_up_move_01\", \"HEAD_leather_hat_up_move_02\", \"HEAD_leather_hat_up_move_03\", \"HEAD_leather_hat_up_move_04\", \"HEAD_leather_hat_up_move_05\", \"HEAD_leather_hat_up_move_06\", \"HEAD_leather_hat_up_move_07\", \"HEAD_leather_hat_up_move_08\", \"HEAD_leather_hat_up_move_09\",\r\n            \"HEAD_leather_hat_down_move_01\", \"HEAD_leather_hat_down_move_02\", \"HEAD_leather_hat_down_move_03\", \"HEAD_leather_hat_down_move_04\", \"HEAD_leather_hat_down_move_05\", \"HEAD_leather_hat_down_move_06\", \"HEAD_leather_hat_down_move_07\", \"HEAD_leather_hat_down_move_08\", \"HEAD_leather_hat_down_move_09\",\r\n\r\n            \"HEAD_leather_hat_left_slash_01\", \"HEAD_leather_hat_left_slash_02\", \"HEAD_leather_hat_left_slash_03\", \"HEAD_leather_hat_left_slash_04\", \"HEAD_leather_hat_left_slash_05\", \"HEAD_leather_hat_left_slash_06\",\r\n            \"HEAD_leather_hat_right_slash_01\", \"HEAD_leather_hat_right_slash_02\", \"HEAD_leather_hat_right_slash_03\", \"HEAD_leather_hat_right_slash_04\", \"HEAD_leather_hat_right_slash_05\", \"HEAD_leather_hat_right_slash_06\",\r\n            \"HEAD_leather_hat_up_slash_01\", \"HEAD_leather_hat_up_slash_02\", \"HEAD_leather_hat_up_slash_03\", \"HEAD_leather_hat_up_slash_04\", \"HEAD_leather_hat_up_slash_05\", \"HEAD_leather_hat_up_slash_06\",\r\n            \"HEAD_leather_hat_down_slash_01\", \"HEAD_leather_hat_down_slash_02\", \"HEAD_leather_hat_down_slash_03\", \"HEAD_leather_hat_down_slash_04\", \"HEAD_leather_hat_down_slash_05\", \"HEAD_leather_hat_down_slash_06\",\r\n\r\n            \"HEAD_leather_hat_left_thrust_01\", \"HEAD_leather_hat_left_thrust_02\", \"HEAD_leather_hat_left_thrust_03\", \"HEAD_leather_hat_left_thrust_04\", \"HEAD_leather_hat_left_thrust_05\", \"HEAD_leather_hat_left_thrust_06\", \"HEAD_leather_hat_left_thrust_07\", \"HEAD_leather_hat_left_thrust_08\",\r\n            \"HEAD_leather_hat_right_thrust_01\", \"HEAD_leather_hat_right_thrust_02\", \"HEAD_leather_hat_right_thrust_03\", \"HEAD_leather_hat_right_thrust_04\", \"HEAD_leather_hat_right_thrust_05\", \"HEAD_leather_hat_right_thrust_06\", \"HEAD_leather_hat_right_thrust_07\", \"HEAD_leather_hat_right_thrust_08\",\r\n            \"HEAD_leather_hat_up_thrust_01\", \"HEAD_leather_hat_up_thrust_02\", \"HEAD_leather_hat_up_thrust_03\", \"HEAD_leather_hat_up_thrust_04\", \"HEAD_leather_hat_up_thrust_05\", \"HEAD_leather_hat_up_thrust_06\", \"HEAD_leather_hat_up_thrust_07\", \"HEAD_leather_hat_up_thrust_08\",\r\n            \"HEAD_leather_hat_down_thrust_01\", \"HEAD_leather_hat_down_thrust_02\", \"HEAD_leather_hat_down_thrust_03\", \"HEAD_leather_hat_down_thrust_04\", \"HEAD_leather_hat_down_thrust_05\", \"HEAD_leather_hat_down_thrust_06\", \"HEAD_leather_hat_down_thrust_07\", \"HEAD_leather_hat_down_thrust_08\",\r\n\r\n            \"HEAD_leather_hat_hurt_01\", \"HEAD_leather_hat_hurt_02\", \"HEAD_leather_hat_hurt_03\", \"HEAD_leather_hat_hurt_04\", \"HEAD_leather_hat_hurt_05\", \"HEAD_leather_hat_hurt_06\",\r\n\r\n            \"HEAD_robe_hood_left_move_01\", \"HEAD_robe_hood_left_move_02\", \"HEAD_robe_hood_left_move_03\", \"HEAD_robe_hood_left_move_04\", \"HEAD_robe_hood_left_move_05\", \"HEAD_robe_hood_left_move_06\", \"HEAD_robe_hood_left_move_07\", \"HEAD_robe_hood_left_move_08\", \"HEAD_robe_hood_left_move_09\",\r\n            \"HEAD_robe_hood_right_move_01\", \"HEAD_robe_hood_right_move_02\", \"HEAD_robe_hood_right_move_03\", \"HEAD_robe_hood_right_move_04\", \"HEAD_robe_hood_right_move_05\", \"HEAD_robe_hood_right_move_06\", \"HEAD_robe_hood_right_move_07\", \"HEAD_robe_hood_right_move_08\", \"HEAD_robe_hood_right_move_09\",\r\n            \"HEAD_robe_hood_up_move_01\", \"HEAD_robe_hood_up_move_02\", \"HEAD_robe_hood_up_move_03\", \"HEAD_robe_hood_up_move_04\", \"HEAD_robe_hood_up_move_05\", \"HEAD_robe_hood_up_move_06\", \"HEAD_robe_hood_up_move_07\", \"HEAD_robe_hood_up_move_08\", \"HEAD_robe_hood_up_move_09\",\r\n            \"HEAD_robe_hood_down_move_01\", \"HEAD_robe_hood_down_move_02\", \"HEAD_robe_hood_down_move_03\", \"HEAD_robe_hood_down_move_04\", \"HEAD_robe_hood_down_move_05\", \"HEAD_robe_hood_down_move_06\", \"HEAD_robe_hood_down_move_07\", \"HEAD_robe_hood_down_move_08\", \"HEAD_robe_hood_down_move_09\",\r\n\r\n            \"HEAD_robe_hood_left_slash_01\", \"HEAD_robe_hood_left_slash_02\", \"HEAD_robe_hood_left_slash_03\", \"HEAD_robe_hood_left_slash_04\", \"HEAD_robe_hood_left_slash_05\", \"HEAD_robe_hood_left_slash_06\",\r\n            \"HEAD_robe_hood_right_slash_01\", \"HEAD_robe_hood_right_slash_02\", \"HEAD_robe_hood_right_slash_03\", \"HEAD_robe_hood_right_slash_04\", \"HEAD_robe_hood_right_slash_05\", \"HEAD_robe_hood_right_slash_06\",\r\n            \"HEAD_robe_hood_up_slash_01\", \"HEAD_robe_hood_up_slash_02\", \"HEAD_robe_hood_up_slash_03\", \"HEAD_robe_hood_up_slash_04\", \"HEAD_robe_hood_up_slash_05\", \"HEAD_robe_hood_up_slash_06\",\r\n            \"HEAD_robe_hood_down_slash_01\", \"HEAD_robe_hood_down_slash_02\", \"HEAD_robe_hood_down_slash_03\", \"HEAD_robe_hood_down_slash_04\", \"HEAD_robe_hood_down_slash_05\", \"HEAD_robe_hood_down_slash_06\",\r\n\r\n            \"HEAD_robe_hood_left_thrust_01\", \"HEAD_robe_hood_left_thrust_02\", \"HEAD_robe_hood_left_thrust_03\", \"HEAD_robe_hood_left_thrust_04\", \"HEAD_robe_hood_left_thrust_05\", \"HEAD_robe_hood_left_thrust_06\", \"HEAD_robe_hood_left_thrust_07\", \"HEAD_robe_hood_left_thrust_08\",\r\n            \"HEAD_robe_hood_right_thrust_01\", \"HEAD_robe_hood_right_thrust_02\", \"HEAD_robe_hood_right_thrust_03\", \"HEAD_robe_hood_right_thrust_04\", \"HEAD_robe_hood_right_thrust_05\", \"HEAD_robe_hood_right_thrust_06\", \"HEAD_robe_hood_right_thrust_07\", \"HEAD_robe_hood_right_thrust_08\",\r\n            \"HEAD_robe_hood_up_thrust_01\", \"HEAD_robe_hood_up_thrust_02\", \"HEAD_robe_hood_up_thrust_03\", \"HEAD_robe_hood_up_thrust_04\", \"HEAD_robe_hood_up_thrust_05\", \"HEAD_robe_hood_up_thrust_06\", \"HEAD_robe_hood_up_thrust_07\", \"HEAD_robe_hood_up_thrust_08\",\r\n            \"HEAD_robe_hood_down_thrust_01\", \"HEAD_robe_hood_down_thrust_02\", \"HEAD_robe_hood_down_thrust_03\", \"HEAD_robe_hood_down_thrust_04\", \"HEAD_robe_hood_down_thrust_05\", \"HEAD_robe_hood_down_thrust_06\", \"HEAD_robe_hood_down_thrust_07\", \"HEAD_robe_hood_down_thrust_08\",\r\n\r\n            \"HEAD_robe_hood_hurt_01\", \"HEAD_robe_hood_hurt_02\", \"HEAD_robe_hood_hurt_03\", \"HEAD_robe_hood_hurt_04\", \"HEAD_robe_hood_hurt_05\", \"HEAD_robe_hood_hurt_06\",\r\n\r\n            \"HEAD_chain_helmet_left_move_01\", \"HEAD_chain_helmet_left_move_02\", \"HEAD_chain_helmet_left_move_03\", \"HEAD_chain_helmet_left_move_04\", \"HEAD_chain_helmet_left_move_05\", \"HEAD_chain_helmet_left_move_06\", \"HEAD_chain_helmet_left_move_07\", \"HEAD_chain_helmet_left_move_08\", \"HEAD_chain_helmet_left_move_09\",\r\n            \"HEAD_chain_helmet_right_move_01\", \"HEAD_chain_helmet_right_move_02\", \"HEAD_chain_helmet_right_move_03\", \"HEAD_chain_helmet_right_move_04\", \"HEAD_chain_helmet_right_move_05\", \"HEAD_chain_helmet_right_move_06\", \"HEAD_chain_helmet_right_move_07\", \"HEAD_chain_helmet_right_move_08\", \"HEAD_chain_helmet_right_move_09\",\r\n            \"HEAD_chain_helmet_up_move_01\", \"HEAD_chain_helmet_up_move_02\", \"HEAD_chain_helmet_up_move_03\", \"HEAD_chain_helmet_up_move_04\", \"HEAD_chain_helmet_up_move_05\", \"HEAD_chain_helmet_up_move_06\", \"HEAD_chain_helmet_up_move_07\", \"HEAD_chain_helmet_up_move_08\", \"HEAD_chain_helmet_up_move_09\",\r\n            \"HEAD_chain_helmet_down_move_01\", \"HEAD_chain_helmet_down_move_02\", \"HEAD_chain_helmet_down_move_03\", \"HEAD_chain_helmet_down_move_04\", \"HEAD_chain_helmet_down_move_05\", \"HEAD_chain_helmet_down_move_06\", \"HEAD_chain_helmet_down_move_07\", \"HEAD_chain_helmet_down_move_08\", \"HEAD_chain_helmet_down_move_09\",\r\n\r\n            \"HEAD_chain_helmet_left_slash_01\", \"HEAD_chain_helmet_left_slash_02\", \"HEAD_chain_helmet_left_slash_03\", \"HEAD_chain_helmet_left_slash_04\", \"HEAD_chain_helmet_left_slash_05\", \"HEAD_chain_helmet_left_slash_06\",\r\n            \"HEAD_chain_helmet_right_slash_01\", \"HEAD_chain_helmet_right_slash_02\", \"HEAD_chain_helmet_right_slash_03\", \"HEAD_chain_helmet_right_slash_04\", \"HEAD_chain_helmet_right_slash_05\", \"HEAD_chain_helmet_right_slash_06\",\r\n            \"HEAD_chain_helmet_up_slash_01\", \"HEAD_chain_helmet_up_slash_02\", \"HEAD_chain_helmet_up_slash_03\", \"HEAD_chain_helmet_up_slash_04\", \"HEAD_chain_helmet_up_slash_05\", \"HEAD_chain_helmet_up_slash_06\",\r\n            \"HEAD_chain_helmet_down_slash_01\", \"HEAD_chain_helmet_down_slash_02\", \"HEAD_chain_helmet_down_slash_03\", \"HEAD_chain_helmet_down_slash_04\", \"HEAD_chain_helmet_down_slash_05\", \"HEAD_chain_helmet_down_slash_06\",\r\n\r\n            \"HEAD_chain_helmet_left_thrust_01\", \"HEAD_chain_helmet_left_thrust_02\", \"HEAD_chain_helmet_left_thrust_03\", \"HEAD_chain_helmet_left_thrust_04\", \"HEAD_chain_helmet_left_thrust_05\", \"HEAD_chain_helmet_left_thrust_06\", \"HEAD_chain_helmet_left_thrust_07\", \"HEAD_chain_helmet_left_thrust_08\",\r\n            \"HEAD_chain_helmet_right_thrust_01\", \"HEAD_chain_helmet_right_thrust_02\", \"HEAD_chain_helmet_right_thrust_03\", \"HEAD_chain_helmet_right_thrust_04\", \"HEAD_chain_helmet_right_thrust_05\", \"HEAD_chain_helmet_right_thrust_06\", \"HEAD_chain_helmet_right_thrust_07\", \"HEAD_chain_helmet_right_thrust_08\",\r\n            \"HEAD_chain_helmet_up_thrust_01\", \"HEAD_chain_helmet_up_thrust_02\", \"HEAD_chain_helmet_up_thrust_03\", \"HEAD_chain_helmet_up_thrust_04\", \"HEAD_chain_helmet_up_thrust_05\", \"HEAD_chain_helmet_up_thrust_06\", \"HEAD_chain_helmet_up_thrust_07\", \"HEAD_chain_helmet_up_thrust_08\",\r\n            \"HEAD_chain_helmet_down_thrust_01\", \"HEAD_chain_helmet_down_thrust_02\", \"HEAD_chain_helmet_down_thrust_03\", \"HEAD_chain_helmet_down_thrust_04\", \"HEAD_chain_helmet_down_thrust_05\", \"HEAD_chain_helmet_down_thrust_06\", \"HEAD_chain_helmet_down_thrust_07\", \"HEAD_chain_helmet_down_thrust_08\",\r\n\r\n            \"HEAD_chain_helmet_hurt_01\", \"HEAD_chain_helmet_hurt_02\", \"HEAD_chain_helmet_hurt_03\", \"HEAD_chain_helmet_hurt_04\", \"HEAD_chain_helmet_hurt_05\", \"HEAD_chain_helmet_hurt_06\",\r\n\r\n            \"HEAD_chain_hood_left_move_01\", \"HEAD_chain_hood_left_move_02\", \"HEAD_chain_hood_left_move_03\", \"HEAD_chain_hood_left_move_04\", \"HEAD_chain_hood_left_move_05\", \"HEAD_chain_hood_left_move_06\", \"HEAD_chain_hood_left_move_07\", \"HEAD_chain_hood_left_move_08\", \"HEAD_chain_hood_left_move_09\",\r\n            \"HEAD_chain_hood_right_move_01\", \"HEAD_chain_hood_right_move_02\", \"HEAD_chain_hood_right_move_03\", \"HEAD_chain_hood_right_move_04\", \"HEAD_chain_hood_right_move_05\", \"HEAD_chain_hood_right_move_06\", \"HEAD_chain_hood_right_move_07\", \"HEAD_chain_hood_right_move_08\", \"HEAD_chain_hood_right_move_09\",\r\n            \"HEAD_chain_hood_up_move_01\", \"HEAD_chain_hood_up_move_02\", \"HEAD_chain_hood_up_move_03\", \"HEAD_chain_hood_up_move_04\", \"HEAD_chain_hood_up_move_05\", \"HEAD_chain_hood_up_move_06\", \"HEAD_chain_hood_up_move_07\", \"HEAD_chain_hood_up_move_08\", \"HEAD_chain_hood_up_move_09\",\r\n            \"HEAD_chain_hood_down_move_01\", \"HEAD_chain_hood_down_move_02\", \"HEAD_chain_hood_down_move_03\", \"HEAD_chain_hood_down_move_04\", \"HEAD_chain_hood_down_move_05\", \"HEAD_chain_hood_down_move_06\", \"HEAD_chain_hood_down_move_07\", \"HEAD_chain_hood_down_move_08\", \"HEAD_chain_hood_down_move_09\",\r\n\r\n            \"HEAD_chain_hood_left_slash_01\", \"HEAD_chain_hood_left_slash_02\", \"HEAD_chain_hood_left_slash_03\", \"HEAD_chain_hood_left_slash_04\", \"HEAD_chain_hood_left_slash_05\", \"HEAD_chain_hood_left_slash_06\",\r\n            \"HEAD_chain_hood_right_slash_01\", \"HEAD_chain_hood_right_slash_02\", \"HEAD_chain_hood_right_slash_03\", \"HEAD_chain_hood_right_slash_04\", \"HEAD_chain_hood_right_slash_05\", \"HEAD_chain_hood_right_slash_06\",\r\n            \"HEAD_chain_hood_up_slash_01\", \"HEAD_chain_hood_up_slash_02\", \"HEAD_chain_hood_up_slash_03\", \"HEAD_chain_hood_up_slash_04\", \"HEAD_chain_hood_up_slash_05\", \"HEAD_chain_hood_up_slash_06\",\r\n            \"HEAD_chain_hood_down_slash_01\", \"HEAD_chain_hood_down_slash_02\", \"HEAD_chain_hood_down_slash_03\", \"HEAD_chain_hood_down_slash_04\", \"HEAD_chain_hood_down_slash_05\", \"HEAD_chain_hood_down_slash_06\",\r\n\r\n            \"HEAD_chain_hood_left_thrust_01\", \"HEAD_chain_hood_left_thrust_02\", \"HEAD_chain_hood_left_thrust_03\", \"HEAD_chain_hood_left_thrust_04\", \"HEAD_chain_hood_left_thrust_05\", \"HEAD_chain_hood_left_thrust_06\", \"HEAD_chain_hood_left_thrust_07\", \"HEAD_chain_hood_left_thrust_08\",\r\n            \"HEAD_chain_hood_right_thrust_01\", \"HEAD_chain_hood_right_thrust_02\", \"HEAD_chain_hood_right_thrust_03\", \"HEAD_chain_hood_right_thrust_04\", \"HEAD_chain_hood_right_thrust_05\", \"HEAD_chain_hood_right_thrust_06\", \"HEAD_chain_hood_right_thrust_07\", \"HEAD_chain_hood_right_thrust_08\",\r\n            \"HEAD_chain_hood_up_thrust_01\", \"HEAD_chain_hood_up_thrust_02\", \"HEAD_chain_hood_up_thrust_03\", \"HEAD_chain_hood_up_thrust_04\", \"HEAD_chain_hood_up_thrust_05\", \"HEAD_chain_hood_up_thrust_06\", \"HEAD_chain_hood_up_thrust_07\", \"HEAD_chain_hood_up_thrust_08\",\r\n            \"HEAD_chain_hood_down_thrust_01\", \"HEAD_chain_hood_down_thrust_02\", \"HEAD_chain_hood_down_thrust_03\", \"HEAD_chain_hood_down_thrust_04\", \"HEAD_chain_hood_down_thrust_05\", \"HEAD_chain_hood_down_thrust_06\", \"HEAD_chain_hood_down_thrust_07\", \"HEAD_chain_hood_down_thrust_08\",\r\n\r\n            \"HEAD_chain_hood_hurt_01\", \"HEAD_chain_hood_hurt_02\", \"HEAD_chain_hood_hurt_03\", \"HEAD_chain_hood_hurt_04\", \"HEAD_chain_hood_hurt_05\", \"HEAD_chain_hood_hurt_06\",\r\n\r\n            \"tavern\", \"forge\",\r\n\r\n            \"HEAD_plate_helmet_left_move_01\", \"HEAD_plate_helmet_left_move_02\", \"HEAD_plate_helmet_left_move_03\", \"HEAD_plate_helmet_left_move_04\", \"HEAD_plate_helmet_left_move_05\", \"HEAD_plate_helmet_left_move_06\", \"HEAD_plate_helmet_left_move_07\", \"HEAD_plate_helmet_left_move_08\", \"HEAD_plate_helmet_left_move_09\",\r\n            \"HEAD_plate_helmet_right_move_01\", \"HEAD_plate_helmet_right_move_02\", \"HEAD_plate_helmet_right_move_03\", \"HEAD_plate_helmet_right_move_04\", \"HEAD_plate_helmet_right_move_05\", \"HEAD_plate_helmet_right_move_06\", \"HEAD_plate_helmet_right_move_07\", \"HEAD_plate_helmet_right_move_08\", \"HEAD_plate_helmet_right_move_09\",\r\n            \"HEAD_plate_helmet_up_move_01\", \"HEAD_plate_helmet_up_move_02\", \"HEAD_plate_helmet_up_move_03\", \"HEAD_plate_helmet_up_move_04\", \"HEAD_plate_helmet_up_move_05\", \"HEAD_plate_helmet_up_move_06\", \"HEAD_plate_helmet_up_move_07\", \"HEAD_plate_helmet_up_move_08\", \"HEAD_plate_helmet_up_move_09\",\r\n            \"HEAD_plate_helmet_down_move_01\", \"HEAD_plate_helmet_down_move_02\", \"HEAD_plate_helmet_down_move_03\", \"HEAD_plate_helmet_down_move_04\", \"HEAD_plate_helmet_down_move_05\", \"HEAD_plate_helmet_down_move_06\", \"HEAD_plate_helmet_down_move_07\", \"HEAD_plate_helmet_down_move_08\", \"HEAD_plate_helmet_down_move_09\",\r\n\r\n            \"HEAD_plate_helmet_left_slash_01\", \"HEAD_plate_helmet_left_slash_02\", \"HEAD_plate_helmet_left_slash_03\", \"HEAD_plate_helmet_left_slash_04\", \"HEAD_plate_helmet_left_slash_05\", \"HEAD_plate_helmet_left_slash_06\",\r\n            \"HEAD_plate_helmet_right_slash_01\", \"HEAD_plate_helmet_right_slash_02\", \"HEAD_plate_helmet_right_slash_03\", \"HEAD_plate_helmet_right_slash_04\", \"HEAD_plate_helmet_right_slash_05\", \"HEAD_plate_helmet_right_slash_06\",\r\n            \"HEAD_plate_helmet_up_slash_01\", \"HEAD_plate_helmet_up_slash_02\", \"HEAD_plate_helmet_up_slash_03\", \"HEAD_plate_helmet_up_slash_04\", \"HEAD_plate_helmet_up_slash_05\", \"HEAD_plate_helmet_up_slash_06\",\r\n            \"HEAD_plate_helmet_down_slash_01\", \"HEAD_plate_helmet_down_slash_02\", \"HEAD_plate_helmet_down_slash_03\", \"HEAD_plate_helmet_down_slash_04\", \"HEAD_plate_helmet_down_slash_05\", \"HEAD_plate_helmet_down_slash_06\",\r\n\r\n            \"HEAD_plate_helmet_left_thrust_01\", \"HEAD_plate_helmet_left_thrust_02\", \"HEAD_plate_helmet_left_thrust_03\", \"HEAD_plate_helmet_left_thrust_04\", \"HEAD_plate_helmet_left_thrust_05\", \"HEAD_plate_helmet_left_thrust_06\", \"HEAD_plate_helmet_left_thrust_07\", \"HEAD_plate_helmet_left_thrust_08\",\r\n            \"HEAD_plate_helmet_right_thrust_01\", \"HEAD_plate_helmet_right_thrust_02\", \"HEAD_plate_helmet_right_thrust_03\", \"HEAD_plate_helmet_right_thrust_04\", \"HEAD_plate_helmet_right_thrust_05\", \"HEAD_plate_helmet_right_thrust_06\", \"HEAD_plate_helmet_right_thrust_07\", \"HEAD_plate_helmet_right_thrust_08\",\r\n            \"HEAD_plate_helmet_up_thrust_01\", \"HEAD_plate_helmet_up_thrust_02\", \"HEAD_plate_helmet_up_thrust_03\", \"HEAD_plate_helmet_up_thrust_04\", \"HEAD_plate_helmet_up_thrust_05\", \"HEAD_plate_helmet_up_thrust_06\", \"HEAD_plate_helmet_up_thrust_07\", \"HEAD_plate_helmet_up_thrust_08\",\r\n            \"HEAD_plate_helmet_down_thrust_01\", \"HEAD_plate_helmet_down_thrust_02\", \"HEAD_plate_helmet_down_thrust_03\", \"HEAD_plate_helmet_down_thrust_04\", \"HEAD_plate_helmet_down_thrust_05\", \"HEAD_plate_helmet_down_thrust_06\", \"HEAD_plate_helmet_down_thrust_07\", \"HEAD_plate_helmet_down_thrust_08\",\r\n\r\n            \"HEAD_plate_helmet_hurt_01\", \"HEAD_plate_helmet_hurt_02\", \"HEAD_plate_helmet_hurt_03\", \"HEAD_plate_helmet_hurt_04\", \"HEAD_plate_helmet_hurt_05\", \"HEAD_plate_helmet_hurt_06\",\r\n\r\n            \"SHOULDERS_leather_shoulderPads_left_move_01\", \"SHOULDERS_leather_shoulderPads_left_move_02\", \"SHOULDERS_leather_shoulderPads_left_move_03\", \"SHOULDERS_leather_shoulderPads_left_move_04\", \"SHOULDERS_leather_shoulderPads_left_move_05\", \"SHOULDERS_leather_shoulderPads_left_move_06\", \"SHOULDERS_leather_shoulderPads_left_move_07\", \"SHOULDERS_leather_shoulderPads_left_move_08\", \"SHOULDERS_leather_shoulderPads_left_move_09\",\r\n            \"SHOULDERS_leather_shoulderPads_right_move_01\", \"SHOULDERS_leather_shoulderPads_right_move_02\", \"SHOULDERS_leather_shoulderPads_right_move_03\", \"SHOULDERS_leather_shoulderPads_right_move_04\", \"SHOULDERS_leather_shoulderPads_right_move_05\", \"SHOULDERS_leather_shoulderPads_right_move_06\", \"SHOULDERS_leather_shoulderPads_right_move_07\", \"SHOULDERS_leather_shoulderPads_right_move_08\", \"SHOULDERS_leather_shoulderPads_right_move_09\",\r\n            \"SHOULDERS_leather_shoulderPads_up_move_01\", \"SHOULDERS_leather_shoulderPads_up_move_02\", \"SHOULDERS_leather_shoulderPads_up_move_03\", \"SHOULDERS_leather_shoulderPads_up_move_04\", \"SHOULDERS_leather_shoulderPads_up_move_05\", \"SHOULDERS_leather_shoulderPads_up_move_06\", \"SHOULDERS_leather_shoulderPads_up_move_07\", \"SHOULDERS_leather_shoulderPads_up_move_08\", \"SHOULDERS_leather_shoulderPads_up_move_09\",\r\n            \"SHOULDERS_leather_shoulderPads_down_move_01\", \"SHOULDERS_leather_shoulderPads_down_move_02\", \"SHOULDERS_leather_shoulderPads_down_move_03\", \"SHOULDERS_leather_shoulderPads_down_move_04\", \"SHOULDERS_leather_shoulderPads_down_move_05\", \"SHOULDERS_leather_shoulderPads_down_move_06\", \"SHOULDERS_leather_shoulderPads_down_move_07\", \"SHOULDERS_leather_shoulderPads_down_move_08\", \"SHOULDERS_leather_shoulderPads_down_move_09\",\r\n\r\n            \"SHOULDERS_leather_shoulderPads_left_slash_01\", \"SHOULDERS_leather_shoulderPads_left_slash_02\", \"SHOULDERS_leather_shoulderPads_left_slash_03\", \"SHOULDERS_leather_shoulderPads_left_slash_04\", \"SHOULDERS_leather_shoulderPads_left_slash_05\", \"SHOULDERS_leather_shoulderPads_left_slash_06\",\r\n            \"SHOULDERS_leather_shoulderPads_right_slash_01\", \"SHOULDERS_leather_shoulderPads_right_slash_02\", \"SHOULDERS_leather_shoulderPads_right_slash_03\", \"SHOULDERS_leather_shoulderPads_right_slash_04\", \"SHOULDERS_leather_shoulderPads_right_slash_05\", \"SHOULDERS_leather_shoulderPads_right_slash_06\",\r\n            \"SHOULDERS_leather_shoulderPads_up_slash_01\", \"SHOULDERS_leather_shoulderPads_up_slash_02\", \"SHOULDERS_leather_shoulderPads_up_slash_03\", \"SHOULDERS_leather_shoulderPads_up_slash_04\", \"SHOULDERS_leather_shoulderPads_up_slash_05\", \"SHOULDERS_leather_shoulderPads_up_slash_06\",\r\n            \"SHOULDERS_leather_shoulderPads_down_slash_01\", \"SHOULDERS_leather_shoulderPads_down_slash_02\", \"SHOULDERS_leather_shoulderPads_down_slash_03\", \"SHOULDERS_leather_shoulderPads_down_slash_04\", \"SHOULDERS_leather_shoulderPads_down_slash_05\", \"SHOULDERS_leather_shoulderPads_down_slash_06\",\r\n\r\n            \"SHOULDERS_leather_shoulderPads_left_thrust_01\", \"SHOULDERS_leather_shoulderPads_left_thrust_02\", \"SHOULDERS_leather_shoulderPads_left_thrust_03\", \"SHOULDERS_leather_shoulderPads_left_thrust_04\", \"SHOULDERS_leather_shoulderPads_left_thrust_05\", \"SHOULDERS_leather_shoulderPads_left_thrust_06\", \"SHOULDERS_leather_shoulderPads_left_thrust_07\", \"SHOULDERS_leather_shoulderPads_left_thrust_08\",\r\n            \"SHOULDERS_leather_shoulderPads_right_thrust_01\", \"SHOULDERS_leather_shoulderPads_right_thrust_02\", \"SHOULDERS_leather_shoulderPads_right_thrust_03\", \"SHOULDERS_leather_shoulderPads_right_thrust_04\", \"SHOULDERS_leather_shoulderPads_right_thrust_05\", \"SHOULDERS_leather_shoulderPads_right_thrust_06\", \"SHOULDERS_leather_shoulderPads_right_thrust_07\", \"SHOULDERS_leather_shoulderPads_right_thrust_08\",\r\n            \"SHOULDERS_leather_shoulderPads_up_thrust_01\", \"SHOULDERS_leather_shoulderPads_up_thrust_02\", \"SHOULDERS_leather_shoulderPads_up_thrust_03\", \"SHOULDERS_leather_shoulderPads_up_thrust_04\", \"SHOULDERS_leather_shoulderPads_up_thrust_05\", \"SHOULDERS_leather_shoulderPads_up_thrust_06\", \"SHOULDERS_leather_shoulderPads_up_thrust_07\", \"SHOULDERS_leather_shoulderPads_up_thrust_08\",\r\n            \"SHOULDERS_leather_shoulderPads_down_thrust_01\", \"SHOULDERS_leather_shoulderPads_down_thrust_02\", \"SHOULDERS_leather_shoulderPads_down_thrust_03\", \"SHOULDERS_leather_shoulderPads_down_thrust_04\", \"SHOULDERS_leather_shoulderPads_down_thrust_05\", \"SHOULDERS_leather_shoulderPads_down_thrust_06\", \"SHOULDERS_leather_shoulderPads_down_thrust_07\", \"SHOULDERS_leather_shoulderPads_down_thrust_08\",\r\n\r\n            \"SHOULDERS_leather_shoulderPads_hurt_01\", \"SHOULDERS_leather_shoulderPads_hurt_02\", \"SHOULDERS_leather_shoulderPads_hurt_03\", \"SHOULDERS_leather_shoulderPads_hurt_04\", \"SHOULDERS_leather_shoulderPads_hurt_05\", \"SHOULDERS_leather_shoulderPads_hurt_06\",\r\n\r\n            \"SHOULDERS_plate_shoulderPads_left_move_01\", \"SHOULDERS_plate_shoulderPads_left_move_02\", \"SHOULDERS_plate_shoulderPads_left_move_03\", \"SHOULDERS_plate_shoulderPads_left_move_04\", \"SHOULDERS_plate_shoulderPads_left_move_05\", \"SHOULDERS_plate_shoulderPads_left_move_06\", \"SHOULDERS_plate_shoulderPads_left_move_07\", \"SHOULDERS_plate_shoulderPads_left_move_08\", \"SHOULDERS_plate_shoulderPads_left_move_09\",\r\n            \"SHOULDERS_plate_shoulderPads_right_move_01\", \"SHOULDERS_plate_shoulderPads_right_move_02\", \"SHOULDERS_plate_shoulderPads_right_move_03\", \"SHOULDERS_plate_shoulderPads_right_move_04\", \"SHOULDERS_plate_shoulderPads_right_move_05\", \"SHOULDERS_plate_shoulderPads_right_move_06\", \"SHOULDERS_plate_shoulderPads_right_move_07\", \"SHOULDERS_plate_shoulderPads_right_move_08\", \"SHOULDERS_plate_shoulderPads_right_move_09\",\r\n            \"SHOULDERS_plate_shoulderPads_up_move_01\", \"SHOULDERS_plate_shoulderPads_up_move_02\", \"SHOULDERS_plate_shoulderPads_up_move_03\", \"SHOULDERS_plate_shoulderPads_up_move_04\", \"SHOULDERS_plate_shoulderPads_up_move_05\", \"SHOULDERS_plate_shoulderPads_up_move_06\", \"SHOULDERS_plate_shoulderPads_up_move_07\", \"SHOULDERS_plate_shoulderPads_up_move_08\", \"SHOULDERS_plate_shoulderPads_up_move_09\",\r\n            \"SHOULDERS_plate_shoulderPads_down_move_01\", \"SHOULDERS_plate_shoulderPads_down_move_02\", \"SHOULDERS_plate_shoulderPads_down_move_03\", \"SHOULDERS_plate_shoulderPads_down_move_04\", \"SHOULDERS_plate_shoulderPads_down_move_05\", \"SHOULDERS_plate_shoulderPads_down_move_06\", \"SHOULDERS_plate_shoulderPads_down_move_07\", \"SHOULDERS_plate_shoulderPads_down_move_08\", \"SHOULDERS_plate_shoulderPads_down_move_09\",\r\n\r\n            \"SHOULDERS_plate_shoulderPads_left_slash_01\", \"SHOULDERS_plate_shoulderPads_left_slash_02\", \"SHOULDERS_plate_shoulderPads_left_slash_03\", \"SHOULDERS_plate_shoulderPads_left_slash_04\", \"SHOULDERS_plate_shoulderPads_left_slash_05\", \"SHOULDERS_plate_shoulderPads_left_slash_06\",\r\n            \"SHOULDERS_plate_shoulderPads_right_slash_01\", \"SHOULDERS_plate_shoulderPads_right_slash_02\", \"SHOULDERS_plate_shoulderPads_right_slash_03\", \"SHOULDERS_plate_shoulderPads_right_slash_04\", \"SHOULDERS_plate_shoulderPads_right_slash_05\", \"SHOULDERS_plate_shoulderPads_right_slash_06\",\r\n            \"SHOULDERS_plate_shoulderPads_up_slash_01\", \"SHOULDERS_plate_shoulderPads_up_slash_02\", \"SHOULDERS_plate_shoulderPads_up_slash_03\", \"SHOULDERS_plate_shoulderPads_up_slash_04\", \"SHOULDERS_plate_shoulderPads_up_slash_05\", \"SHOULDERS_plate_shoulderPads_up_slash_06\",\r\n            \"SHOULDERS_plate_shoulderPads_down_slash_01\", \"SHOULDERS_plate_shoulderPads_down_slash_02\", \"SHOULDERS_plate_shoulderPads_down_slash_03\", \"SHOULDERS_plate_shoulderPads_down_slash_04\", \"SHOULDERS_plate_shoulderPads_down_slash_05\", \"SHOULDERS_plate_shoulderPads_down_slash_06\",\r\n\r\n            \"SHOULDERS_plate_shoulderPads_left_thrust_01\", \"SHOULDERS_plate_shoulderPads_left_thrust_02\", \"SHOULDERS_plate_shoulderPads_left_thrust_03\", \"SHOULDERS_plate_shoulderPads_left_thrust_04\", \"SHOULDERS_plate_shoulderPads_left_thrust_05\", \"SHOULDERS_plate_shoulderPads_left_thrust_06\", \"SHOULDERS_plate_shoulderPads_left_thrust_07\", \"SHOULDERS_plate_shoulderPads_left_thrust_08\",\r\n            \"SHOULDERS_plate_shoulderPads_right_thrust_01\", \"SHOULDERS_plate_shoulderPads_right_thrust_02\", \"SHOULDERS_plate_shoulderPads_right_thrust_03\", \"SHOULDERS_plate_shoulderPads_right_thrust_04\", \"SHOULDERS_plate_shoulderPads_right_thrust_05\", \"SHOULDERS_plate_shoulderPads_right_thrust_06\", \"SHOULDERS_plate_shoulderPads_right_thrust_07\", \"SHOULDERS_plate_shoulderPads_right_thrust_08\",\r\n            \"SHOULDERS_plate_shoulderPads_up_thrust_01\", \"SHOULDERS_plate_shoulderPads_up_thrust_02\", \"SHOULDERS_plate_shoulderPads_up_thrust_03\", \"SHOULDERS_plate_shoulderPads_up_thrust_04\", \"SHOULDERS_plate_shoulderPads_up_thrust_05\", \"SHOULDERS_plate_shoulderPads_up_thrust_06\", \"SHOULDERS_plate_shoulderPads_up_thrust_07\", \"SHOULDERS_plate_shoulderPads_up_thrust_08\",\r\n            \"SHOULDERS_plate_shoulderPads_down_thrust_01\", \"SHOULDERS_plate_shoulderPads_down_thrust_02\", \"SHOULDERS_plate_shoulderPads_down_thrust_03\", \"SHOULDERS_plate_shoulderPads_down_thrust_04\", \"SHOULDERS_plate_shoulderPads_down_thrust_05\", \"SHOULDERS_plate_shoulderPads_down_thrust_06\", \"SHOULDERS_plate_shoulderPads_down_thrust_07\", \"SHOULDERS_plate_shoulderPads_down_thrust_08\",\r\n\r\n            \"SHOULDERS_plate_shoulderPads_hurt_01\", \"SHOULDERS_plate_shoulderPads_hurt_02\", \"SHOULDERS_plate_shoulderPads_hurt_03\", \"SHOULDERS_plate_shoulderPads_hurt_04\", \"SHOULDERS_plate_shoulderPads_hurt_05\", \"SHOULDERS_plate_shoulderPads_hurt_06\",\r\n\r\n            \"TORSO_shirt_white_left_move_01\", \"TORSO_shirt_white_left_move_02\", \"TORSO_shirt_white_left_move_03\", \"TORSO_shirt_white_left_move_04\", \"TORSO_shirt_white_left_move_05\", \"TORSO_shirt_white_left_move_06\", \"TORSO_shirt_white_left_move_07\", \"TORSO_shirt_white_left_move_08\", \"TORSO_shirt_white_left_move_09\",\r\n            \"TORSO_shirt_white_right_move_01\", \"TORSO_shirt_white_right_move_02\", \"TORSO_shirt_white_right_move_03\", \"TORSO_shirt_white_right_move_04\", \"TORSO_shirt_white_right_move_05\", \"TORSO_shirt_white_right_move_06\", \"TORSO_shirt_white_right_move_07\", \"TORSO_shirt_white_right_move_08\", \"TORSO_shirt_white_right_move_09\",\r\n            \"TORSO_shirt_white_up_move_01\", \"TORSO_shirt_white_up_move_02\", \"TORSO_shirt_white_up_move_03\", \"TORSO_shirt_white_up_move_04\", \"TORSO_shirt_white_up_move_05\", \"TORSO_shirt_white_up_move_06\", \"TORSO_shirt_white_up_move_07\", \"TORSO_shirt_white_up_move_08\", \"TORSO_shirt_white_up_move_09\",\r\n            \"TORSO_shirt_white_down_move_01\", \"TORSO_shirt_white_down_move_02\", \"TORSO_shirt_white_down_move_03\", \"TORSO_shirt_white_down_move_04\", \"TORSO_shirt_white_down_move_05\", \"TORSO_shirt_white_down_move_06\", \"TORSO_shirt_white_down_move_07\", \"TORSO_shirt_white_down_move_08\", \"TORSO_shirt_white_down_move_09\",\r\n\r\n            \"TORSO_shirt_white_left_slash_01\", \"TORSO_shirt_white_left_slash_02\", \"TORSO_shirt_white_left_slash_03\", \"TORSO_shirt_white_left_slash_04\", \"TORSO_shirt_white_left_slash_05\", \"TORSO_shirt_white_left_slash_06\",\r\n            \"TORSO_shirt_white_right_slash_01\", \"TORSO_shirt_white_right_slash_02\", \"TORSO_shirt_white_right_slash_03\", \"TORSO_shirt_white_right_slash_04\", \"TORSO_shirt_white_right_slash_05\", \"TORSO_shirt_white_right_slash_06\",\r\n            \"TORSO_shirt_white_up_slash_01\", \"TORSO_shirt_white_up_slash_02\", \"TORSO_shirt_white_up_slash_03\", \"TORSO_shirt_white_up_slash_04\", \"TORSO_shirt_white_up_slash_05\", \"TORSO_shirt_white_up_slash_06\",\r\n            \"TORSO_shirt_white_down_slash_01\", \"TORSO_shirt_white_down_slash_02\", \"TORSO_shirt_white_down_slash_03\", \"TORSO_shirt_white_down_slash_04\", \"TORSO_shirt_white_down_slash_05\", \"TORSO_shirt_white_down_slash_06\",\r\n\r\n            \"TORSO_shirt_white_left_thrust_01\", \"TORSO_shirt_white_left_thrust_02\", \"TORSO_shirt_white_left_thrust_03\", \"TORSO_shirt_white_left_thrust_04\", \"TORSO_shirt_white_left_thrust_05\", \"TORSO_shirt_white_left_thrust_06\", \"TORSO_shirt_white_left_thrust_07\", \"TORSO_shirt_white_left_thrust_08\",\r\n            \"TORSO_shirt_white_right_thrust_01\", \"TORSO_shirt_white_right_thrust_02\", \"TORSO_shirt_white_right_thrust_03\", \"TORSO_shirt_white_right_thrust_04\", \"TORSO_shirt_white_right_thrust_05\", \"TORSO_shirt_white_right_thrust_06\", \"TORSO_shirt_white_right_thrust_07\", \"TORSO_shirt_white_right_thrust_08\",\r\n            \"TORSO_shirt_white_up_thrust_01\", \"TORSO_shirt_white_up_thrust_02\", \"TORSO_shirt_white_up_thrust_03\", \"TORSO_shirt_white_up_thrust_04\", \"TORSO_shirt_white_up_thrust_05\", \"TORSO_shirt_white_up_thrust_06\", \"TORSO_shirt_white_up_thrust_07\", \"TORSO_shirt_white_up_thrust_08\",\r\n            \"TORSO_shirt_white_down_thrust_01\", \"TORSO_shirt_white_down_thrust_02\", \"TORSO_shirt_white_down_thrust_03\", \"TORSO_shirt_white_down_thrust_04\", \"TORSO_shirt_white_down_thrust_05\", \"TORSO_shirt_white_down_thrust_06\", \"TORSO_shirt_white_down_thrust_07\", \"TORSO_shirt_white_down_thrust_08\",\r\n\r\n            \"TORSO_shirt_white_hurt_01\", \"TORSO_shirt_white_hurt_02\", \"TORSO_shirt_white_hurt_03\", \"TORSO_shirt_white_hurt_04\", \"TORSO_shirt_white_hurt_05\", \"TORSO_shirt_white_hurt_06\",\r\n\r\n            \"TORSO_robe_shirt_brown_left_move_01\", \"TORSO_robe_shirt_brown_left_move_02\", \"TORSO_robe_shirt_brown_left_move_03\", \"TORSO_robe_shirt_brown_left_move_04\", \"TORSO_robe_shirt_brown_left_move_05\", \"TORSO_robe_shirt_brown_left_move_06\", \"TORSO_robe_shirt_brown_left_move_07\", \"TORSO_robe_shirt_brown_left_move_08\", \"TORSO_robe_shirt_brown_left_move_09\",\r\n            \"TORSO_robe_shirt_brown_right_move_01\", \"TORSO_robe_shirt_brown_right_move_02\", \"TORSO_robe_shirt_brown_right_move_03\", \"TORSO_robe_shirt_brown_right_move_04\", \"TORSO_robe_shirt_brown_right_move_05\", \"TORSO_robe_shirt_brown_right_move_06\", \"TORSO_robe_shirt_brown_right_move_07\", \"TORSO_robe_shirt_brown_right_move_08\", \"TORSO_robe_shirt_brown_right_move_09\",\r\n            \"TORSO_robe_shirt_brown_up_move_01\", \"TORSO_robe_shirt_brown_up_move_02\", \"TORSO_robe_shirt_brown_up_move_03\", \"TORSO_robe_shirt_brown_up_move_04\", \"TORSO_robe_shirt_brown_up_move_05\", \"TORSO_robe_shirt_brown_up_move_06\", \"TORSO_robe_shirt_brown_up_move_07\", \"TORSO_robe_shirt_brown_up_move_08\", \"TORSO_robe_shirt_brown_up_move_09\",\r\n            \"TORSO_robe_shirt_brown_down_move_01\", \"TORSO_robe_shirt_brown_down_move_02\", \"TORSO_robe_shirt_brown_down_move_03\", \"TORSO_robe_shirt_brown_down_move_04\", \"TORSO_robe_shirt_brown_down_move_05\", \"TORSO_robe_shirt_brown_down_move_06\", \"TORSO_robe_shirt_brown_down_move_07\", \"TORSO_robe_shirt_brown_down_move_08\", \"TORSO_robe_shirt_brown_down_move_09\",\r\n\r\n            \"TORSO_robe_shirt_brown_left_slash_01\", \"TORSO_robe_shirt_brown_left_slash_02\", \"TORSO_robe_shirt_brown_left_slash_03\", \"TORSO_robe_shirt_brown_left_slash_04\", \"TORSO_robe_shirt_brown_left_slash_05\", \"TORSO_robe_shirt_brown_left_slash_06\",\r\n            \"TORSO_robe_shirt_brown_right_slash_01\", \"TORSO_robe_shirt_brown_right_slash_02\", \"TORSO_robe_shirt_brown_right_slash_03\", \"TORSO_robe_shirt_brown_right_slash_04\", \"TORSO_robe_shirt_brown_right_slash_05\", \"TORSO_robe_shirt_brown_right_slash_06\",\r\n            \"TORSO_robe_shirt_brown_up_slash_01\", \"TORSO_robe_shirt_brown_up_slash_02\", \"TORSO_robe_shirt_brown_up_slash_03\", \"TORSO_robe_shirt_brown_up_slash_04\", \"TORSO_robe_shirt_brown_up_slash_05\", \"TORSO_robe_shirt_brown_up_slash_06\",\r\n            \"TORSO_robe_shirt_brown_down_slash_01\", \"TORSO_robe_shirt_brown_down_slash_02\", \"TORSO_robe_shirt_brown_down_slash_03\", \"TORSO_robe_shirt_brown_down_slash_04\", \"TORSO_robe_shirt_brown_down_slash_05\", \"TORSO_robe_shirt_brown_down_slash_06\",\r\n\r\n            \"TORSO_robe_shirt_brown_left_thrust_01\", \"TORSO_robe_shirt_brown_left_thrust_02\", \"TORSO_robe_shirt_brown_left_thrust_03\", \"TORSO_robe_shirt_brown_left_thrust_04\", \"TORSO_robe_shirt_brown_left_thrust_05\", \"TORSO_robe_shirt_brown_left_thrust_06\", \"TORSO_robe_shirt_brown_left_thrust_07\", \"TORSO_robe_shirt_brown_left_thrust_08\",\r\n            \"TORSO_robe_shirt_brown_right_thrust_01\", \"TORSO_robe_shirt_brown_right_thrust_02\", \"TORSO_robe_shirt_brown_right_thrust_03\", \"TORSO_robe_shirt_brown_right_thrust_04\", \"TORSO_robe_shirt_brown_right_thrust_05\", \"TORSO_robe_shirt_brown_right_thrust_06\", \"TORSO_robe_shirt_brown_right_thrust_07\", \"TORSO_robe_shirt_brown_right_thrust_08\",\r\n            \"TORSO_robe_shirt_brown_up_thrust_01\", \"TORSO_robe_shirt_brown_up_thrust_02\", \"TORSO_robe_shirt_brown_up_thrust_03\", \"TORSO_robe_shirt_brown_up_thrust_04\", \"TORSO_robe_shirt_brown_up_thrust_05\", \"TORSO_robe_shirt_brown_up_thrust_06\", \"TORSO_robe_shirt_brown_up_thrust_07\", \"TORSO_robe_shirt_brown_up_thrust_08\",\r\n            \"TORSO_robe_shirt_brown_down_thrust_01\", \"TORSO_robe_shirt_brown_down_thrust_02\", \"TORSO_robe_shirt_brown_down_thrust_03\", \"TORSO_robe_shirt_brown_down_thrust_04\", \"TORSO_robe_shirt_brown_down_thrust_05\", \"TORSO_robe_shirt_brown_down_thrust_06\", \"TORSO_robe_shirt_brown_down_thrust_07\", \"TORSO_robe_shirt_brown_down_thrust_08\",\r\n\r\n            \"TORSO_robe_shirt_brown_hurt_01\", \"TORSO_robe_shirt_brown_hurt_02\", \"TORSO_robe_shirt_brown_hurt_03\", \"TORSO_robe_shirt_brown_hurt_04\", \"TORSO_robe_shirt_brown_hurt_05\", \"TORSO_robe_shirt_brown_hurt_06\",\r\n\r\n            \"TORSO_leather_armor_left_move_01\", \"TORSO_leather_armor_left_move_02\", \"TORSO_leather_armor_left_move_03\", \"TORSO_leather_armor_left_move_04\", \"TORSO_leather_armor_left_move_05\", \"TORSO_leather_armor_left_move_06\", \"TORSO_leather_armor_left_move_07\", \"TORSO_leather_armor_left_move_08\", \"TORSO_leather_armor_left_move_09\",\r\n            \"TORSO_leather_armor_right_move_01\", \"TORSO_leather_armor_right_move_02\", \"TORSO_leather_armor_right_move_03\", \"TORSO_leather_armor_right_move_04\", \"TORSO_leather_armor_right_move_05\", \"TORSO_leather_armor_right_move_06\", \"TORSO_leather_armor_right_move_07\", \"TORSO_leather_armor_right_move_08\", \"TORSO_leather_armor_right_move_09\",\r\n            \"TORSO_leather_armor_up_move_01\", \"TORSO_leather_armor_up_move_02\", \"TORSO_leather_armor_up_move_03\", \"TORSO_leather_armor_up_move_04\", \"TORSO_leather_armor_up_move_05\", \"TORSO_leather_armor_up_move_06\", \"TORSO_leather_armor_up_move_07\", \"TORSO_leather_armor_up_move_08\", \"TORSO_leather_armor_up_move_09\",\r\n            \"TORSO_leather_armor_down_move_01\", \"TORSO_leather_armor_down_move_02\", \"TORSO_leather_armor_down_move_03\", \"TORSO_leather_armor_down_move_04\", \"TORSO_leather_armor_down_move_05\", \"TORSO_leather_armor_down_move_06\", \"TORSO_leather_armor_down_move_07\", \"TORSO_leather_armor_down_move_08\", \"TORSO_leather_armor_down_move_09\",\r\n\r\n            \"TORSO_leather_armor_left_slash_01\", \"TORSO_leather_armor_left_slash_02\", \"TORSO_leather_armor_left_slash_03\", \"TORSO_leather_armor_left_slash_04\", \"TORSO_leather_armor_left_slash_05\", \"TORSO_leather_armor_left_slash_06\",\r\n            \"TORSO_leather_armor_right_slash_01\", \"TORSO_leather_armor_right_slash_02\", \"TORSO_leather_armor_right_slash_03\", \"TORSO_leather_armor_right_slash_04\", \"TORSO_leather_armor_right_slash_05\", \"TORSO_leather_armor_right_slash_06\",\r\n            \"TORSO_leather_armor_up_slash_01\", \"TORSO_leather_armor_up_slash_02\", \"TORSO_leather_armor_up_slash_03\", \"TORSO_leather_armor_up_slash_04\", \"TORSO_leather_armor_up_slash_05\", \"TORSO_leather_armor_up_slash_06\",\r\n            \"TORSO_leather_armor_down_slash_01\", \"TORSO_leather_armor_down_slash_02\", \"TORSO_leather_armor_down_slash_03\", \"TORSO_leather_armor_down_slash_04\", \"TORSO_leather_armor_down_slash_05\", \"TORSO_leather_armor_down_slash_06\",\r\n\r\n            \"TORSO_leather_armor_left_thrust_01\", \"TORSO_leather_armor_left_thrust_02\", \"TORSO_leather_armor_left_thrust_03\", \"TORSO_leather_armor_left_thrust_04\", \"TORSO_leather_armor_left_thrust_05\", \"TORSO_leather_armor_left_thrust_06\", \"TORSO_leather_armor_left_thrust_07\", \"TORSO_leather_armor_left_thrust_08\",\r\n            \"TORSO_leather_armor_right_thrust_01\", \"TORSO_leather_armor_right_thrust_02\", \"TORSO_leather_armor_right_thrust_03\", \"TORSO_leather_armor_right_thrust_04\", \"TORSO_leather_armor_right_thrust_05\", \"TORSO_leather_armor_right_thrust_06\", \"TORSO_leather_armor_right_thrust_07\", \"TORSO_leather_armor_right_thrust_08\",\r\n            \"TORSO_leather_armor_up_thrust_01\", \"TORSO_leather_armor_up_thrust_02\", \"TORSO_leather_armor_up_thrust_03\", \"TORSO_leather_armor_up_thrust_04\", \"TORSO_leather_armor_up_thrust_05\", \"TORSO_leather_armor_up_thrust_06\", \"TORSO_leather_armor_up_thrust_07\", \"TORSO_leather_armor_up_thrust_08\",\r\n            \"TORSO_leather_armor_down_thrust_01\", \"TORSO_leather_armor_down_thrust_02\", \"TORSO_leather_armor_down_thrust_03\", \"TORSO_leather_armor_down_thrust_04\", \"TORSO_leather_armor_down_thrust_05\", \"TORSO_leather_armor_down_thrust_06\", \"TORSO_leather_armor_down_thrust_07\", \"TORSO_leather_armor_down_thrust_08\",\r\n\r\n            \"TORSO_leather_armor_hurt_01\", \"TORSO_leather_armor_hurt_02\", \"TORSO_leather_armor_hurt_03\", \"TORSO_leather_armor_hurt_04\", \"TORSO_leather_armor_hurt_05\", \"TORSO_leather_armor_hurt_06\",\r\n\r\n            \"TORSO_chain_jacket_purple_left_move_01\", \"TORSO_chain_jacket_purple_left_move_02\", \"TORSO_chain_jacket_purple_left_move_03\", \"TORSO_chain_jacket_purple_left_move_04\", \"TORSO_chain_jacket_purple_left_move_05\", \"TORSO_chain_jacket_purple_left_move_06\", \"TORSO_chain_jacket_purple_left_move_07\", \"TORSO_chain_jacket_purple_left_move_08\", \"TORSO_chain_jacket_purple_left_move_09\",\r\n            \"TORSO_chain_jacket_purple_right_move_01\", \"TORSO_chain_jacket_purple_right_move_02\", \"TORSO_chain_jacket_purple_right_move_03\", \"TORSO_chain_jacket_purple_right_move_04\", \"TORSO_chain_jacket_purple_right_move_05\", \"TORSO_chain_jacket_purple_right_move_06\", \"TORSO_chain_jacket_purple_right_move_07\", \"TORSO_chain_jacket_purple_right_move_08\", \"TORSO_chain_jacket_purple_right_move_09\",\r\n            \"TORSO_chain_jacket_purple_up_move_01\", \"TORSO_chain_jacket_purple_up_move_02\", \"TORSO_chain_jacket_purple_up_move_03\", \"TORSO_chain_jacket_purple_up_move_04\", \"TORSO_chain_jacket_purple_up_move_05\", \"TORSO_chain_jacket_purple_up_move_06\", \"TORSO_chain_jacket_purple_up_move_07\", \"TORSO_chain_jacket_purple_up_move_08\", \"TORSO_chain_jacket_purple_up_move_09\",\r\n            \"TORSO_chain_jacket_purple_down_move_01\", \"TORSO_chain_jacket_purple_down_move_02\", \"TORSO_chain_jacket_purple_down_move_03\", \"TORSO_chain_jacket_purple_down_move_04\", \"TORSO_chain_jacket_purple_down_move_05\", \"TORSO_chain_jacket_purple_down_move_06\", \"TORSO_chain_jacket_purple_down_move_07\", \"TORSO_chain_jacket_purple_down_move_08\", \"TORSO_chain_jacket_purple_down_move_09\",\r\n\r\n            \"TORSO_chain_jacket_purple_left_slash_01\", \"TORSO_chain_jacket_purple_left_slash_02\", \"TORSO_chain_jacket_purple_left_slash_03\", \"TORSO_chain_jacket_purple_left_slash_04\", \"TORSO_chain_jacket_purple_left_slash_05\", \"TORSO_chain_jacket_purple_left_slash_06\",\r\n            \"TORSO_chain_jacket_purple_right_slash_01\", \"TORSO_chain_jacket_purple_right_slash_02\", \"TORSO_chain_jacket_purple_right_slash_03\", \"TORSO_chain_jacket_purple_right_slash_04\", \"TORSO_chain_jacket_purple_right_slash_05\", \"TORSO_chain_jacket_purple_right_slash_06\",\r\n            \"TORSO_chain_jacket_purple_up_slash_01\", \"TORSO_chain_jacket_purple_up_slash_02\", \"TORSO_chain_jacket_purple_up_slash_03\", \"TORSO_chain_jacket_purple_up_slash_04\", \"TORSO_chain_jacket_purple_up_slash_05\", \"TORSO_chain_jacket_purple_up_slash_06\",\r\n            \"TORSO_chain_jacket_purple_down_slash_01\", \"TORSO_chain_jacket_purple_down_slash_02\", \"TORSO_chain_jacket_purple_down_slash_03\", \"TORSO_chain_jacket_purple_down_slash_04\", \"TORSO_chain_jacket_purple_down_slash_05\", \"TORSO_chain_jacket_purple_down_slash_06\",\r\n\r\n            \"TORSO_chain_jacket_purple_left_thrust_01\", \"TORSO_chain_jacket_purple_left_thrust_02\", \"TORSO_chain_jacket_purple_left_thrust_03\", \"TORSO_chain_jacket_purple_left_thrust_04\", \"TORSO_chain_jacket_purple_left_thrust_05\", \"TORSO_chain_jacket_purple_left_thrust_06\", \"TORSO_chain_jacket_purple_left_thrust_07\", \"TORSO_chain_jacket_purple_left_thrust_08\",\r\n            \"TORSO_chain_jacket_purple_right_thrust_01\", \"TORSO_chain_jacket_purple_right_thrust_02\", \"TORSO_chain_jacket_purple_right_thrust_03\", \"TORSO_chain_jacket_purple_right_thrust_04\", \"TORSO_chain_jacket_purple_right_thrust_05\", \"TORSO_chain_jacket_purple_right_thrust_06\", \"TORSO_chain_jacket_purple_right_thrust_07\", \"TORSO_chain_jacket_purple_right_thrust_08\",\r\n            \"TORSO_chain_jacket_purple_up_thrust_01\", \"TORSO_chain_jacket_purple_up_thrust_02\", \"TORSO_chain_jacket_purple_up_thrust_03\", \"TORSO_chain_jacket_purple_up_thrust_04\", \"TORSO_chain_jacket_purple_up_thrust_05\", \"TORSO_chain_jacket_purple_up_thrust_06\", \"TORSO_chain_jacket_purple_up_thrust_07\", \"TORSO_chain_jacket_purple_up_thrust_08\",\r\n            \"TORSO_chain_jacket_purple_down_thrust_01\", \"TORSO_chain_jacket_purple_down_thrust_02\", \"TORSO_chain_jacket_purple_down_thrust_03\", \"TORSO_chain_jacket_purple_down_thrust_04\", \"TORSO_chain_jacket_purple_down_thrust_05\", \"TORSO_chain_jacket_purple_down_thrust_06\", \"TORSO_chain_jacket_purple_down_thrust_07\", \"TORSO_chain_jacket_purple_down_thrust_08\",\r\n\r\n            \"TORSO_chain_jacket_purple_hurt_01\", \"TORSO_chain_jacket_purple_hurt_02\", \"TORSO_chain_jacket_purple_hurt_03\", \"TORSO_chain_jacket_purple_hurt_04\", \"TORSO_chain_jacket_purple_hurt_05\", \"TORSO_chain_jacket_purple_hurt_06\",\r\n\r\n            \"TORSO_chain_armor_left_move_01\", \"TORSO_chain_armor_left_move_02\", \"TORSO_chain_armor_left_move_03\", \"TORSO_chain_armor_left_move_04\", \"TORSO_chain_armor_left_move_05\", \"TORSO_chain_armor_left_move_06\", \"TORSO_chain_armor_left_move_07\", \"TORSO_chain_armor_left_move_08\", \"TORSO_chain_armor_left_move_09\",\r\n            \"TORSO_chain_armor_right_move_01\", \"TORSO_chain_armor_right_move_02\", \"TORSO_chain_armor_right_move_03\", \"TORSO_chain_armor_right_move_04\", \"TORSO_chain_armor_right_move_05\", \"TORSO_chain_armor_right_move_06\", \"TORSO_chain_armor_right_move_07\", \"TORSO_chain_armor_right_move_08\", \"TORSO_chain_armor_right_move_09\",\r\n            \"TORSO_chain_armor_up_move_01\", \"TORSO_chain_armor_up_move_02\", \"TORSO_chain_armor_up_move_03\", \"TORSO_chain_armor_up_move_04\", \"TORSO_chain_armor_up_move_05\", \"TORSO_chain_armor_up_move_06\", \"TORSO_chain_armor_up_move_07\", \"TORSO_chain_armor_up_move_08\", \"TORSO_chain_armor_up_move_09\",\r\n            \"TORSO_chain_armor_down_move_01\", \"TORSO_chain_armor_down_move_02\", \"TORSO_chain_armor_down_move_03\", \"TORSO_chain_armor_down_move_04\", \"TORSO_chain_armor_down_move_05\", \"TORSO_chain_armor_down_move_06\", \"TORSO_chain_armor_down_move_07\", \"TORSO_chain_armor_down_move_08\", \"TORSO_chain_armor_down_move_09\",\r\n\r\n            \"TORSO_chain_armor_left_slash_01\", \"TORSO_chain_armor_left_slash_02\", \"TORSO_chain_armor_left_slash_03\", \"TORSO_chain_armor_left_slash_04\", \"TORSO_chain_armor_left_slash_05\", \"TORSO_chain_armor_left_slash_06\",\r\n            \"TORSO_chain_armor_right_slash_01\", \"TORSO_chain_armor_right_slash_02\", \"TORSO_chain_armor_right_slash_03\", \"TORSO_chain_armor_right_slash_04\", \"TORSO_chain_armor_right_slash_05\", \"TORSO_chain_armor_right_slash_06\",\r\n            \"TORSO_chain_armor_up_slash_01\", \"TORSO_chain_armor_up_slash_02\", \"TORSO_chain_armor_up_slash_03\", \"TORSO_chain_armor_up_slash_04\", \"TORSO_chain_armor_up_slash_05\", \"TORSO_chain_armor_up_slash_06\",\r\n            \"TORSO_chain_armor_down_slash_01\", \"TORSO_chain_armor_down_slash_02\", \"TORSO_chain_armor_down_slash_03\", \"TORSO_chain_armor_down_slash_04\", \"TORSO_chain_armor_down_slash_05\", \"TORSO_chain_armor_down_slash_06\",\r\n\r\n            \"TORSO_chain_armor_left_thrust_01\", \"TORSO_chain_armor_left_thrust_02\", \"TORSO_chain_armor_left_thrust_03\", \"TORSO_chain_armor_left_thrust_04\", \"TORSO_chain_armor_left_thrust_05\", \"TORSO_chain_armor_left_thrust_06\", \"TORSO_chain_armor_left_thrust_07\", \"TORSO_chain_armor_left_thrust_08\",\r\n            \"TORSO_chain_armor_right_thrust_01\", \"TORSO_chain_armor_right_thrust_02\", \"TORSO_chain_armor_right_thrust_03\", \"TORSO_chain_armor_right_thrust_04\", \"TORSO_chain_armor_right_thrust_05\", \"TORSO_chain_armor_right_thrust_06\", \"TORSO_chain_armor_right_thrust_07\", \"TORSO_chain_armor_right_thrust_08\",\r\n            \"TORSO_chain_armor_up_thrust_01\", \"TORSO_chain_armor_up_thrust_02\", \"TORSO_chain_armor_up_thrust_03\", \"TORSO_chain_armor_up_thrust_04\", \"TORSO_chain_armor_up_thrust_05\", \"TORSO_chain_armor_up_thrust_06\", \"TORSO_chain_armor_up_thrust_07\", \"TORSO_chain_armor_up_thrust_08\",\r\n            \"TORSO_chain_armor_down_thrust_01\", \"TORSO_chain_armor_down_thrust_02\", \"TORSO_chain_armor_down_thrust_03\", \"TORSO_chain_armor_down_thrust_04\", \"TORSO_chain_armor_down_thrust_05\", \"TORSO_chain_armor_down_thrust_06\", \"TORSO_chain_armor_down_thrust_07\", \"TORSO_chain_armor_down_thrust_08\",\r\n\r\n            \"TORSO_chain_armor_hurt_01\", \"TORSO_chain_armor_hurt_02\", \"TORSO_chain_armor_hurt_03\", \"TORSO_chain_armor_hurt_04\", \"TORSO_chain_armor_hurt_05\", \"TORSO_chain_armor_hurt_06\",\r\n\r\n            \"TORSO_plate_armor_left_move_01\", \"TORSO_plate_armor_left_move_02\", \"TORSO_plate_armor_left_move_03\", \"TORSO_plate_armor_left_move_04\", \"TORSO_plate_armor_left_move_05\", \"TORSO_plate_armor_left_move_06\", \"TORSO_plate_armor_left_move_07\", \"TORSO_plate_armor_left_move_08\", \"TORSO_plate_armor_left_move_09\",\r\n            \"TORSO_plate_armor_right_move_01\", \"TORSO_plate_armor_right_move_02\", \"TORSO_plate_armor_right_move_03\", \"TORSO_plate_armor_right_move_04\", \"TORSO_plate_armor_right_move_05\", \"TORSO_plate_armor_right_move_06\", \"TORSO_plate_armor_right_move_07\", \"TORSO_plate_armor_right_move_08\", \"TORSO_plate_armor_right_move_09\",\r\n            \"TORSO_plate_armor_up_move_01\", \"TORSO_plate_armor_up_move_02\", \"TORSO_plate_armor_up_move_03\", \"TORSO_plate_armor_up_move_04\", \"TORSO_plate_armor_up_move_05\", \"TORSO_plate_armor_up_move_06\", \"TORSO_plate_armor_up_move_07\", \"TORSO_plate_armor_up_move_08\", \"TORSO_plate_armor_up_move_09\",\r\n            \"TORSO_plate_armor_down_move_01\", \"TORSO_plate_armor_down_move_02\", \"TORSO_plate_armor_down_move_03\", \"TORSO_plate_armor_down_move_04\", \"TORSO_plate_armor_down_move_05\", \"TORSO_plate_armor_down_move_06\", \"TORSO_plate_armor_down_move_07\", \"TORSO_plate_armor_down_move_08\", \"TORSO_plate_armor_down_move_09\",\r\n\r\n            \"TORSO_plate_armor_left_slash_01\", \"TORSO_plate_armor_left_slash_02\", \"TORSO_plate_armor_left_slash_03\", \"TORSO_plate_armor_left_slash_04\", \"TORSO_plate_armor_left_slash_05\", \"TORSO_plate_armor_left_slash_06\",\r\n            \"TORSO_plate_armor_right_slash_01\", \"TORSO_plate_armor_right_slash_02\", \"TORSO_plate_armor_right_slash_03\", \"TORSO_plate_armor_right_slash_04\", \"TORSO_plate_armor_right_slash_05\", \"TORSO_plate_armor_right_slash_06\",\r\n            \"TORSO_plate_armor_up_slash_01\", \"TORSO_plate_armor_up_slash_02\", \"TORSO_plate_armor_up_slash_03\", \"TORSO_plate_armor_up_slash_04\", \"TORSO_plate_armor_up_slash_05\", \"TORSO_plate_armor_up_slash_06\",\r\n            \"TORSO_plate_armor_down_slash_01\", \"TORSO_plate_armor_down_slash_02\", \"TORSO_plate_armor_down_slash_03\", \"TORSO_plate_armor_down_slash_04\", \"TORSO_plate_armor_down_slash_05\", \"TORSO_plate_armor_down_slash_06\",\r\n\r\n            \"TORSO_plate_armor_left_thrust_01\", \"TORSO_plate_armor_left_thrust_02\", \"TORSO_plate_armor_left_thrust_03\", \"TORSO_plate_armor_left_thrust_04\", \"TORSO_plate_armor_left_thrust_05\", \"TORSO_plate_armor_left_thrust_06\", \"TORSO_plate_armor_left_thrust_07\", \"TORSO_plate_armor_left_thrust_08\",\r\n            \"TORSO_plate_armor_right_thrust_01\", \"TORSO_plate_armor_right_thrust_02\", \"TORSO_plate_armor_right_thrust_03\", \"TORSO_plate_armor_right_thrust_04\", \"TORSO_plate_armor_right_thrust_05\", \"TORSO_plate_armor_right_thrust_06\", \"TORSO_plate_armor_right_thrust_07\", \"TORSO_plate_armor_right_thrust_08\",\r\n            \"TORSO_plate_armor_up_thrust_01\", \"TORSO_plate_armor_up_thrust_02\", \"TORSO_plate_armor_up_thrust_03\", \"TORSO_plate_armor_up_thrust_04\", \"TORSO_plate_armor_up_thrust_05\", \"TORSO_plate_armor_up_thrust_06\", \"TORSO_plate_armor_up_thrust_07\", \"TORSO_plate_armor_up_thrust_08\",\r\n            \"TORSO_plate_armor_down_thrust_01\", \"TORSO_plate_armor_down_thrust_02\", \"TORSO_plate_armor_down_thrust_03\", \"TORSO_plate_armor_down_thrust_04\", \"TORSO_plate_armor_down_thrust_05\", \"TORSO_plate_armor_down_thrust_06\", \"TORSO_plate_armor_down_thrust_07\", \"TORSO_plate_armor_down_thrust_08\",\r\n\r\n            \"TORSO_plate_armor_hurt_01\", \"TORSO_plate_armor_hurt_02\", \"TORSO_plate_armor_hurt_03\", \"TORSO_plate_armor_hurt_04\", \"TORSO_plate_armor_hurt_05\", \"TORSO_plate_armor_hurt_06\",\r\n\r\n            \"BELT_leather_left_move_01\", \"BELT_leather_left_move_02\", \"BELT_leather_left_move_03\", \"BELT_leather_left_move_04\", \"BELT_leather_left_move_05\", \"BELT_leather_left_move_06\", \"BELT_leather_left_move_07\", \"BELT_leather_left_move_08\", \"BELT_leather_left_move_09\",\r\n            \"BELT_leather_right_move_01\", \"BELT_leather_right_move_02\", \"BELT_leather_right_move_03\", \"BELT_leather_right_move_04\", \"BELT_leather_right_move_05\", \"BELT_leather_right_move_06\", \"BELT_leather_right_move_07\", \"BELT_leather_right_move_08\", \"BELT_leather_right_move_09\",\r\n            \"BELT_leather_up_move_01\", \"BELT_leather_up_move_02\", \"BELT_leather_up_move_03\", \"BELT_leather_up_move_04\", \"BELT_leather_up_move_05\", \"BELT_leather_up_move_06\", \"BELT_leather_up_move_07\", \"BELT_leather_up_move_08\", \"BELT_leather_up_move_09\",\r\n            \"BELT_leather_down_move_01\", \"BELT_leather_down_move_02\", \"BELT_leather_down_move_03\", \"BELT_leather_down_move_04\", \"BELT_leather_down_move_05\", \"BELT_leather_down_move_06\", \"BELT_leather_down_move_07\", \"BELT_leather_down_move_08\", \"BELT_leather_down_move_09\",\r\n\r\n            \"BELT_leather_left_slash_01\", \"BELT_leather_left_slash_02\", \"BELT_leather_left_slash_03\", \"BELT_leather_left_slash_04\", \"BELT_leather_left_slash_05\", \"BELT_leather_left_slash_06\",\r\n            \"BELT_leather_right_slash_01\", \"BELT_leather_right_slash_02\", \"BELT_leather_right_slash_03\", \"BELT_leather_right_slash_04\", \"BELT_leather_right_slash_05\", \"BELT_leather_right_slash_06\",\r\n            \"BELT_leather_up_slash_01\", \"BELT_leather_up_slash_02\", \"BELT_leather_up_slash_03\", \"BELT_leather_up_slash_04\", \"BELT_leather_up_slash_05\", \"BELT_leather_up_slash_06\",\r\n            \"BELT_leather_down_slash_01\", \"BELT_leather_down_slash_02\", \"BELT_leather_down_slash_03\", \"BELT_leather_down_slash_04\", \"BELT_leather_down_slash_05\", \"BELT_leather_down_slash_06\",\r\n\r\n            \"BELT_leather_left_thrust_01\", \"BELT_leather_left_thrust_02\", \"BELT_leather_left_thrust_03\", \"BELT_leather_left_thrust_04\", \"BELT_leather_left_thrust_05\", \"BELT_leather_left_thrust_06\", \"BELT_leather_left_thrust_07\", \"BELT_leather_left_thrust_08\",\r\n            \"BELT_leather_right_thrust_01\", \"BELT_leather_right_thrust_02\", \"BELT_leather_right_thrust_03\", \"BELT_leather_right_thrust_04\", \"BELT_leather_right_thrust_05\", \"BELT_leather_right_thrust_06\", \"BELT_leather_right_thrust_07\", \"BELT_leather_right_thrust_08\",\r\n            \"BELT_leather_up_thrust_01\", \"BELT_leather_up_thrust_02\", \"BELT_leather_up_thrust_03\", \"BELT_leather_up_thrust_04\", \"BELT_leather_up_thrust_05\", \"BELT_leather_up_thrust_06\", \"BELT_leather_up_thrust_07\", \"BELT_leather_up_thrust_08\",\r\n            \"BELT_leather_down_thrust_01\", \"BELT_leather_down_thrust_02\", \"BELT_leather_down_thrust_03\", \"BELT_leather_down_thrust_04\", \"BELT_leather_down_thrust_05\", \"BELT_leather_down_thrust_06\", \"BELT_leather_down_thrust_07\", \"BELT_leather_down_thrust_08\",\r\n\r\n            \"BELT_leather_hurt_01\", \"BELT_leather_hurt_02\", \"BELT_leather_hurt_03\", \"BELT_leather_hurt_04\", \"BELT_leather_hurt_05\", \"BELT_leather_hurt_06\",\r\n\r\n            \"BELT_rope_left_move_01\", \"BELT_rope_left_move_02\", \"BELT_rope_left_move_03\", \"BELT_rope_left_move_04\", \"BELT_rope_left_move_05\", \"BELT_rope_left_move_06\", \"BELT_rope_left_move_07\", \"BELT_rope_left_move_08\", \"BELT_rope_left_move_09\",\r\n            \"BELT_rope_right_move_01\", \"BELT_rope_right_move_02\", \"BELT_rope_right_move_03\", \"BELT_rope_right_move_04\", \"BELT_rope_right_move_05\", \"BELT_rope_right_move_06\", \"BELT_rope_right_move_07\", \"BELT_rope_right_move_08\", \"BELT_rope_right_move_09\",\r\n            \"BELT_rope_up_move_01\", \"BELT_rope_up_move_02\", \"BELT_rope_up_move_03\", \"BELT_rope_up_move_04\", \"BELT_rope_up_move_05\", \"BELT_rope_up_move_06\", \"BELT_rope_up_move_07\", \"BELT_rope_up_move_08\", \"BELT_rope_up_move_09\",\r\n            \"BELT_rope_down_move_01\", \"BELT_rope_down_move_02\", \"BELT_rope_down_move_03\", \"BELT_rope_down_move_04\", \"BELT_rope_down_move_05\", \"BELT_rope_down_move_06\", \"BELT_rope_down_move_07\", \"BELT_rope_down_move_08\", \"BELT_rope_down_move_09\",\r\n\r\n            \"BELT_rope_left_slash_01\", \"BELT_rope_left_slash_02\", \"BELT_rope_left_slash_03\", \"BELT_rope_left_slash_04\", \"BELT_rope_left_slash_05\", \"BELT_rope_left_slash_06\",\r\n            \"BELT_rope_right_slash_01\", \"BELT_rope_right_slash_02\", \"BELT_rope_right_slash_03\", \"BELT_rope_right_slash_04\", \"BELT_rope_right_slash_05\", \"BELT_rope_right_slash_06\",\r\n            \"BELT_rope_up_slash_01\", \"BELT_rope_up_slash_02\", \"BELT_rope_up_slash_03\", \"BELT_rope_up_slash_04\", \"BELT_rope_up_slash_05\", \"BELT_rope_up_slash_06\",\r\n            \"BELT_rope_down_slash_01\", \"BELT_rope_down_slash_02\", \"BELT_rope_down_slash_03\", \"BELT_rope_down_slash_04\", \"BELT_rope_down_slash_05\", \"BELT_rope_down_slash_06\",\r\n\r\n            \"BELT_rope_left_thrust_01\", \"BELT_rope_left_thrust_02\", \"BELT_rope_left_thrust_03\", \"BELT_rope_left_thrust_04\", \"BELT_rope_left_thrust_05\", \"BELT_rope_left_thrust_06\", \"BELT_rope_left_thrust_07\", \"BELT_rope_left_thrust_08\",\r\n            \"BELT_rope_right_thrust_01\", \"BELT_rope_right_thrust_02\", \"BELT_rope_right_thrust_03\", \"BELT_rope_right_thrust_04\", \"BELT_rope_right_thrust_05\", \"BELT_rope_right_thrust_06\", \"BELT_rope_right_thrust_07\", \"BELT_rope_right_thrust_08\",\r\n            \"BELT_rope_up_thrust_01\", \"BELT_rope_up_thrust_02\", \"BELT_rope_up_thrust_03\", \"BELT_rope_up_thrust_04\", \"BELT_rope_up_thrust_05\", \"BELT_rope_up_thrust_06\", \"BELT_rope_up_thrust_07\", \"BELT_rope_up_thrust_08\",\r\n            \"BELT_rope_down_thrust_01\", \"BELT_rope_down_thrust_02\", \"BELT_rope_down_thrust_03\", \"BELT_rope_down_thrust_04\", \"BELT_rope_down_thrust_05\", \"BELT_rope_down_thrust_06\", \"BELT_rope_down_thrust_07\", \"BELT_rope_down_thrust_08\",\r\n\r\n            \"BELT_rope_hurt_01\", \"BELT_rope_hurt_02\", \"BELT_rope_hurt_03\", \"BELT_rope_hurt_04\", \"BELT_rope_hurt_05\", \"BELT_rope_hurt_06\",\r\n\r\n            \"HANDS_plate_gloves_left_move_01\", \"HANDS_plate_gloves_left_move_02\", \"HANDS_plate_gloves_left_move_03\", \"HANDS_plate_gloves_left_move_04\", \"HANDS_plate_gloves_left_move_05\", \"HANDS_plate_gloves_left_move_06\", \"HANDS_plate_gloves_left_move_07\", \"HANDS_plate_gloves_left_move_08\", \"HANDS_plate_gloves_left_move_09\",\r\n            \"HANDS_plate_gloves_right_move_01\", \"HANDS_plate_gloves_right_move_02\", \"HANDS_plate_gloves_right_move_03\", \"HANDS_plate_gloves_right_move_04\", \"HANDS_plate_gloves_right_move_05\", \"HANDS_plate_gloves_right_move_06\", \"HANDS_plate_gloves_right_move_07\", \"HANDS_plate_gloves_right_move_08\", \"HANDS_plate_gloves_right_move_09\",\r\n            \"HANDS_plate_gloves_up_move_01\", \"HANDS_plate_gloves_up_move_02\", \"HANDS_plate_gloves_up_move_03\", \"HANDS_plate_gloves_up_move_04\", \"HANDS_plate_gloves_up_move_05\", \"HANDS_plate_gloves_up_move_06\", \"HANDS_plate_gloves_up_move_07\", \"HANDS_plate_gloves_up_move_08\", \"HANDS_plate_gloves_up_move_09\",\r\n            \"HANDS_plate_gloves_down_move_01\", \"HANDS_plate_gloves_down_move_02\", \"HANDS_plate_gloves_down_move_03\", \"HANDS_plate_gloves_down_move_04\", \"HANDS_plate_gloves_down_move_05\", \"HANDS_plate_gloves_down_move_06\", \"HANDS_plate_gloves_down_move_07\", \"HANDS_plate_gloves_down_move_08\", \"HANDS_plate_gloves_down_move_09\",\r\n\r\n            \"HANDS_plate_gloves_left_slash_01\", \"HANDS_plate_gloves_left_slash_02\", \"HANDS_plate_gloves_left_slash_03\", \"HANDS_plate_gloves_left_slash_04\", \"HANDS_plate_gloves_left_slash_05\", \"HANDS_plate_gloves_left_slash_06\",\r\n            \"HANDS_plate_gloves_right_slash_01\", \"HANDS_plate_gloves_right_slash_02\", \"HANDS_plate_gloves_right_slash_03\", \"HANDS_plate_gloves_right_slash_04\", \"HANDS_plate_gloves_right_slash_05\", \"HANDS_plate_gloves_right_slash_06\",\r\n            \"HANDS_plate_gloves_up_slash_01\", \"HANDS_plate_gloves_up_slash_02\", \"HANDS_plate_gloves_up_slash_03\", \"HANDS_plate_gloves_up_slash_04\", \"HANDS_plate_gloves_up_slash_05\", \"HANDS_plate_gloves_up_slash_06\",\r\n            \"HANDS_plate_gloves_down_slash_01\", \"HANDS_plate_gloves_down_slash_02\", \"HANDS_plate_gloves_down_slash_03\", \"HANDS_plate_gloves_down_slash_04\", \"HANDS_plate_gloves_down_slash_05\", \"HANDS_plate_gloves_down_slash_06\",\r\n\r\n            \"HANDS_plate_gloves_left_thrust_01\", \"HANDS_plate_gloves_left_thrust_02\", \"HANDS_plate_gloves_left_thrust_03\", \"HANDS_plate_gloves_left_thrust_04\", \"HANDS_plate_gloves_left_thrust_05\", \"HANDS_plate_gloves_left_thrust_06\", \"HANDS_plate_gloves_left_thrust_07\", \"HANDS_plate_gloves_left_thrust_08\",\r\n            \"HANDS_plate_gloves_right_thrust_01\", \"HANDS_plate_gloves_right_thrust_02\", \"HANDS_plate_gloves_right_thrust_03\", \"HANDS_plate_gloves_right_thrust_04\", \"HANDS_plate_gloves_right_thrust_05\", \"HANDS_plate_gloves_right_thrust_06\", \"HANDS_plate_gloves_right_thrust_07\", \"HANDS_plate_gloves_right_thrust_08\",\r\n            \"HANDS_plate_gloves_up_thrust_01\", \"HANDS_plate_gloves_up_thrust_02\", \"HANDS_plate_gloves_up_thrust_03\", \"HANDS_plate_gloves_up_thrust_04\", \"HANDS_plate_gloves_up_thrust_05\", \"HANDS_plate_gloves_up_thrust_06\", \"HANDS_plate_gloves_up_thrust_07\", \"HANDS_plate_gloves_up_thrust_08\",\r\n            \"HANDS_plate_gloves_down_thrust_01\", \"HANDS_plate_gloves_down_thrust_02\", \"HANDS_plate_gloves_down_thrust_03\", \"HANDS_plate_gloves_down_thrust_04\", \"HANDS_plate_gloves_down_thrust_05\", \"HANDS_plate_gloves_down_thrust_06\", \"HANDS_plate_gloves_down_thrust_07\", \"HANDS_plate_gloves_down_thrust_08\",\r\n\r\n            \"HANDS_plate_gloves_hurt_01\", \"HANDS_plate_gloves_hurt_02\", \"HANDS_plate_gloves_hurt_03\", \"HANDS_plate_gloves_hurt_04\", \"HANDS_plate_gloves_hurt_05\", \"HANDS_plate_gloves_hurt_06\",\r\n\r\n            \"HANDS_leather_bracers_left_move_01\", \"HANDS_leather_bracers_left_move_02\", \"HANDS_leather_bracers_left_move_03\", \"HANDS_leather_bracers_left_move_04\", \"HANDS_leather_bracers_left_move_05\", \"HANDS_leather_bracers_left_move_06\", \"HANDS_leather_bracers_left_move_07\", \"HANDS_leather_bracers_left_move_08\", \"HANDS_leather_bracers_left_move_09\",\r\n            \"HANDS_leather_bracers_right_move_01\", \"HANDS_leather_bracers_right_move_02\", \"HANDS_leather_bracers_right_move_03\", \"HANDS_leather_bracers_right_move_04\", \"HANDS_leather_bracers_right_move_05\", \"HANDS_leather_bracers_right_move_06\", \"HANDS_leather_bracers_right_move_07\", \"HANDS_leather_bracers_right_move_08\", \"HANDS_leather_bracers_right_move_09\",\r\n            \"HANDS_leather_bracers_up_move_01\", \"HANDS_leather_bracers_up_move_02\", \"HANDS_leather_bracers_up_move_03\", \"HANDS_leather_bracers_up_move_04\", \"HANDS_leather_bracers_up_move_05\", \"HANDS_leather_bracers_up_move_06\", \"HANDS_leather_bracers_up_move_07\", \"HANDS_leather_bracers_up_move_08\", \"HANDS_leather_bracers_up_move_09\",\r\n            \"HANDS_leather_bracers_down_move_01\", \"HANDS_leather_bracers_down_move_02\", \"HANDS_leather_bracers_down_move_03\", \"HANDS_leather_bracers_down_move_04\", \"HANDS_leather_bracers_down_move_05\", \"HANDS_leather_bracers_down_move_06\", \"HANDS_leather_bracers_down_move_07\", \"HANDS_leather_bracers_down_move_08\", \"HANDS_leather_bracers_down_move_09\",\r\n\r\n            \"HANDS_leather_bracers_left_slash_01\", \"HANDS_leather_bracers_left_slash_02\", \"HANDS_leather_bracers_left_slash_03\", \"HANDS_leather_bracers_left_slash_04\", \"HANDS_leather_bracers_left_slash_05\", \"HANDS_leather_bracers_left_slash_06\",\r\n            \"HANDS_leather_bracers_right_slash_01\", \"HANDS_leather_bracers_right_slash_02\", \"HANDS_leather_bracers_right_slash_03\", \"HANDS_leather_bracers_right_slash_04\", \"HANDS_leather_bracers_right_slash_05\", \"HANDS_leather_bracers_right_slash_06\",\r\n            \"HANDS_leather_bracers_up_slash_01\", \"HANDS_leather_bracers_up_slash_02\", \"HANDS_leather_bracers_up_slash_03\", \"HANDS_leather_bracers_up_slash_04\", \"HANDS_leather_bracers_up_slash_05\", \"HANDS_leather_bracers_up_slash_06\",\r\n            \"HANDS_leather_bracers_down_slash_01\", \"HANDS_leather_bracers_down_slash_02\", \"HANDS_leather_bracers_down_slash_03\", \"HANDS_leather_bracers_down_slash_04\", \"HANDS_leather_bracers_down_slash_05\", \"HANDS_leather_bracers_down_slash_06\",\r\n\r\n            \"HANDS_leather_bracers_left_thrust_01\", \"HANDS_leather_bracers_left_thrust_02\", \"HANDS_leather_bracers_left_thrust_03\", \"HANDS_leather_bracers_left_thrust_04\", \"HANDS_leather_bracers_left_thrust_05\", \"HANDS_leather_bracers_left_thrust_06\", \"HANDS_leather_bracers_left_thrust_07\", \"HANDS_leather_bracers_left_thrust_08\",\r\n            \"HANDS_leather_bracers_right_thrust_01\", \"HANDS_leather_bracers_right_thrust_02\", \"HANDS_leather_bracers_right_thrust_03\", \"HANDS_leather_bracers_right_thrust_04\", \"HANDS_leather_bracers_right_thrust_05\", \"HANDS_leather_bracers_right_thrust_06\", \"HANDS_leather_bracers_right_thrust_07\", \"HANDS_leather_bracers_right_thrust_08\",\r\n            \"HANDS_leather_bracers_up_thrust_01\", \"HANDS_leather_bracers_up_thrust_02\", \"HANDS_leather_bracers_up_thrust_03\", \"HANDS_leather_bracers_up_thrust_04\", \"HANDS_leather_bracers_up_thrust_05\", \"HANDS_leather_bracers_up_thrust_06\", \"HANDS_leather_bracers_up_thrust_07\", \"HANDS_leather_bracers_up_thrust_08\",\r\n            \"HANDS_leather_bracers_down_thrust_01\", \"HANDS_leather_bracers_down_thrust_02\", \"HANDS_leather_bracers_down_thrust_03\", \"HANDS_leather_bracers_down_thrust_04\", \"HANDS_leather_bracers_down_thrust_05\", \"HANDS_leather_bracers_down_thrust_06\", \"HANDS_leather_bracers_down_thrust_07\", \"HANDS_leather_bracers_down_thrust_08\",\r\n\r\n            \"HANDS_leather_bracers_hurt_01\", \"HANDS_leather_bracers_hurt_02\", \"HANDS_leather_bracers_hurt_03\", \"HANDS_leather_bracers_hurt_04\", \"HANDS_leather_bracers_hurt_05\", \"HANDS_leather_bracers_hurt_06\",\r\n\r\n            \"LEGS_pants_greenish_left_move_01\", \"LEGS_pants_greenish_left_move_02\", \"LEGS_pants_greenish_left_move_03\", \"LEGS_pants_greenish_left_move_04\", \"LEGS_pants_greenish_left_move_05\", \"LEGS_pants_greenish_left_move_06\", \"LEGS_pants_greenish_left_move_07\", \"LEGS_pants_greenish_left_move_08\", \"LEGS_pants_greenish_left_move_09\",\r\n            \"LEGS_pants_greenish_right_move_01\", \"LEGS_pants_greenish_right_move_02\", \"LEGS_pants_greenish_right_move_03\", \"LEGS_pants_greenish_right_move_04\", \"LEGS_pants_greenish_right_move_05\", \"LEGS_pants_greenish_right_move_06\", \"LEGS_pants_greenish_right_move_07\", \"LEGS_pants_greenish_right_move_08\", \"LEGS_pants_greenish_right_move_09\",\r\n            \"LEGS_pants_greenish_up_move_01\", \"LEGS_pants_greenish_up_move_02\", \"LEGS_pants_greenish_up_move_03\", \"LEGS_pants_greenish_up_move_04\", \"LEGS_pants_greenish_up_move_05\", \"LEGS_pants_greenish_up_move_06\", \"LEGS_pants_greenish_up_move_07\", \"LEGS_pants_greenish_up_move_08\", \"LEGS_pants_greenish_up_move_09\",\r\n            \"LEGS_pants_greenish_down_move_01\", \"LEGS_pants_greenish_down_move_02\", \"LEGS_pants_greenish_down_move_03\", \"LEGS_pants_greenish_down_move_04\", \"LEGS_pants_greenish_down_move_05\", \"LEGS_pants_greenish_down_move_06\", \"LEGS_pants_greenish_down_move_07\", \"LEGS_pants_greenish_down_move_08\", \"LEGS_pants_greenish_down_move_09\",\r\n\r\n            \"LEGS_pants_greenish_left_slash_01\", \"LEGS_pants_greenish_left_slash_02\", \"LEGS_pants_greenish_left_slash_03\", \"LEGS_pants_greenish_left_slash_04\", \"LEGS_pants_greenish_left_slash_05\", \"LEGS_pants_greenish_left_slash_06\",\r\n            \"LEGS_pants_greenish_right_slash_01\", \"LEGS_pants_greenish_right_slash_02\", \"LEGS_pants_greenish_right_slash_03\", \"LEGS_pants_greenish_right_slash_04\", \"LEGS_pants_greenish_right_slash_05\", \"LEGS_pants_greenish_right_slash_06\",\r\n            \"LEGS_pants_greenish_up_slash_01\", \"LEGS_pants_greenish_up_slash_02\", \"LEGS_pants_greenish_up_slash_03\", \"LEGS_pants_greenish_up_slash_04\", \"LEGS_pants_greenish_up_slash_05\", \"LEGS_pants_greenish_up_slash_06\",\r\n            \"LEGS_pants_greenish_down_slash_01\", \"LEGS_pants_greenish_down_slash_02\", \"LEGS_pants_greenish_down_slash_03\", \"LEGS_pants_greenish_down_slash_04\", \"LEGS_pants_greenish_down_slash_05\", \"LEGS_pants_greenish_down_slash_06\",\r\n\r\n            \"LEGS_pants_greenish_left_thrust_01\", \"LEGS_pants_greenish_left_thrust_02\", \"LEGS_pants_greenish_left_thrust_03\", \"LEGS_pants_greenish_left_thrust_04\", \"LEGS_pants_greenish_left_thrust_05\", \"LEGS_pants_greenish_left_thrust_06\", \"LEGS_pants_greenish_left_thrust_07\", \"LEGS_pants_greenish_left_thrust_08\",\r\n            \"LEGS_pants_greenish_right_thrust_01\", \"LEGS_pants_greenish_right_thrust_02\", \"LEGS_pants_greenish_right_thrust_03\", \"LEGS_pants_greenish_right_thrust_04\", \"LEGS_pants_greenish_right_thrust_05\", \"LEGS_pants_greenish_right_thrust_06\", \"LEGS_pants_greenish_right_thrust_07\", \"LEGS_pants_greenish_right_thrust_08\",\r\n            \"LEGS_pants_greenish_up_thrust_01\", \"LEGS_pants_greenish_up_thrust_02\", \"LEGS_pants_greenish_up_thrust_03\", \"LEGS_pants_greenish_up_thrust_04\", \"LEGS_pants_greenish_up_thrust_05\", \"LEGS_pants_greenish_up_thrust_06\", \"LEGS_pants_greenish_up_thrust_07\", \"LEGS_pants_greenish_up_thrust_08\",\r\n            \"LEGS_pants_greenish_down_thrust_01\", \"LEGS_pants_greenish_down_thrust_02\", \"LEGS_pants_greenish_down_thrust_03\", \"LEGS_pants_greenish_down_thrust_04\", \"LEGS_pants_greenish_down_thrust_05\", \"LEGS_pants_greenish_down_thrust_06\", \"LEGS_pants_greenish_down_thrust_07\", \"LEGS_pants_greenish_down_thrust_08\",\r\n\r\n            \"LEGS_pants_greenish_hurt_01\", \"LEGS_pants_greenish_hurt_02\", \"LEGS_pants_greenish_hurt_03\", \"LEGS_pants_greenish_hurt_04\", \"LEGS_pants_greenish_hurt_05\", \"LEGS_pants_greenish_hurt_06\",\r\n\r\n            \"LEGS_robe_skirt_left_move_01\", \"LEGS_robe_skirt_left_move_02\", \"LEGS_robe_skirt_left_move_03\", \"LEGS_robe_skirt_left_move_04\", \"LEGS_robe_skirt_left_move_05\", \"LEGS_robe_skirt_left_move_06\", \"LEGS_robe_skirt_left_move_07\", \"LEGS_robe_skirt_left_move_08\", \"LEGS_robe_skirt_left_move_09\",\r\n            \"LEGS_robe_skirt_right_move_01\", \"LEGS_robe_skirt_right_move_02\", \"LEGS_robe_skirt_right_move_03\", \"LEGS_robe_skirt_right_move_04\", \"LEGS_robe_skirt_right_move_05\", \"LEGS_robe_skirt_right_move_06\", \"LEGS_robe_skirt_right_move_07\", \"LEGS_robe_skirt_right_move_08\", \"LEGS_robe_skirt_right_move_09\",\r\n            \"LEGS_robe_skirt_up_move_01\", \"LEGS_robe_skirt_up_move_02\", \"LEGS_robe_skirt_up_move_03\", \"LEGS_robe_skirt_up_move_04\", \"LEGS_robe_skirt_up_move_05\", \"LEGS_robe_skirt_up_move_06\", \"LEGS_robe_skirt_up_move_07\", \"LEGS_robe_skirt_up_move_08\", \"LEGS_robe_skirt_up_move_09\",\r\n            \"LEGS_robe_skirt_down_move_01\", \"LEGS_robe_skirt_down_move_02\", \"LEGS_robe_skirt_down_move_03\", \"LEGS_robe_skirt_down_move_04\", \"LEGS_robe_skirt_down_move_05\", \"LEGS_robe_skirt_down_move_06\", \"LEGS_robe_skirt_down_move_07\", \"LEGS_robe_skirt_down_move_08\", \"LEGS_robe_skirt_down_move_09\",\r\n\r\n            \"LEGS_robe_skirt_left_slash_01\", \"LEGS_robe_skirt_left_slash_02\", \"LEGS_robe_skirt_left_slash_03\", \"LEGS_robe_skirt_left_slash_04\", \"LEGS_robe_skirt_left_slash_05\", \"LEGS_robe_skirt_left_slash_06\",\r\n            \"LEGS_robe_skirt_right_slash_01\", \"LEGS_robe_skirt_right_slash_02\", \"LEGS_robe_skirt_right_slash_03\", \"LEGS_robe_skirt_right_slash_04\", \"LEGS_robe_skirt_right_slash_05\", \"LEGS_robe_skirt_right_slash_06\",\r\n            \"LEGS_robe_skirt_up_slash_01\", \"LEGS_robe_skirt_up_slash_02\", \"LEGS_robe_skirt_up_slash_03\", \"LEGS_robe_skirt_up_slash_04\", \"LEGS_robe_skirt_up_slash_05\", \"LEGS_robe_skirt_up_slash_06\",\r\n            \"LEGS_robe_skirt_down_slash_01\", \"LEGS_robe_skirt_down_slash_02\", \"LEGS_robe_skirt_down_slash_03\", \"LEGS_robe_skirt_down_slash_04\", \"LEGS_robe_skirt_down_slash_05\", \"LEGS_robe_skirt_down_slash_06\",\r\n\r\n            \"LEGS_robe_skirt_left_thrust_01\", \"LEGS_robe_skirt_left_thrust_02\", \"LEGS_robe_skirt_left_thrust_03\", \"LEGS_robe_skirt_left_thrust_04\", \"LEGS_robe_skirt_left_thrust_05\", \"LEGS_robe_skirt_left_thrust_06\", \"LEGS_robe_skirt_left_thrust_07\", \"LEGS_robe_skirt_left_thrust_08\",\r\n            \"LEGS_robe_skirt_right_thrust_01\", \"LEGS_robe_skirt_right_thrust_02\", \"LEGS_robe_skirt_right_thrust_03\", \"LEGS_robe_skirt_right_thrust_04\", \"LEGS_robe_skirt_right_thrust_05\", \"LEGS_robe_skirt_right_thrust_06\", \"LEGS_robe_skirt_right_thrust_07\", \"LEGS_robe_skirt_right_thrust_08\",\r\n            \"LEGS_robe_skirt_up_thrust_01\", \"LEGS_robe_skirt_up_thrust_02\", \"LEGS_robe_skirt_up_thrust_03\", \"LEGS_robe_skirt_up_thrust_04\", \"LEGS_robe_skirt_up_thrust_05\", \"LEGS_robe_skirt_up_thrust_06\", \"LEGS_robe_skirt_up_thrust_07\", \"LEGS_robe_skirt_up_thrust_08\",\r\n            \"LEGS_robe_skirt_down_thrust_01\", \"LEGS_robe_skirt_down_thrust_02\", \"LEGS_robe_skirt_down_thrust_03\", \"LEGS_robe_skirt_down_thrust_04\", \"LEGS_robe_skirt_down_thrust_05\", \"LEGS_robe_skirt_down_thrust_06\", \"LEGS_robe_skirt_down_thrust_07\", \"LEGS_robe_skirt_down_thrust_08\",\r\n\r\n            \"LEGS_robe_skirt_hurt_01\", \"LEGS_robe_skirt_hurt_02\", \"LEGS_robe_skirt_hurt_03\", \"LEGS_robe_skirt_hurt_04\", \"LEGS_robe_skirt_hurt_05\", \"LEGS_robe_skirt_hurt_06\",\r\n\r\n            \"LEGS_plate_pants_left_move_01\", \"LEGS_plate_pants_left_move_02\", \"LEGS_plate_pants_left_move_03\", \"LEGS_plate_pants_left_move_04\", \"LEGS_plate_pants_left_move_05\", \"LEGS_plate_pants_left_move_06\", \"LEGS_plate_pants_left_move_07\", \"LEGS_plate_pants_left_move_08\", \"LEGS_plate_pants_left_move_09\",\r\n            \"LEGS_plate_pants_right_move_01\", \"LEGS_plate_pants_right_move_02\", \"LEGS_plate_pants_right_move_03\", \"LEGS_plate_pants_right_move_04\", \"LEGS_plate_pants_right_move_05\", \"LEGS_plate_pants_right_move_06\", \"LEGS_plate_pants_right_move_07\", \"LEGS_plate_pants_right_move_08\", \"LEGS_plate_pants_right_move_09\",\r\n            \"LEGS_plate_pants_up_move_01\", \"LEGS_plate_pants_up_move_02\", \"LEGS_plate_pants_up_move_03\", \"LEGS_plate_pants_up_move_04\", \"LEGS_plate_pants_up_move_05\", \"LEGS_plate_pants_up_move_06\", \"LEGS_plate_pants_up_move_07\", \"LEGS_plate_pants_up_move_08\", \"LEGS_plate_pants_up_move_09\",\r\n            \"LEGS_plate_pants_down_move_01\", \"LEGS_plate_pants_down_move_02\", \"LEGS_plate_pants_down_move_03\", \"LEGS_plate_pants_down_move_04\", \"LEGS_plate_pants_down_move_05\", \"LEGS_plate_pants_down_move_06\", \"LEGS_plate_pants_down_move_07\", \"LEGS_plate_pants_down_move_08\", \"LEGS_plate_pants_down_move_09\",\r\n\r\n            \"LEGS_plate_pants_left_slash_01\", \"LEGS_plate_pants_left_slash_02\", \"LEGS_plate_pants_left_slash_03\", \"LEGS_plate_pants_left_slash_04\", \"LEGS_plate_pants_left_slash_05\", \"LEGS_plate_pants_left_slash_06\",\r\n            \"LEGS_plate_pants_right_slash_01\", \"LEGS_plate_pants_right_slash_02\", \"LEGS_plate_pants_right_slash_03\", \"LEGS_plate_pants_right_slash_04\", \"LEGS_plate_pants_right_slash_05\", \"LEGS_plate_pants_right_slash_06\",\r\n            \"LEGS_plate_pants_up_slash_01\", \"LEGS_plate_pants_up_slash_02\", \"LEGS_plate_pants_up_slash_03\", \"LEGS_plate_pants_up_slash_04\", \"LEGS_plate_pants_up_slash_05\", \"LEGS_plate_pants_up_slash_06\",\r\n            \"LEGS_plate_pants_down_slash_01\", \"LEGS_plate_pants_down_slash_02\", \"LEGS_plate_pants_down_slash_03\", \"LEGS_plate_pants_down_slash_04\", \"LEGS_plate_pants_down_slash_05\", \"LEGS_plate_pants_down_slash_06\",\r\n\r\n            \"LEGS_plate_pants_left_thrust_01\", \"LEGS_plate_pants_left_thrust_02\", \"LEGS_plate_pants_left_thrust_03\", \"LEGS_plate_pants_left_thrust_04\", \"LEGS_plate_pants_left_thrust_05\", \"LEGS_plate_pants_left_thrust_06\", \"LEGS_plate_pants_left_thrust_07\", \"LEGS_plate_pants_left_thrust_08\",\r\n            \"LEGS_plate_pants_right_thrust_01\", \"LEGS_plate_pants_right_thrust_02\", \"LEGS_plate_pants_right_thrust_03\", \"LEGS_plate_pants_right_thrust_04\", \"LEGS_plate_pants_right_thrust_05\", \"LEGS_plate_pants_right_thrust_06\", \"LEGS_plate_pants_right_thrust_07\", \"LEGS_plate_pants_right_thrust_08\",\r\n            \"LEGS_plate_pants_up_thrust_01\", \"LEGS_plate_pants_up_thrust_02\", \"LEGS_plate_pants_up_thrust_03\", \"LEGS_plate_pants_up_thrust_04\", \"LEGS_plate_pants_up_thrust_05\", \"LEGS_plate_pants_up_thrust_06\", \"LEGS_plate_pants_up_thrust_07\", \"LEGS_plate_pants_up_thrust_08\",\r\n            \"LEGS_plate_pants_down_thrust_01\", \"LEGS_plate_pants_down_thrust_02\", \"LEGS_plate_pants_down_thrust_03\", \"LEGS_plate_pants_down_thrust_04\", \"LEGS_plate_pants_down_thrust_05\", \"LEGS_plate_pants_down_thrust_06\", \"LEGS_plate_pants_down_thrust_07\", \"LEGS_plate_pants_down_thrust_08\",\r\n\r\n            \"LEGS_plate_pants_hurt_01\", \"LEGS_plate_pants_hurt_02\", \"LEGS_plate_pants_hurt_03\", \"LEGS_plate_pants_hurt_04\", \"LEGS_plate_pants_hurt_05\", \"LEGS_plate_pants_hurt_06\",\r\n\r\n            \"FEET_shoes_brown_left_move_01\", \"FEET_shoes_brown_left_move_02\", \"FEET_shoes_brown_left_move_03\", \"FEET_shoes_brown_left_move_04\", \"FEET_shoes_brown_left_move_05\", \"FEET_shoes_brown_left_move_06\", \"FEET_shoes_brown_left_move_07\", \"FEET_shoes_brown_left_move_08\", \"FEET_shoes_brown_left_move_09\",\r\n            \"FEET_shoes_brown_right_move_01\", \"FEET_shoes_brown_right_move_02\", \"FEET_shoes_brown_right_move_03\", \"FEET_shoes_brown_right_move_04\", \"FEET_shoes_brown_right_move_05\", \"FEET_shoes_brown_right_move_06\", \"FEET_shoes_brown_right_move_07\", \"FEET_shoes_brown_right_move_08\", \"FEET_shoes_brown_right_move_09\",\r\n            \"FEET_shoes_brown_up_move_01\", \"FEET_shoes_brown_up_move_02\", \"FEET_shoes_brown_up_move_03\", \"FEET_shoes_brown_up_move_04\", \"FEET_shoes_brown_up_move_05\", \"FEET_shoes_brown_up_move_06\", \"FEET_shoes_brown_up_move_07\", \"FEET_shoes_brown_up_move_08\", \"FEET_shoes_brown_up_move_09\",\r\n            \"FEET_shoes_brown_down_move_01\", \"FEET_shoes_brown_down_move_02\", \"FEET_shoes_brown_down_move_03\", \"FEET_shoes_brown_down_move_04\", \"FEET_shoes_brown_down_move_05\", \"FEET_shoes_brown_down_move_06\", \"FEET_shoes_brown_down_move_07\", \"FEET_shoes_brown_down_move_08\", \"FEET_shoes_brown_down_move_09\",\r\n\r\n            \"FEET_shoes_brown_left_slash_01\", \"FEET_shoes_brown_left_slash_02\", \"FEET_shoes_brown_left_slash_03\", \"FEET_shoes_brown_left_slash_04\", \"FEET_shoes_brown_left_slash_05\", \"FEET_shoes_brown_left_slash_06\",\r\n            \"FEET_shoes_brown_right_slash_01\", \"FEET_shoes_brown_right_slash_02\", \"FEET_shoes_brown_right_slash_03\", \"FEET_shoes_brown_right_slash_04\", \"FEET_shoes_brown_right_slash_05\", \"FEET_shoes_brown_right_slash_06\",\r\n            \"FEET_shoes_brown_up_slash_01\", \"FEET_shoes_brown_up_slash_02\", \"FEET_shoes_brown_up_slash_03\", \"FEET_shoes_brown_up_slash_04\", \"FEET_shoes_brown_up_slash_05\", \"FEET_shoes_brown_up_slash_06\",\r\n            \"FEET_shoes_brown_down_slash_01\", \"FEET_shoes_brown_down_slash_02\", \"FEET_shoes_brown_down_slash_03\", \"FEET_shoes_brown_down_slash_04\", \"FEET_shoes_brown_down_slash_05\", \"FEET_shoes_brown_down_slash_06\",\r\n\r\n            \"FEET_shoes_brown_left_thrust_01\", \"FEET_shoes_brown_left_thrust_02\", \"FEET_shoes_brown_left_thrust_03\", \"FEET_shoes_brown_left_thrust_04\", \"FEET_shoes_brown_left_thrust_05\", \"FEET_shoes_brown_left_thrust_06\", \"FEET_shoes_brown_left_thrust_07\", \"FEET_shoes_brown_left_thrust_08\",\r\n            \"FEET_shoes_brown_right_thrust_01\", \"FEET_shoes_brown_right_thrust_02\", \"FEET_shoes_brown_right_thrust_03\", \"FEET_shoes_brown_right_thrust_04\", \"FEET_shoes_brown_right_thrust_05\", \"FEET_shoes_brown_right_thrust_06\", \"FEET_shoes_brown_right_thrust_07\", \"FEET_shoes_brown_right_thrust_08\",\r\n            \"FEET_shoes_brown_up_thrust_01\", \"FEET_shoes_brown_up_thrust_02\", \"FEET_shoes_brown_up_thrust_03\", \"FEET_shoes_brown_up_thrust_04\", \"FEET_shoes_brown_up_thrust_05\", \"FEET_shoes_brown_up_thrust_06\", \"FEET_shoes_brown_up_thrust_07\", \"FEET_shoes_brown_up_thrust_08\",\r\n            \"FEET_shoes_brown_down_thrust_01\", \"FEET_shoes_brown_down_thrust_02\", \"FEET_shoes_brown_down_thrust_03\", \"FEET_shoes_brown_down_thrust_04\", \"FEET_shoes_brown_down_thrust_05\", \"FEET_shoes_brown_down_thrust_06\", \"FEET_shoes_brown_down_thrust_07\", \"FEET_shoes_brown_down_thrust_08\",\r\n\r\n            \"FEET_shoes_brown_hurt_01\", \"FEET_shoes_brown_hurt_02\", \"FEET_shoes_brown_hurt_03\", \"FEET_shoes_brown_hurt_04\", \"FEET_shoes_brown_hurt_05\", \"FEET_shoes_brown_hurt_06\",\r\n\r\n            \"FEET_plate_shoes_left_move_01\", \"FEET_plate_shoes_left_move_02\", \"FEET_plate_shoes_left_move_03\", \"FEET_plate_shoes_left_move_04\", \"FEET_plate_shoes_left_move_05\", \"FEET_plate_shoes_left_move_06\", \"FEET_plate_shoes_left_move_07\", \"FEET_plate_shoes_left_move_08\", \"FEET_plate_shoes_left_move_09\",\r\n            \"FEET_plate_shoes_right_move_01\", \"FEET_plate_shoes_right_move_02\", \"FEET_plate_shoes_right_move_03\", \"FEET_plate_shoes_right_move_04\", \"FEET_plate_shoes_right_move_05\", \"FEET_plate_shoes_right_move_06\", \"FEET_plate_shoes_right_move_07\", \"FEET_plate_shoes_right_move_08\", \"FEET_plate_shoes_right_move_09\",\r\n            \"FEET_plate_shoes_up_move_01\", \"FEET_plate_shoes_up_move_02\", \"FEET_plate_shoes_up_move_03\", \"FEET_plate_shoes_up_move_04\", \"FEET_plate_shoes_up_move_05\", \"FEET_plate_shoes_up_move_06\", \"FEET_plate_shoes_up_move_07\", \"FEET_plate_shoes_up_move_08\", \"FEET_plate_shoes_up_move_09\",\r\n            \"FEET_plate_shoes_down_move_01\", \"FEET_plate_shoes_down_move_02\", \"FEET_plate_shoes_down_move_03\", \"FEET_plate_shoes_down_move_04\", \"FEET_plate_shoes_down_move_05\", \"FEET_plate_shoes_down_move_06\", \"FEET_plate_shoes_down_move_07\", \"FEET_plate_shoes_down_move_08\", \"FEET_plate_shoes_down_move_09\",\r\n\r\n            \"FEET_plate_shoes_left_slash_01\", \"FEET_plate_shoes_left_slash_02\", \"FEET_plate_shoes_left_slash_03\", \"FEET_plate_shoes_left_slash_04\", \"FEET_plate_shoes_left_slash_05\", \"FEET_plate_shoes_left_slash_06\",\r\n            \"FEET_plate_shoes_right_slash_01\", \"FEET_plate_shoes_right_slash_02\", \"FEET_plate_shoes_right_slash_03\", \"FEET_plate_shoes_right_slash_04\", \"FEET_plate_shoes_right_slash_05\", \"FEET_plate_shoes_right_slash_06\",\r\n            \"FEET_plate_shoes_up_slash_01\", \"FEET_plate_shoes_up_slash_02\", \"FEET_plate_shoes_up_slash_03\", \"FEET_plate_shoes_up_slash_04\", \"FEET_plate_shoes_up_slash_05\", \"FEET_plate_shoes_up_slash_06\",\r\n            \"FEET_plate_shoes_down_slash_01\", \"FEET_plate_shoes_down_slash_02\", \"FEET_plate_shoes_down_slash_03\", \"FEET_plate_shoes_down_slash_04\", \"FEET_plate_shoes_down_slash_05\", \"FEET_plate_shoes_down_slash_06\",\r\n\r\n            \"FEET_plate_shoes_left_thrust_01\", \"FEET_plate_shoes_left_thrust_02\", \"FEET_plate_shoes_left_thrust_03\", \"FEET_plate_shoes_left_thrust_04\", \"FEET_plate_shoes_left_thrust_05\", \"FEET_plate_shoes_left_thrust_06\", \"FEET_plate_shoes_left_thrust_07\", \"FEET_plate_shoes_left_thrust_08\",\r\n            \"FEET_plate_shoes_right_thrust_01\", \"FEET_plate_shoes_right_thrust_02\", \"FEET_plate_shoes_right_thrust_03\", \"FEET_plate_shoes_right_thrust_04\", \"FEET_plate_shoes_right_thrust_05\", \"FEET_plate_shoes_right_thrust_06\", \"FEET_plate_shoes_right_thrust_07\", \"FEET_plate_shoes_right_thrust_08\",\r\n            \"FEET_plate_shoes_up_thrust_01\", \"FEET_plate_shoes_up_thrust_02\", \"FEET_plate_shoes_up_thrust_03\", \"FEET_plate_shoes_up_thrust_04\", \"FEET_plate_shoes_up_thrust_05\", \"FEET_plate_shoes_up_thrust_06\", \"FEET_plate_shoes_up_thrust_07\", \"FEET_plate_shoes_up_thrust_08\",\r\n            \"FEET_plate_shoes_down_thrust_01\", \"FEET_plate_shoes_down_thrust_02\", \"FEET_plate_shoes_down_thrust_03\", \"FEET_plate_shoes_down_thrust_04\", \"FEET_plate_shoes_down_thrust_05\", \"FEET_plate_shoes_down_thrust_06\", \"FEET_plate_shoes_down_thrust_07\", \"FEET_plate_shoes_down_thrust_08\",\r\n\r\n            \"FEET_plate_shoes_hurt_01\", \"FEET_plate_shoes_hurt_02\", \"FEET_plate_shoes_hurt_03\", \"FEET_plate_shoes_hurt_04\", \"FEET_plate_shoes_hurt_05\", \"FEET_plate_shoes_hurt_06\",\r\n\r\n            // Остальные мобы\r\n            \"slime_left_01\", \"slime_left_02\", \"slime_left_03\",\r\n            \"slime_right_01\", \"slime_right_02\", \"slime_right_03\",\r\n\r\n            \"slime_death_01\", \"slime_death_02\",\r\n\r\n            \"skeleton_left_move_01\", \"skeleton_left_move_02\", \"skeleton_left_move_03\", \"skeleton_left_move_04\", \"skeleton_left_move_05\", \"skeleton_left_move_06\", \"skeleton_left_move_07\", \"skeleton_left_move_08\", \"skeleton_left_move_09\",\r\n            \"skeleton_right_move_01\", \"skeleton_right_move_02\", \"skeleton_right_move_03\", \"skeleton_right_move_04\", \"skeleton_right_move_05\", \"skeleton_right_move_06\", \"skeleton_right_move_07\", \"skeleton_right_move_08\", \"skeleton_right_move_09\",\r\n            \"skeleton_up_move_01\", \"skeleton_up_move_02\", \"skeleton_up_move_03\", \"skeleton_up_move_04\", \"skeleton_up_move_05\", \"skeleton_up_move_06\", \"skeleton_up_move_07\", \"skeleton_up_move_08\", \"skeleton_up_move_09\",\r\n            \"skeleton_down_move_01\", \"skeleton_down_move_02\", \"skeleton_down_move_03\", \"skeleton_down_move_04\", \"skeleton_down_move_05\", \"skeleton_down_move_06\", \"skeleton_down_move_07\", \"skeleton_down_move_08\", \"skeleton_down_move_09\",\r\n\r\n            \"spider_left_move_01\", \"spider_left_move_02\", \"spider_left_move_03\", \"spider_left_move_04\", \"spider_left_move_05\", \"spider_left_move_06\", \"spider_left_move_07\",\r\n            \"spider_right_move_01\", \"spider_right_move_02\", \"spider_right_move_03\", \"spider_right_move_04\", \"spider_right_move_05\", \"spider_right_move_06\", \"spider_right_move_07\",\r\n            \"spider_up_move_01\", \"spider_up_move_02\",  \"spider_up_move_03\", \"spider_up_move_04\", \"spider_up_move_05\", \"spider_up_move_06\", \"spider_up_move_07\",\r\n            \"spider_down_move_01\", \"spider_down_move_02\", \"spider_down_move_03\", \"spider_down_move_04\", \"spider_down_move_05\", \"spider_down_move_06\", \"spider_down_move_07\",\r\n\r\n            \"spider_left_attack_01\", \"spider_left_attack_02\", \"spider_left_attack_03\",\r\n            \"spider_right_attack_01\", \"spider_right_attack_02\", \"spider_right_attack_03\",\r\n            \"spider_up_attack_01\", \"spider_up_attack_02\", \"spider_up_attack_03\",\r\n            \"spider_down_attack_01\", \"spider_down_attack_02\", \"spider_down_attack_03\",\r\n\r\n            \"spider_death_01\", \"spider_death_02\", \"spider_death_03\", \"spider_death_04\",\r\n\r\n            \"imp_left_move_01\", \"imp_left_move_02\", \"imp_left_move_03\", \"imp_left_move_04\",\r\n            \"imp_right_move_01\", \"imp_right_move_02\", \"imp_right_move_03\", \"imp_right_move_04\",\r\n            \"imp_up_move_01\", \"imp_up_move_02\",  \"imp_up_move_03\", \"imp_up_move_04\",\r\n            \"imp_down_move_01\", \"imp_down_move_02\", \"imp_down_move_03\", \"imp_down_move_04\",\r\n\r\n            \"imp_left_attack_01\", \"imp_left_attack_02\", \"imp_left_attack_03\", \"imp_left_attack_04\",\r\n            \"imp_right_attack_01\", \"imp_right_attack_02\", \"imp_right_attack_03\", \"imp_right_attack_04\",\r\n            \"imp_up_attack_01\", \"imp_up_attack_02\", \"imp_up_attack_03\", \"imp_up_attack_04\",\r\n            \"imp_down_attack_01\", \"imp_down_attack_02\", \"imp_down_attack_03\", \"imp_down_attack_04\",\r\n\r\n            \"imp_death_01\", \"imp_death_02\", \"imp_death_03\", \"imp_death_04\", \"imp_death_05\", \"imp_death_06\", \"imp_death_07\", \"imp_death_08\",\r\n\r\n            \"boxClosed\", \"boxOpened\", \"barrelClosed\", \"barrelOpened\", \"bagBig\", \"bagMedium\", \"bagSmall\", \"altar0\", \"altar1\", \"water\", \"gate2\"\r\n\r\n    };\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/content/Storage.java	(revision cb083484c6fe6b906aed841b0ba31df6c5f39743)
+++ src/content/Storage.java	(date 1598793859244)
@@ -73,7 +73,8 @@
 
     public static final String[] aabbString = {
             "wall0", "wall1", "wall2", "wall3", "wall4", "wall5", "wall6",
-            "entranceToFirstLevel", "entranceToSecondLevel", "entranceToThirdLevel", "entranceToForthLevel", "entranceFromThirdToSecondLevel", "entranceFromForthToSecondLevel", "entranceFromTavernToTown", "entranceFromForgeToTown",
+            "entranceToFirstLevel", "entranceToSecondLevel", "entranceToThirdLevel", "entranceToForthLevel", "entranceFromThirdToSecondLevel", "entranceFromForthToSecondLevel",
+            "entranceFromTavernToTown", "entranceFromForgeToTown", "entranceFromFourthLevelToTown",
             "toBuyBeer"
     };
 
Index: src/mobs/Spider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mobs;\r\n\r\nimport content.AudioMaster;\r\nimport content.Source;\r\nimport math.AABB;\r\nimport math.CollisionMessage;\r\nimport singletons.SingletonMobs;\r\nimport singletons.SingletonPlayer;\r\n\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\npublic class Spider extends Mob {\r\n    private Source hurtSound, hitSound;\r\n    private final int hurtSoundId, hitSoundId, deathSoundId;\r\n    private TimerTask knockbackTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementKnockBackTime();\r\n            switch (getKnockBackDirection()) {\r\n                case \"left\":\r\n                    knockBackLeft();\r\n                    break;\r\n                case \"right\":\r\n                    knockBackRight();\r\n                    break;\r\n                case \"up\":\r\n                    knockBackUp();\r\n                    break;\r\n                case \"down\":\r\n                    knockBackDown();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    private TimerTask animationTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementAnimationTime();\r\n            if (getAnimationTime() == 8) setAnimationTime(2);\r\n        }\r\n    };\r\n    private TimerTask hitAnimationTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementHitAnimationTime();\r\n            if (getHitAnimationTime() == 2) {\r\n                if (isAttackLeft()) getAttackBox().update(getX() + 4, getY() + 24, getX() + 14, getY() + 48);\r\n                else if (isAttackRight()) getAttackBox().update(getX() + 49, getY() + 24, getX() + 59, getY() + 48);\r\n                else if (isAttackUp()) getAttackBox().update(getX() + 16, getY() + 11, getX() + 45, getY() + 19);\r\n                else if (isAttackDown()) getAttackBox().update(getX() + 16, getY() + 43, getX() + 45, getY() + 54);\r\n            }\r\n            else if (getHitAnimationTime() == 4) {\r\n                setAttackLeft(false);\r\n                setAttackRight(false);\r\n                setAttackUp(false);\r\n                setAttackDown(false);\r\n                getAttackBox().update(0,0,0,0);\r\n                setHitAnimationTime(1);\r\n                stopTimer();\r\n            }\r\n        }\r\n    };\r\n    private final TimerTask deathTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementDeathAnimationTime();\r\n            if (getDeathAnimationTime() == 4) deathTask.cancel();\r\n        }\r\n    };\r\n\r\n    public Spider(int x, int y, int speed, int health, int armor, int damage) {\r\n        super(x, y, speed, health, armor, damage);\r\n        setAnimationTime(2);\r\n        setHitAnimationTime(1);\r\n        setDeathAnimationTime(0);\r\n        setKnockBackTime(0);\r\n        getHitbox().update(getX() + 10, getY() + 15, getX() + 51, getY() + 49);\r\n        getCollisionBox().update(getX() + 10, getY() + 15, getX() + 51, getY() + 49);\r\n        setMoveDirection(\"left\");\r\n        hurtSound = new Source(0);\r\n        hitSound = new Source(0);\r\n        hurtSoundId = AudioMaster.loadSound(\"sounds/spiderHurt\");\r\n        hitSoundId = AudioMaster.loadSound(\"sounds/spiderAttack\");\r\n        deathSoundId = AudioMaster.loadSound(\"sounds/spiderDeath\");\r\n    }\r\n\r\n    public void stopTimer() {\r\n        getTimer().cancel();\r\n        getTimer().purge();\r\n        setTimer(new Timer());\r\n        knockbackTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                incrementKnockBackTime();\r\n                switch (getKnockBackDirection()) {\r\n                    case \"left\":\r\n                        knockBackLeft();\r\n                        break;\r\n                    case \"right\":\r\n                        knockBackRight();\r\n                        break;\r\n                    case \"up\":\r\n                        knockBackUp();\r\n                        break;\r\n                    case \"down\":\r\n                        knockBackDown();\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        animationTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                incrementAnimationTime();\r\n                if (getAnimationTime() == 8) setAnimationTime(2);\r\n            }\r\n        };\r\n        hitAnimationTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                incrementHitAnimationTime();\r\n                if (getHitAnimationTime() == 2) {\r\n                    if (isAttackLeft()) getAttackBox().update(getX() + 4, getY() + 24, getX() + 14, getY() + 48);\r\n                    else if (isAttackRight()) getAttackBox().update(getX() + 49, getY() + 24, getX() + 59, getY() + 48);\r\n                    else if (isAttackUp()) getAttackBox().update(getX() + 16, getY() + 11, getX() + 45, getY() + 19);\r\n                    else if (isAttackDown()) getAttackBox().update(getX() + 16, getY() + 43, getX() + 45, getY() + 54);\r\n                }\r\n                else if (getHitAnimationTime() == 4) {\r\n                    setAttackLeft(false);\r\n                    setAttackRight(false);\r\n                    setAttackUp(false);\r\n                    setAttackDown(false);\r\n                    getAttackBox().update(0,0,0,0);\r\n                    setHitAnimationTime(1);\r\n                    stopTimer();\r\n                }\r\n            }\r\n        };\r\n        setKnockBackTime(0);\r\n        setImmortal(false);\r\n        setAnimationTaskStarted(false);\r\n        setHitAnimationTaskStarted(false);\r\n        setKnockBackTaskStarted(false);\r\n        getAttackBox().update(0,0,0,0);\r\n    }\r\n\r\n    public void update() {\r\n        if (getKnockBackTime() >= 25) stopTimer();\r\n\r\n        // Паук получает урон от игрока\r\n        if (AABB.AABBvsAABB(SingletonPlayer.player.getAttackBox(), getHitbox()) && !isImmortal()) {\r\n            if (SingletonPlayer.player.isAttackLeft()) setKnockBackDirection(\"left\");\r\n            else if (SingletonPlayer.player.isAttackRight()) setKnockBackDirection(\"right\");\r\n            else if (SingletonPlayer.player.isAttackUp()) setKnockBackDirection(\"up\");\r\n            else if (SingletonPlayer.player.isAttackDown()) setKnockBackDirection(\"down\");\r\n\r\n            setHealth(getHealth() - SingletonPlayer.player.getDamage());\r\n            if (getHealth() <= 0) {\r\n                setDead(true);\r\n                knockbackTask.cancel();\r\n                animationTask.cancel();\r\n                hitAnimationTask.cancel();\r\n                getAttackBox().clear();\r\n                getHitbox().clear();\r\n                getCollisionBox().clear();\r\n                hurtSound.stop(hurtSoundId);\r\n                hurtSound.play(deathSoundId);\r\n                getTimer().schedule(getDeathTask(), 0, 120);\r\n            }\r\n            else {\r\n                if (!isKnockBackTaskStarted()) {\r\n                    setImmortal(true);\r\n                    setKnockBackTaskStarted(true);\r\n                    setAttackToFalse();\r\n                    getAttackBox().update(0,0,0,0);\r\n                    getTimer().schedule(getKnockbackTask(), 0, 10);\r\n                }\r\n                hurtSound.play(hurtSoundId);\r\n            }\r\n        }\r\n\r\n        if (!isDead()) {\r\n            // Паук наносит удар при соприкосновении с игроком\r\n            if (AABB.AABBvsAABB2(getHitbox(), SingletonPlayer.player.getHitbox())) {\r\n                switch (CollisionMessage.getMessage()) {\r\n                    case \"left\":\r\n                        setAttackLeft(true);\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            hitSound.play(hitSoundId);\r\n                            getTimer().schedule(hitAnimationTask, 0, 300);\r\n                        }\r\n                        break;\r\n                    case \"right\":\r\n                        setAttackRight(true);\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            hitSound.play(hitSoundId);\r\n                            getTimer().schedule(hitAnimationTask, 0, 300);\r\n                        }\r\n                        break;\r\n                    case \"up\":\r\n                        setAttackUp(true);\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            hitSound.play(hitSoundId);\r\n                            getTimer().schedule(hitAnimationTask, 0, 300);\r\n                        }\r\n                        break;\r\n                    case \"down\":\r\n                        setAttackDown(true);\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            hitSound.play(hitSoundId);\r\n                            getTimer().schedule(hitAnimationTask, 0, 300);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            // Столкновение с мобами\r\n            for (Mob mob : SingletonMobs.mobList) {\r\n                if (!(mob instanceof Player) && !mob.isDead() &&\r\n                        AABB.AABBvsAABB2(getCollisionBox(), mob.getCollisionBox()))\r\n                    stop(CollisionMessage.getMessage());\r\n            }\r\n\r\n            if (!isAnimationTaskStarted()) {\r\n                setAnimationTaskStarted(true);\r\n                getTimer().schedule(getAnimationTask(), 0, 150);\r\n            }\r\n            switch (getMoveDirection()) {\r\n                case \"left\":\r\n                    getHitbox().update(getX() + 17, getY() + 16, getX() + 47, getY() + 51);\r\n                    getCollisionBox().update(getX() + 17, getY() + 16, getX() + 47, getY() + 51);\r\n                    break;\r\n                case \"right\":\r\n                    getHitbox().update(getX() + 16, getY() + 16, getX() + 46, getY() + 51);\r\n                    getCollisionBox().update(getX() + 16, getY() + 16, getX() + 46, getY() + 51);\r\n                    break;\r\n                case \"up\":\r\n                    getHitbox().update(getX() + 10, getY() + 19, getX() + 51, getY() + 50);\r\n                    getCollisionBox().update(getX() + 10, getY() + 19, getX() + 51, getY() + 50);\r\n                    break;\r\n                case \"down\":\r\n                    getHitbox().update(getX() + 10, getY() + 15, getX() + 51, getY() + 49);\r\n                    getCollisionBox().update(getX() + 10, getY() + 15, getX() + 51, getY() + 49);\r\n                    break;\r\n            }\r\n\r\n            // Преследование игрока\r\n            if (!SingletonPlayer.player.isScrollMenu() && !isKnockBackTaskStarted() && !isAttack())\r\n                moveTo(AABB.getFirstBoxPosition(SingletonPlayer.player.getHitbox(), getHitbox()));\r\n        }\r\n    }\r\n\r\n    public TimerTask getKnockbackTask() { return knockbackTask; }\r\n\r\n    public TimerTask getAnimationTask() { return animationTask; }\r\n\r\n    public TimerTask getDeathTask() { return deathTask; }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/mobs/Spider.java	(revision cb083484c6fe6b906aed841b0ba31df6c5f39743)
+++ src/mobs/Spider.java	(date 1598796458497)
@@ -138,6 +138,7 @@
             }
         };
         setKnockBackTime(0);
+        setHitAnimationTime(1);
         setImmortal(false);
         setAnimationTaskStarted(false);
         setHitAnimationTaskStarted(false);
Index: src/mobs/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mobs;\r\n\r\nimport content.AudioMaster;\r\nimport content.Source;\r\nimport content.Storage;\r\nimport math.AABB;\r\nimport objects.Armor;\r\nimport objects.Weapon;\r\nimport singletons.SingletonMobs;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\nimport static org.lwjgl.glfw.GLFW.*;\r\nimport static org.lwjgl.glfw.GLFW.GLFW_PRESS;\r\nimport static org.lwjgl.opengl.GL11.glTranslated;\r\n\r\npublic class Player extends Mob {\r\n    private HashMap<String, Integer> playerSounds;\r\n    private Source stepSound, hitSound, selectionMenuSound, openMenuSound;\r\n    private Armor head, shoulders, overTorso, torso, belt, hands, legs, feet;\r\n    private Weapon weapon;\r\n    private int money, keys;\r\n    private String bodyAnimation, weaponAnimation, headAnimation, shouldersAnimation, overTorsoAnimation, torsoAnimation, beltAnimation, handsAnimation, legsAnimation, feetAnimation;\r\n    private int player_animation_move_left_i = 2, player_animation_move_right_i = 2, player_animation_move_up_i = 2, player_animation_move_down_i = 2;\r\n    private int player_animation_move_g = 0;\r\n    private int forPlacingCamera = 0;\r\n    private boolean dialogBubble = false;\r\n    private boolean scrollMenu = false;\r\n    private boolean dialogBubbleChoice = false;\r\n    private boolean mainMenuDirection = true;\r\n    private String menuChoice = \"Resume\";\r\n    private TimerTask knockbackTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementKnockBackTime();\r\n            if (getKnockBackTime() <= 15) {\r\n                switch (getKnockBackDirection()) {\r\n                    case \"left\":\r\n                        knockBackLeft();\r\n                        break;\r\n                    case \"right\":\r\n                        knockBackRight();\r\n                        break;\r\n                    case \"up\":\r\n                        knockBackUp();\r\n                        break;\r\n                    case \"down\":\r\n                        knockBackDown();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    private TimerTask hitAnimationTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementHitAnimationTime();\r\n            switch (weapon.getTexture()) {\r\n                case \"rapier\":\r\n                case \"longsword\":\r\n                    if (isAttackLeft()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 49, getY() + 21, getX() + 17, getY() + 45);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackRight()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 47, getY() + 21, getX() + 113, getY() + 45);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackUp()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 11, getY() - 4, getX() + 70, getY() + 33);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 27, getY() - 1, getX() + 95, getY() + 38);\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackDown()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 9, getY() + 44, getX() + 72, getY() + 81);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 28, getY() + 39, getX() + 96, getY() + 78);\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"long_spear\":\r\n                    if (isAttackLeft()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 27, getY() + 42, getX() + 15, getY() + 46);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() - 39, getY() + 42, getX() + 12, getY() + 46);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() - 27, getY() + 42, getX() + 15, getY() + 46);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackRight()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 49, getY() + 42, getX() + 101, getY() + 46);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 51, getY() + 43, getX() + 103, getY() + 46);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 49, getY() + 42, getX() + 101, getY() + 46);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackUp()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 38, getY() - 29, getX() + 42, getY() + 18);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 38, getY() - 37, getX() + 42, getY() + 18);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 38, getY() - 29, getX() + 42, getY() + 18);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackDown()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 26, getY() + 49, getX() + 30, getY() + 95);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 27, getY() + 51, getX() + 31, getY() + 103);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 26, getY() + 49, getX() + 30, getY() + 95);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"stick\":\r\n                    if (isAttackLeft()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() - 7, getY() + 43, getX() + 15, getY() + 45);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() - 19, getY() + 43, getX() + 12, getY() + 45);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() - 7, getY() + 43, getX() + 15, getY() + 45);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackRight()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 49, getY() + 43, getX() + 81, getY() + 45);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 51, getY() + 43, getX() + 83, getY() + 45);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 49, getY() + 43, getX() + 81, getY() + 45);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackUp()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 39, getY() - 9, getX() + 41, getY() + 17);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 39, getY() - 17, getX() + 41, getY() + 17);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 39, getY() - 9, getX() + 41, getY() + 17);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    else if (isAttackDown()) {\r\n                        if (getHitAnimationTime() == 5)\r\n                            getAttackBox().update(getX() + 27, getY() + 49, getX() + 29, getY() + 75);\r\n                        if (getHitAnimationTime() == 6)\r\n                            getAttackBox().update(getX() + 27, getY() + 51, getX() + 29, getY() + 83);\r\n                        if (getHitAnimationTime() == 7)\r\n                            getAttackBox().update(getX() + 27, getY() + 49, getX() + 29, getY() + 75);\r\n                        if (getHitAnimationTime() == 8)\r\n                            getAttackBox().update(0,0,0,0);\r\n                        if (getHitAnimationTime() == 9) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            stopTimer();\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"nothing\":\r\n                    if (getHitAnimationTime() == 7) {\r\n                        setHitAnimationTime(1);\r\n                        setAttackToFalse();\r\n                        getAttackBox().update(0,0,0,0);\r\n                        stopTimer();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    private final TimerTask deathAnimationTask = new TimerTask() {\r\n        @Override\r\n        public void run() {\r\n            incrementDeathAnimationTime();\r\n            if (getDeathAnimationTime() == 6) deathAnimationTask.cancel();\r\n        }\r\n    };\r\n\r\n    public Player(int x, int y, int speed, int health, int armor, int damage) {\r\n        super(x, y, speed, health, armor, damage);\r\n        setMoveDirection(\"down\");\r\n        setHitAnimationTime(1);\r\n        setDeathAnimationTime(0);\r\n        setKnockBackTime(0);\r\n        money = 30;\r\n        keys = 1;\r\n        weapon = new Weapon(\"nothing\", \"slash\", 10, new AABB());\r\n        head = new Armor(\"nothing\", \"head\", 0, true);\r\n        shoulders = new Armor(\"nothing\", \"shoulders\", 0, true);\r\n        overTorso = new Armor(\"nothing\", \"overTorso\", 0, true);\r\n        torso = new Armor(\"shirt_white\", \"torso\", 1, true);\r\n        belt = new Armor(\"nothing\", \"belt\", 0, true);\r\n        hands = new Armor(\"nothing\", \"hands\", 0, true);\r\n        legs = new Armor(\"pants_greenish\", \"legs\", 1, true);\r\n        feet = new Armor(\"nothing\", \"feet\", 0, true);\r\n        bodyAnimation = \"player_stand_\" + getMoveDirection();\r\n        headAnimation = \"HEAD_\" + getHeadTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        beltAnimation = \"BELT_\" + getBeltTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        feetAnimation = \"FEET_\" + getFeetTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n        playerSounds = new HashMap<String, Integer>();\r\n        stepSound = new Source(0);\r\n        hitSound = new Source(0);\r\n        selectionMenuSound = new Source(0);\r\n        openMenuSound = new Source(0);\r\n        for (int i = 0, id = 0; i < Storage.playerSoundString.length; i++)\r\n            playerSounds.put(Storage.playerSoundString[i], id = AudioMaster.loadSound(\"sounds/\" + Storage.playerSoundString[i]));\r\n    }\r\n\r\n    public void stopTimer() {\r\n        getTimer().cancel();\r\n        getTimer().purge();\r\n        setTimer(new Timer());\r\n        knockbackTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                incrementKnockBackTime();\r\n                if (getKnockBackTime() <= 15) {\r\n                    switch (getKnockBackDirection()) {\r\n                        case \"left\":\r\n                            knockBackLeft();\r\n                            break;\r\n                        case \"right\":\r\n                            knockBackRight();\r\n                            break;\r\n                        case \"up\":\r\n                            knockBackUp();\r\n                            break;\r\n                        case \"down\":\r\n                            knockBackDown();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        hitAnimationTask = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                incrementHitAnimationTime();\r\n                switch (weapon.getTexture()) {\r\n                    case \"rapier\":\r\n                    case \"longsword\":\r\n                        if (isAttackLeft()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 49, getY() + 21, getX() + 17, getY() + 45);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 7) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                getAttackBox().update(0,0,0,0);\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackRight()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 47, getY() + 21, getX() + 113, getY() + 45);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 7) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                getAttackBox().update(0,0,0,0);\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackUp()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 11, getY() - 4, getX() + 70, getY() + 33);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 27, getY() - 1, getX() + 95, getY() + 38);\r\n                            if (getHitAnimationTime() == 7) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                getAttackBox().update(0,0,0,0);\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackDown()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 9, getY() + 44, getX() + 72, getY() + 81);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 28, getY() + 39, getX() + 96, getY() + 78);\r\n                            if (getHitAnimationTime() == 7) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                getAttackBox().update(0,0,0,0);\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"long_spear\":\r\n                        if (isAttackLeft()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 27, getY() + 42, getX() + 15, getY() + 46);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() - 39, getY() + 42, getX() + 12, getY() + 46);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() - 27, getY() + 42, getX() + 15, getY() + 46);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackRight()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 49, getY() + 42, getX() + 101, getY() + 46);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 51, getY() + 43, getX() + 103, getY() + 46);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 49, getY() + 42, getX() + 101, getY() + 46);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackUp()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 38, getY() - 29, getX() + 42, getY() + 18);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 38, getY() - 37, getX() + 42, getY() + 18);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 38, getY() - 29, getX() + 42, getY() + 18);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackDown()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 26, getY() + 49, getX() + 30, getY() + 95);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 27, getY() + 51, getX() + 31, getY() + 103);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 26, getY() + 49, getX() + 30, getY() + 95);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"stick\":\r\n                        if (isAttackLeft()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() - 7, getY() + 43, getX() + 15, getY() + 45);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() - 19, getY() + 43, getX() + 12, getY() + 45);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() - 7, getY() + 43, getX() + 15, getY() + 45);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackRight()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 49, getY() + 43, getX() + 81, getY() + 45);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 51, getY() + 43, getX() + 83, getY() + 45);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 49, getY() + 43, getX() + 81, getY() + 45);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackUp()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 39, getY() - 9, getX() + 41, getY() + 17);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 39, getY() - 17, getX() + 41, getY() + 17);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 39, getY() - 9, getX() + 41, getY() + 17);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        else if (isAttackDown()) {\r\n                            if (getHitAnimationTime() == 5)\r\n                                getAttackBox().update(getX() + 27, getY() + 49, getX() + 29, getY() + 75);\r\n                            if (getHitAnimationTime() == 6)\r\n                                getAttackBox().update(getX() + 27, getY() + 51, getX() + 29, getY() + 83);\r\n                            if (getHitAnimationTime() == 7)\r\n                                getAttackBox().update(getX() + 27, getY() + 49, getX() + 29, getY() + 75);\r\n                            if (getHitAnimationTime() == 8)\r\n                                getAttackBox().update(0,0,0,0);\r\n                            if (getHitAnimationTime() == 9) {\r\n                                setHitAnimationTime(1);\r\n                                setAttackToFalse();\r\n                                stopTimer();\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"nothing\":\r\n                        if (getHitAnimationTime() == 7) {\r\n                            setHitAnimationTime(1);\r\n                            setAttackToFalse();\r\n                            getAttackBox().update(0,0,0,0);\r\n                            stopTimer();\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        setKnockBackTime(0);\r\n        setHitAnimationTime(1);\r\n        setImmortal(false);\r\n        setHitAnimationTaskStarted(false);\r\n        setKnockBackTaskStarted(false);\r\n        getAttackBox().update(0,0,0,0);\r\n    }\r\n\r\n    public void update(long window, String level) {\r\n        if (!isDead()) {\r\n            // На игровых уровнях\r\n            if (!level.equals(\"MainMenu\") && !level.equals(\"Town\") && !scrollMenu) {\r\n                if (getKnockBackTime() >= 50) stopTimer();\r\n\r\n                // Получение урона от мобов\r\n                for (Mob mob : SingletonMobs.mobList) {\r\n                    if (!(mob instanceof Player) && !mob.isDead() && !isDead() && !isImmortal() &&\r\n                            AABB.AABBvsAABB(getHitbox(), mob.getAttackBox())) {\r\n                        if (mob.isAttackLeft()) setKnockBackDirection(\"left\");\r\n                        else if (mob.isAttackRight()) setKnockBackDirection(\"right\");\r\n                        else if (mob.isAttackUp()) setKnockBackDirection(\"up\");\r\n                        else if (mob.isAttackDown()) setKnockBackDirection(\"down\");\r\n\r\n                        takeDamage(mob.getDamage());\r\n                        if (getHealth() <= 0) {\r\n                            setDead(true);\r\n                            knockbackTask.cancel();\r\n                            hitAnimationTask.cancel();\r\n                            getTimer().schedule(deathAnimationTask, 0, 200);\r\n                        }\r\n                        else if (!isKnockBackTaskStarted()) {\r\n                            setImmortal(true);\r\n                            setKnockBackTaskStarted(true);\r\n                            setAttackToFalse();\r\n                            getTimer().schedule(knockbackTask, 0, 10);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!isDead()) {\r\n                    // Если игрок стоит\r\n                    bodyAnimation = \"player_stand_\" + getMoveDirection();\r\n                    headAnimation = \"HEAD_\" + getHeadTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n\r\n                    // Если игрок нажимает одну из клавиш\r\n                    if ((glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS)) {\r\n                        if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                        if (player_animation_move_left_i == 3 || player_animation_move_left_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_left_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveUpLeft();\r\n                    }\r\n                    else if ((glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS)) {\r\n                        if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                        if (player_animation_move_right_i == 3 || player_animation_move_right_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_right_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveUpRight();\r\n                    }\r\n                    else if ((glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS)) {\r\n                        if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                        if (player_animation_move_left_i == 3 || player_animation_move_left_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_left_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveDownLeft();\r\n                    }\r\n                    else if ((glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS && glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS)) {\r\n                        if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                        if (player_animation_move_right_i == 3 || player_animation_move_right_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_right_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveDownRight();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) {\r\n                        if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                        if (player_animation_move_left_i == 3 || player_animation_move_left_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_left_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveLeft();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) {\r\n                        if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                        if (player_animation_move_right_i == 3 || player_animation_move_right_i == 6) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_right_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveRight();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_W) == GLFW_PRESS) {\r\n                        if (player_animation_move_up_i == 10) player_animation_move_up_i = 2;\r\n                        if (player_animation_move_up_i == 4 || player_animation_move_up_i == 8) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_up_0\" + player_animation_move_up_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_up_move_0\" + player_animation_move_up_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_up_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveUp();\r\n                    }\r\n                    else if (glfwGetKey(window, GLFW_KEY_S) == GLFW_PRESS) {\r\n                        if (player_animation_move_down_i == 10) player_animation_move_down_i = 2;\r\n                        if (player_animation_move_down_i == 4 || player_animation_move_down_i == 8) {\r\n                            if (level.equals(\"tavern\") || level.equals(\"forge\")) stepSound.play(playerSounds.get(\"stepWood\"));\r\n                            else stepSound.play(playerSounds.get(\"stepStone\"));\r\n                        }\r\n                        bodyAnimation = \"player_walk_down_0\" + player_animation_move_down_i;\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_down_move_0\" + player_animation_move_down_i;\r\n                        if (player_animation_move_g == 8) {\r\n                            player_animation_move_down_i++;\r\n                            player_animation_move_g = 0;\r\n                        }\r\n                        player_animation_move_g++;\r\n                        moveDown();\r\n                    }\r\n                    if (isAttackLeft()) {\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            switch (weapon.getTexture()) {\r\n                                case \"longsword\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 100);\r\n                                    break;\r\n                                case \"rapier\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 90);\r\n                                    break;\r\n                                case \"long_spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 120);\r\n                                    break;\r\n                                case \"spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 85);\r\n                                    break;\r\n                                case \"stick\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 80);\r\n                                    break;\r\n                                case \"nothing\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 70);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get(\"swish\"));\r\n                        bodyAnimation = \"player_\" + getWeapon().getAttackType() + \"_left_0\" + getHitAnimationTime();\r\n                        if (weapon.getTexture().equals(\"nothing\")) weaponAnimation = \"player_slash_left_0\" + getHitAnimationTime();\r\n                        else weaponAnimation = \"weapon_\" + getWeapon().getTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                    }\r\n                    else if (isAttackRight()) {\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            switch (weapon.getTexture()) {\r\n                                case \"longsword\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 100);\r\n                                    break;\r\n                                case \"rapier\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 90);\r\n                                    break;\r\n                                case \"long_spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 120);\r\n                                    break;\r\n                                case \"spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 85);\r\n                                    break;\r\n                                case \"stick\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 80);\r\n                                    break;\r\n                                case \"nothing\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 70);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get(\"swish\"));\r\n                        bodyAnimation = \"player_\" + getWeapon().getAttackType() + \"_right_0\" + getHitAnimationTime();\r\n                        if (weapon.getTexture().equals(\"nothing\")) weaponAnimation = \"player_slash_right_0\" + getHitAnimationTime();\r\n                        else weaponAnimation = \"weapon_\" + getWeapon().getTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                    }\r\n                    else if (isAttackUp()) {\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            switch (weapon.getTexture()) {\r\n                                case \"longsword\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 100);\r\n                                    break;\r\n                                case \"rapier\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 90);\r\n                                    break;\r\n                                case \"long_spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 120);\r\n                                    break;\r\n                                case \"spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 85);\r\n                                    break;\r\n                                case \"stick\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 80);\r\n                                    break;\r\n                                case \"nothing\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 70);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get(\"swish\"));\r\n                        bodyAnimation = \"player_\" + getWeapon().getAttackType() + \"_up_0\" + getHitAnimationTime();\r\n                        if (weapon.getTexture().equals(\"nothing\")) weaponAnimation = \"player_slash_up_0\" + getHitAnimationTime();\r\n                        else weaponAnimation = \"weapon_\" + getWeapon().getTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_up_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                    }\r\n                    else if (isAttackDown()) {\r\n                        if (!isHitAnimationTaskStarted()) {\r\n                            setHitAnimationTaskStarted(true);\r\n                            switch (weapon.getTexture()) {\r\n                                case \"longsword\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 100);\r\n                                    break;\r\n                                case \"rapier\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 90);\r\n                                    break;\r\n                                case \"long_spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 120);\r\n                                    break;\r\n                                case \"spear\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 85);\r\n                                    break;\r\n                                case \"stick\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 80);\r\n                                    break;\r\n                                case \"nothing\":\r\n                                    getTimer().schedule(hitAnimationTask, 0, 70);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (getHitAnimationTime() == 4) hitSound.play(playerSounds.get(\"swish\"));\r\n                        bodyAnimation = \"player_\" + getWeapon().getAttackType() + \"_down_0\" + getHitAnimationTime();\r\n                        if (weapon.getTexture().equals(\"nothing\")) weaponAnimation = \"player_slash_down_0\" + getHitAnimationTime();\r\n                        else weaponAnimation = \"weapon_\" + getWeapon().getTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        headAnimation =  \"HEAD_\" + getHeadTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        beltAnimation = \"BELT_\" + getBeltTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        handsAnimation = \"HANDS_\" + getHandsTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        legsAnimation = \"LEGS_\" + getLegsTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                        feetAnimation = \"FEET_\" + getFeetTexture() + \"_down_\" + getWeapon().getAttackType() + \"_0\" + getHitAnimationTime();\r\n                    }\r\n\r\n                    switch (getMoveDirection()) {\r\n                        case \"left\":\r\n                            getHitbox().update(getX() + 23, getY() + 15, getX() + 42, getY() + 59);\r\n                            break;\r\n                        case \"right\":\r\n                            getHitbox().update(getX() + 21, getY() + 15, getX() + 40, getY() + 59);\r\n                            break;\r\n                        case \"up\":\r\n                            getHitbox().update(getX() + 20, getY() + 15, getX() + 43, getY() + 60);\r\n                            break;\r\n                        case \"down\":\r\n                            getHitbox().update(getX() + 20, getY() + 15, getX() + 43, getY() + 61);\r\n                            break;\r\n                    }\r\n                    getCollisionBox().update(getX() + 17, getY() + 52, getX() + 46, getY() + 60);\r\n                    reArmor();\r\n                }\r\n            }\r\n            // В городе\r\n            else if (level.equals(\"Town\") && !dialogBubble && !scrollMenu) {\r\n                bodyAnimation = \"player_stand_\" + getMoveDirection();\r\n                headAnimation = \"HEAD_\" + getHeadTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                beltAnimation = \"BELT_\" + getBeltTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                handsAnimation = \"HANDS_\" + getHandsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                legsAnimation = \"LEGS_\" + getLegsTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n                feetAnimation = \"FEET_\" + getFeetTexture() + \"_\" + getMoveDirection() + \"_move_01\";\r\n\r\n                if (glfwGetKey(window, GLFW_KEY_A) == GLFW_PRESS) {\r\n                    if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                    if (player_animation_move_left_i == 3 || player_animation_move_left_i == 6)\r\n                        stepSound.play(playerSounds.get(\"stepStone\"));\r\n                    bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                    headAnimation = \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    if (player_animation_move_g == 8) {\r\n                        player_animation_move_left_i++;\r\n                        player_animation_move_g = 0;\r\n                    }\r\n                    player_animation_move_g++;\r\n                    moveLeft();\r\n                    if (!(getX() <= 290) && !(getX() > 1186)) {\r\n                        glTranslated(1, 0, 0);\r\n                        forPlacingCamera--;\r\n                    }\r\n                    if (getX() + 40 > 1410 && getX() + 40 < 1503) {\r\n                        if (getY() != 192) setY(getY() + 1);\r\n                    }\r\n                }\r\n                else if (glfwGetKey(window, GLFW_KEY_D) == GLFW_PRESS) {\r\n                    if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                    if (player_animation_move_right_i == 3 || player_animation_move_right_i == 6)\r\n                        stepSound.play(playerSounds.get(\"stepStone\"));\r\n                    bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                    headAnimation = \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    if (player_animation_move_g == 8) {\r\n                        player_animation_move_right_i++;\r\n                        player_animation_move_g = 0;\r\n                    }\r\n                    player_animation_move_g++;\r\n                    moveRight();\r\n                    if (!(getX() > 1186) && !(getX() <= 290)) {\r\n                        glTranslated(-1, 0, 0);\r\n                        forPlacingCamera++;\r\n                    }\r\n                    if (getX() + 40 > 1410 && getX() + 40 < 1503) {\r\n                        if (getY() != 100) setY(getY() - 1);\r\n                    }\r\n                }\r\n            }\r\n            // В главном меню\r\n            else if (level.equals(\"MainMenu\")) {\r\n                if (mainMenuDirection) {\r\n                    if (player_animation_move_right_i == 10) player_animation_move_right_i = 2;\r\n                    bodyAnimation = \"player_walk_right_0\" + player_animation_move_right_i;\r\n                    headAnimation = \"HEAD_\" + getHeadTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_right_move_0\" + player_animation_move_right_i;\r\n                    if (player_animation_move_g == 8) {\r\n                        player_animation_move_right_i++;\r\n                        player_animation_move_g = 0;\r\n                    }\r\n                    player_animation_move_g++;\r\n                    moveRight();\r\n                }\r\n                else if (!mainMenuDirection) {\r\n                    if (player_animation_move_left_i == 10) player_animation_move_left_i = 2;\r\n                    bodyAnimation = \"player_walk_left_0\" + player_animation_move_left_i;\r\n                    headAnimation =  \"HEAD_\" + getHeadTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    shouldersAnimation =  \"SHOULDERS_\" + getShouldersTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_right_move_0\" + player_animation_move_left_i;\r\n                    torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    beltAnimation = \"BELT_\" + getBeltTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    handsAnimation = \"HANDS_\" + getHandsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    legsAnimation = \"LEGS_\" + getLegsTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    feetAnimation = \"FEET_\" + getFeetTexture() + \"_left_move_0\" + player_animation_move_left_i;\r\n                    if (player_animation_move_g == 8) {\r\n                        player_animation_move_left_i++;\r\n                        player_animation_move_g = 0;\r\n                    }\r\n                    player_animation_move_g++;\r\n                    moveLeft();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            bodyAnimation = \"player_hurt_0\" + getDeathAnimationTime();\r\n            headAnimation = \"HEAD_\" + getHeadTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            shouldersAnimation = \"SHOULDERS_\" + getShouldersTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            overTorsoAnimation = \"TORSO_\" + getOverTorsoTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            torsoAnimation = \"TORSO_\" + getTorsoTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            beltAnimation = \"BELT_\" + getBeltTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            handsAnimation = \"HANDS_\" + getHandsTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            legsAnimation = \"LEGS_\" + getLegsTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n            feetAnimation = \"FEET_\" + getFeetTexture() + \"_hurt_0\" + getDeathAnimationTime();\r\n        }\r\n    }\r\n\r\n    public void updateDamage() { setDamage(weapon.getDamage());}\r\n\r\n    public void reArmor() {\r\n        this.setArmor(head.getDefense() + shoulders.getDefense() + overTorso.getDefense() + torso.getDefense() + belt.getDefense() +\r\n                hands.getDefense() + legs.getDefense() + feet.getDefense());\r\n    }\r\n\r\n    public Armor getArmorType(Armor armor) {\r\n        switch (armor.getType()) {\r\n            case \"head\": return head;\r\n            case \"shoulders\": return shoulders;\r\n            case \"overTorso\": return overTorso;\r\n            case \"torso\": return torso;\r\n            case \"belt\": return belt;\r\n            case \"hands\": return hands;\r\n            case \"legs\": return legs;\r\n            case \"feet\": return feet;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public void setArmor(Armor armor) {\r\n        switch (armor.getType()) {\r\n            case \"head\":\r\n                head = armor;\r\n                break;\r\n            case \"shoulders\":\r\n                shoulders = armor;\r\n                break;\r\n            case \"overTorso\":\r\n                overTorso = armor;\r\n                break;\r\n            case \"torso\":\r\n                torso = armor;\r\n                break;\r\n            case \"belt\":\r\n                belt = armor;\r\n                break;\r\n            case \"hands\":\r\n                hands = armor;\r\n                break;\r\n            case \"legs\":\r\n                legs = armor;\r\n                break;\r\n            case \"feet\":\r\n                feet = armor;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public Weapon getWeapon() { return weapon; }\r\n\r\n    public void setWeapon(Weapon weapon) { this.weapon = weapon; }\r\n\r\n    public int getForPlacingCamera() { return forPlacingCamera; }\r\n\r\n    public void setForPlacingCamera(int forPlacingCamera) { this.forPlacingCamera = forPlacingCamera; }\r\n\r\n    public String getHeadTexture() { return head.getTexture(); }\r\n\r\n    public String getShouldersTexture() { return shoulders.getTexture(); }\r\n\r\n    public String getOverTorsoTexture() { return overTorso.getTexture(); }\r\n\r\n    public String getTorsoTexture() { return torso.getTexture(); }\r\n\r\n    public String getBeltTexture() { return belt.getTexture(); }\r\n\r\n    public String getHandsTexture() { return hands.getTexture(); }\r\n\r\n    public String getLegsTexture() { return legs.getTexture(); }\r\n\r\n    public String getFeetTexture() { return feet.getTexture(); }\r\n\r\n    public String getBodyAnimation() { return bodyAnimation; }\r\n\r\n    public String getWeaponAnimation() { return weaponAnimation; }\r\n\r\n    public String getHeadAnimation() { return headAnimation; }\r\n\r\n    public String getShouldersAnimation() { return shouldersAnimation; }\r\n\r\n    public String getOverTorsoAnimation() { return overTorsoAnimation; }\r\n\r\n    public String getTorsoAnimation() { return torsoAnimation; }\r\n\r\n    public String getBeltAnimation() { return beltAnimation; }\r\n\r\n    public String getHandsAnimation() { return handsAnimation; }\r\n\r\n    public String getLegsAnimation() { return legsAnimation; }\r\n\r\n    public String getFeetAnimation() { return feetAnimation; }\r\n\r\n    public HashMap<String, Integer> getPlayerSounds() { return playerSounds; }\r\n\r\n    public Source getStepSound() { return stepSound; }\r\n\r\n    public int getMoney() { return money; }\r\n\r\n    public void setMoney(int money) { this.money = money; }\r\n\r\n    public int getKeys() { return keys; }\r\n\r\n    public void setKeys(int keys) { this.keys = keys; }\r\n\r\n    public boolean isDialogBubbleChoice() { return dialogBubbleChoice; }\r\n\r\n    public void setDialogBubbleChoice(boolean dialogBubbleChoice) {\r\n        this.dialogBubbleChoice = dialogBubbleChoice;\r\n        selectionMenuSound.play(playerSounds.get(\"selectionClick\"));\r\n    }\r\n\r\n    public boolean isDialogBubble() { return dialogBubble; }\r\n\r\n    public void setDialogBubble(boolean dialogBubble) { this.dialogBubble = dialogBubble; }\r\n\r\n    public boolean isScrollMenu() { return scrollMenu; }\r\n\r\n    public void setScrollMenu(boolean scrollMenu) {\r\n        this.scrollMenu = scrollMenu;\r\n        openMenuSound.play(playerSounds.get(\"openMenu\"));\r\n    }\r\n\r\n    public String getMenuChoice() { return menuChoice; }\r\n\r\n    public void setMenuChoice(String menuChoice) {\r\n        this.menuChoice = menuChoice;\r\n        selectionMenuSound.play(playerSounds.get(\"selectionClick\"));\r\n    }\r\n\r\n    public void setMainMenuDirection(boolean mainMenuDirection) { this.mainMenuDirection = mainMenuDirection; }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/mobs/Player.java	(revision cb083484c6fe6b906aed841b0ba31df6c5f39743)
+++ src/mobs/Player.java	(date 1598795613630)
@@ -258,9 +258,9 @@
         setHitAnimationTime(1);
         setDeathAnimationTime(0);
         setKnockBackTime(0);
-        money = 30;
+        money = 0;
         keys = 1;
-        weapon = new Weapon("nothing", "slash", 10, new AABB());
+        weapon = new Weapon("stick", "thrust", 10, new AABB());
         head = new Armor("nothing", "head", 0, true);
         shoulders = new Armor("nothing", "shoulders", 0, true);
         overTorso = new Armor("nothing", "overTorso", 0, true);
Index: src/singletons/SingletonPlayer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package singletons;\r\n\r\nimport mobs.Player;\r\n\r\npublic class SingletonPlayer {\r\n    public static Player player;\r\n    private static SingletonPlayer instance;\r\n\r\n    private SingletonPlayer() { player = new Player(290, 192, 1, 60, 0, 10); }\r\n\r\n    public static SingletonPlayer getInstance() {\r\n        if (instance == null) { instance = new SingletonPlayer(); }\r\n        return instance;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/singletons/SingletonPlayer.java	(revision cb083484c6fe6b906aed841b0ba31df6c5f39743)
+++ src/singletons/SingletonPlayer.java	(date 1598796215077)
@@ -6,7 +6,7 @@
     public static Player player;
     private static SingletonPlayer instance;
 
-    private SingletonPlayer() { player = new Player(290, 192, 1, 60, 0, 10); }
+    private SingletonPlayer() { player = new Player(290, 192, 1, 100, 0, 10); }
 
     public static SingletonPlayer getInstance() {
         if (instance == null) { instance = new SingletonPlayer(); }
